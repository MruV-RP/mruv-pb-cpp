// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vehicles/vehicles.proto

#include "vehicles/vehicles.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace mruv {
namespace vehicles {
class CreateVehicleRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateVehicleRequest> _instance;
} _CreateVehicleRequest_default_instance_;
class CreateVehicleResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateVehicleResponse> _instance;
} _CreateVehicleResponse_default_instance_;
class GetVehicleRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetVehicleRequest> _instance;
} _GetVehicleRequest_default_instance_;
class GetVehicleResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetVehicleResponse> _instance;
} _GetVehicleResponse_default_instance_;
class UpdateVehicleRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateVehicleRequest> _instance;
} _UpdateVehicleRequest_default_instance_;
class UpdateVehicleResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateVehicleResponse> _instance;
} _UpdateVehicleResponse_default_instance_;
class DeleteVehicleRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteVehicleRequest> _instance;
} _DeleteVehicleRequest_default_instance_;
class DeleteVehicleResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteVehicleResponse> _instance;
} _DeleteVehicleResponse_default_instance_;
}  // namespace vehicles
}  // namespace mruv
static void InitDefaultsscc_info_CreateVehicleRequest_vehicles_2fvehicles_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::vehicles::_CreateVehicleRequest_default_instance_;
    new (ptr) ::mruv::vehicles::CreateVehicleRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::vehicles::CreateVehicleRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateVehicleRequest_vehicles_2fvehicles_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateVehicleRequest_vehicles_2fvehicles_2eproto}, {}};

static void InitDefaultsscc_info_CreateVehicleResponse_vehicles_2fvehicles_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::vehicles::_CreateVehicleResponse_default_instance_;
    new (ptr) ::mruv::vehicles::CreateVehicleResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::vehicles::CreateVehicleResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateVehicleResponse_vehicles_2fvehicles_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateVehicleResponse_vehicles_2fvehicles_2eproto}, {}};

static void InitDefaultsscc_info_DeleteVehicleRequest_vehicles_2fvehicles_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::vehicles::_DeleteVehicleRequest_default_instance_;
    new (ptr) ::mruv::vehicles::DeleteVehicleRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::vehicles::DeleteVehicleRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteVehicleRequest_vehicles_2fvehicles_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteVehicleRequest_vehicles_2fvehicles_2eproto}, {}};

static void InitDefaultsscc_info_DeleteVehicleResponse_vehicles_2fvehicles_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::vehicles::_DeleteVehicleResponse_default_instance_;
    new (ptr) ::mruv::vehicles::DeleteVehicleResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::vehicles::DeleteVehicleResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteVehicleResponse_vehicles_2fvehicles_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteVehicleResponse_vehicles_2fvehicles_2eproto}, {}};

static void InitDefaultsscc_info_GetVehicleRequest_vehicles_2fvehicles_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::vehicles::_GetVehicleRequest_default_instance_;
    new (ptr) ::mruv::vehicles::GetVehicleRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::vehicles::GetVehicleRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetVehicleRequest_vehicles_2fvehicles_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetVehicleRequest_vehicles_2fvehicles_2eproto}, {}};

static void InitDefaultsscc_info_GetVehicleResponse_vehicles_2fvehicles_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::vehicles::_GetVehicleResponse_default_instance_;
    new (ptr) ::mruv::vehicles::GetVehicleResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::vehicles::GetVehicleResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetVehicleResponse_vehicles_2fvehicles_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetVehicleResponse_vehicles_2fvehicles_2eproto}, {}};

static void InitDefaultsscc_info_UpdateVehicleRequest_vehicles_2fvehicles_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::vehicles::_UpdateVehicleRequest_default_instance_;
    new (ptr) ::mruv::vehicles::UpdateVehicleRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::vehicles::UpdateVehicleRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateVehicleRequest_vehicles_2fvehicles_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateVehicleRequest_vehicles_2fvehicles_2eproto}, {}};

static void InitDefaultsscc_info_UpdateVehicleResponse_vehicles_2fvehicles_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::vehicles::_UpdateVehicleResponse_default_instance_;
    new (ptr) ::mruv::vehicles::UpdateVehicleResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::vehicles::UpdateVehicleResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateVehicleResponse_vehicles_2fvehicles_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateVehicleResponse_vehicles_2fvehicles_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_vehicles_2fvehicles_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_vehicles_2fvehicles_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_vehicles_2fvehicles_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_vehicles_2fvehicles_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::vehicles::CreateVehicleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::vehicles::CreateVehicleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::vehicles::GetVehicleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::vehicles::GetVehicleRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::vehicles::GetVehicleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::vehicles::UpdateVehicleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::vehicles::UpdateVehicleRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::vehicles::UpdateVehicleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::vehicles::DeleteVehicleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::vehicles::DeleteVehicleRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::vehicles::DeleteVehicleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mruv::vehicles::CreateVehicleRequest)},
  { 5, -1, sizeof(::mruv::vehicles::CreateVehicleResponse)},
  { 10, -1, sizeof(::mruv::vehicles::GetVehicleRequest)},
  { 16, -1, sizeof(::mruv::vehicles::GetVehicleResponse)},
  { 21, -1, sizeof(::mruv::vehicles::UpdateVehicleRequest)},
  { 27, -1, sizeof(::mruv::vehicles::UpdateVehicleResponse)},
  { 32, -1, sizeof(::mruv::vehicles::DeleteVehicleRequest)},
  { 38, -1, sizeof(::mruv::vehicles::DeleteVehicleResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::vehicles::_CreateVehicleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::vehicles::_CreateVehicleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::vehicles::_GetVehicleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::vehicles::_GetVehicleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::vehicles::_UpdateVehicleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::vehicles::_UpdateVehicleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::vehicles::_DeleteVehicleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::vehicles::_DeleteVehicleResponse_default_instance_),
};

const char descriptor_table_protodef_vehicles_2fvehicles_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027vehicles/vehicles.proto\022\rmruv.vehicles"
  "\032\034google/api/annotations.proto\"\026\n\024Create"
  "VehicleRequest\"\027\n\025CreateVehicleResponse\""
  "\037\n\021GetVehicleRequest\022\n\n\002id\030\001 \001(\r\"\024\n\022GetV"
  "ehicleResponse\"\"\n\024UpdateVehicleRequest\022\n"
  "\n\002id\030\001 \001(\r\"\027\n\025UpdateVehicleResponse\"\"\n\024D"
  "eleteVehicleRequest\022\n\n\002id\030\001 \001(\r\"\027\n\025Delet"
  "eVehicleResponse2\351\003\n\023MruVVehiclesService"
  "\022s\n\rCreateVehicle\022#.mruv.vehicles.Create"
  "VehicleRequest\032$.mruv.vehicles.CreateVeh"
  "icleResponse\"\027\202\323\344\223\002\021\"\014/v1/vehicles:\001*\022l\n"
  "\nGetVehicle\022 .mruv.vehicles.GetVehicleRe"
  "quest\032!.mruv.vehicles.GetVehicleResponse"
  "\"\031\202\323\344\223\002\023\022\021/v1/vehicles/{id}\022x\n\rUpdateVeh"
  "icle\022#.mruv.vehicles.UpdateVehicleReques"
  "t\032$.mruv.vehicles.UpdateVehicleResponse\""
  "\034\202\323\344\223\002\0262\021/v1/vehicles/{id}:\001*\022u\n\rDeleteV"
  "ehicle\022#.mruv.vehicles.DeleteVehicleRequ"
  "est\032$.mruv.vehicles.DeleteVehicleRespons"
  "e\"\031\202\323\344\223\002\023*\021/v1/vehicles/{id}B(Z&github.c"
  "om/MruV-RP/mruv-pb-go/vehiclesb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_vehicles_2fvehicles_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_vehicles_2fvehicles_2eproto_sccs[8] = {
  &scc_info_CreateVehicleRequest_vehicles_2fvehicles_2eproto.base,
  &scc_info_CreateVehicleResponse_vehicles_2fvehicles_2eproto.base,
  &scc_info_DeleteVehicleRequest_vehicles_2fvehicles_2eproto.base,
  &scc_info_DeleteVehicleResponse_vehicles_2fvehicles_2eproto.base,
  &scc_info_GetVehicleRequest_vehicles_2fvehicles_2eproto.base,
  &scc_info_GetVehicleResponse_vehicles_2fvehicles_2eproto.base,
  &scc_info_UpdateVehicleRequest_vehicles_2fvehicles_2eproto.base,
  &scc_info_UpdateVehicleResponse_vehicles_2fvehicles_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_vehicles_2fvehicles_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_vehicles_2fvehicles_2eproto = {
  false, false, descriptor_table_protodef_vehicles_2fvehicles_2eproto, "vehicles/vehicles.proto", 838,
  &descriptor_table_vehicles_2fvehicles_2eproto_once, descriptor_table_vehicles_2fvehicles_2eproto_sccs, descriptor_table_vehicles_2fvehicles_2eproto_deps, 8, 1,
  schemas, file_default_instances, TableStruct_vehicles_2fvehicles_2eproto::offsets,
  file_level_metadata_vehicles_2fvehicles_2eproto, 8, file_level_enum_descriptors_vehicles_2fvehicles_2eproto, file_level_service_descriptors_vehicles_2fvehicles_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_vehicles_2fvehicles_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_vehicles_2fvehicles_2eproto)), true);
namespace mruv {
namespace vehicles {

// ===================================================================

void CreateVehicleRequest::InitAsDefaultInstance() {
}
class CreateVehicleRequest::_Internal {
 public:
};

CreateVehicleRequest::CreateVehicleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.vehicles.CreateVehicleRequest)
}
CreateVehicleRequest::CreateVehicleRequest(const CreateVehicleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.vehicles.CreateVehicleRequest)
}

void CreateVehicleRequest::SharedCtor() {
}

CreateVehicleRequest::~CreateVehicleRequest() {
  // @@protoc_insertion_point(destructor:mruv.vehicles.CreateVehicleRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateVehicleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateVehicleRequest::ArenaDtor(void* object) {
  CreateVehicleRequest* _this = reinterpret_cast< CreateVehicleRequest* >(object);
  (void)_this;
}
void CreateVehicleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateVehicleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateVehicleRequest& CreateVehicleRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateVehicleRequest_vehicles_2fvehicles_2eproto.base);
  return *internal_default_instance();
}


void CreateVehicleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.vehicles.CreateVehicleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateVehicleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateVehicleRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.vehicles.CreateVehicleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.vehicles.CreateVehicleRequest)
  return target;
}

size_t CreateVehicleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.vehicles.CreateVehicleRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateVehicleRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.vehicles.CreateVehicleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateVehicleRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateVehicleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.vehicles.CreateVehicleRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.vehicles.CreateVehicleRequest)
    MergeFrom(*source);
  }
}

void CreateVehicleRequest::MergeFrom(const CreateVehicleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.vehicles.CreateVehicleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateVehicleRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.vehicles.CreateVehicleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateVehicleRequest::CopyFrom(const CreateVehicleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.vehicles.CreateVehicleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVehicleRequest::IsInitialized() const {
  return true;
}

void CreateVehicleRequest::InternalSwap(CreateVehicleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateVehicleRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateVehicleResponse::InitAsDefaultInstance() {
}
class CreateVehicleResponse::_Internal {
 public:
};

CreateVehicleResponse::CreateVehicleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.vehicles.CreateVehicleResponse)
}
CreateVehicleResponse::CreateVehicleResponse(const CreateVehicleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.vehicles.CreateVehicleResponse)
}

void CreateVehicleResponse::SharedCtor() {
}

CreateVehicleResponse::~CreateVehicleResponse() {
  // @@protoc_insertion_point(destructor:mruv.vehicles.CreateVehicleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateVehicleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateVehicleResponse::ArenaDtor(void* object) {
  CreateVehicleResponse* _this = reinterpret_cast< CreateVehicleResponse* >(object);
  (void)_this;
}
void CreateVehicleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateVehicleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateVehicleResponse& CreateVehicleResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateVehicleResponse_vehicles_2fvehicles_2eproto.base);
  return *internal_default_instance();
}


void CreateVehicleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.vehicles.CreateVehicleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateVehicleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateVehicleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.vehicles.CreateVehicleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.vehicles.CreateVehicleResponse)
  return target;
}

size_t CreateVehicleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.vehicles.CreateVehicleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateVehicleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.vehicles.CreateVehicleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateVehicleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateVehicleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.vehicles.CreateVehicleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.vehicles.CreateVehicleResponse)
    MergeFrom(*source);
  }
}

void CreateVehicleResponse::MergeFrom(const CreateVehicleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.vehicles.CreateVehicleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateVehicleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.vehicles.CreateVehicleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateVehicleResponse::CopyFrom(const CreateVehicleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.vehicles.CreateVehicleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVehicleResponse::IsInitialized() const {
  return true;
}

void CreateVehicleResponse::InternalSwap(CreateVehicleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateVehicleResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetVehicleRequest::InitAsDefaultInstance() {
}
class GetVehicleRequest::_Internal {
 public:
};

GetVehicleRequest::GetVehicleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.vehicles.GetVehicleRequest)
}
GetVehicleRequest::GetVehicleRequest(const GetVehicleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.vehicles.GetVehicleRequest)
}

void GetVehicleRequest::SharedCtor() {
  id_ = 0u;
}

GetVehicleRequest::~GetVehicleRequest() {
  // @@protoc_insertion_point(destructor:mruv.vehicles.GetVehicleRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetVehicleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetVehicleRequest::ArenaDtor(void* object) {
  GetVehicleRequest* _this = reinterpret_cast< GetVehicleRequest* >(object);
  (void)_this;
}
void GetVehicleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVehicleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetVehicleRequest& GetVehicleRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetVehicleRequest_vehicles_2fvehicles_2eproto.base);
  return *internal_default_instance();
}


void GetVehicleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.vehicles.GetVehicleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVehicleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetVehicleRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.vehicles.GetVehicleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.vehicles.GetVehicleRequest)
  return target;
}

size_t GetVehicleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.vehicles.GetVehicleRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVehicleRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.vehicles.GetVehicleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVehicleRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetVehicleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.vehicles.GetVehicleRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.vehicles.GetVehicleRequest)
    MergeFrom(*source);
  }
}

void GetVehicleRequest::MergeFrom(const GetVehicleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.vehicles.GetVehicleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetVehicleRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.vehicles.GetVehicleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVehicleRequest::CopyFrom(const GetVehicleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.vehicles.GetVehicleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVehicleRequest::IsInitialized() const {
  return true;
}

void GetVehicleRequest::InternalSwap(GetVehicleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVehicleRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetVehicleResponse::InitAsDefaultInstance() {
}
class GetVehicleResponse::_Internal {
 public:
};

GetVehicleResponse::GetVehicleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.vehicles.GetVehicleResponse)
}
GetVehicleResponse::GetVehicleResponse(const GetVehicleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.vehicles.GetVehicleResponse)
}

void GetVehicleResponse::SharedCtor() {
}

GetVehicleResponse::~GetVehicleResponse() {
  // @@protoc_insertion_point(destructor:mruv.vehicles.GetVehicleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetVehicleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetVehicleResponse::ArenaDtor(void* object) {
  GetVehicleResponse* _this = reinterpret_cast< GetVehicleResponse* >(object);
  (void)_this;
}
void GetVehicleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVehicleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetVehicleResponse& GetVehicleResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetVehicleResponse_vehicles_2fvehicles_2eproto.base);
  return *internal_default_instance();
}


void GetVehicleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.vehicles.GetVehicleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVehicleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetVehicleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.vehicles.GetVehicleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.vehicles.GetVehicleResponse)
  return target;
}

size_t GetVehicleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.vehicles.GetVehicleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVehicleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.vehicles.GetVehicleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVehicleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetVehicleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.vehicles.GetVehicleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.vehicles.GetVehicleResponse)
    MergeFrom(*source);
  }
}

void GetVehicleResponse::MergeFrom(const GetVehicleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.vehicles.GetVehicleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetVehicleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.vehicles.GetVehicleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVehicleResponse::CopyFrom(const GetVehicleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.vehicles.GetVehicleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVehicleResponse::IsInitialized() const {
  return true;
}

void GetVehicleResponse::InternalSwap(GetVehicleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVehicleResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateVehicleRequest::InitAsDefaultInstance() {
}
class UpdateVehicleRequest::_Internal {
 public:
};

UpdateVehicleRequest::UpdateVehicleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.vehicles.UpdateVehicleRequest)
}
UpdateVehicleRequest::UpdateVehicleRequest(const UpdateVehicleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.vehicles.UpdateVehicleRequest)
}

void UpdateVehicleRequest::SharedCtor() {
  id_ = 0u;
}

UpdateVehicleRequest::~UpdateVehicleRequest() {
  // @@protoc_insertion_point(destructor:mruv.vehicles.UpdateVehicleRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateVehicleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateVehicleRequest::ArenaDtor(void* object) {
  UpdateVehicleRequest* _this = reinterpret_cast< UpdateVehicleRequest* >(object);
  (void)_this;
}
void UpdateVehicleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateVehicleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateVehicleRequest& UpdateVehicleRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateVehicleRequest_vehicles_2fvehicles_2eproto.base);
  return *internal_default_instance();
}


void UpdateVehicleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.vehicles.UpdateVehicleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateVehicleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateVehicleRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.vehicles.UpdateVehicleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.vehicles.UpdateVehicleRequest)
  return target;
}

size_t UpdateVehicleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.vehicles.UpdateVehicleRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateVehicleRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.vehicles.UpdateVehicleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateVehicleRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateVehicleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.vehicles.UpdateVehicleRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.vehicles.UpdateVehicleRequest)
    MergeFrom(*source);
  }
}

void UpdateVehicleRequest::MergeFrom(const UpdateVehicleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.vehicles.UpdateVehicleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void UpdateVehicleRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.vehicles.UpdateVehicleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateVehicleRequest::CopyFrom(const UpdateVehicleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.vehicles.UpdateVehicleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateVehicleRequest::IsInitialized() const {
  return true;
}

void UpdateVehicleRequest::InternalSwap(UpdateVehicleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateVehicleRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateVehicleResponse::InitAsDefaultInstance() {
}
class UpdateVehicleResponse::_Internal {
 public:
};

UpdateVehicleResponse::UpdateVehicleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.vehicles.UpdateVehicleResponse)
}
UpdateVehicleResponse::UpdateVehicleResponse(const UpdateVehicleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.vehicles.UpdateVehicleResponse)
}

void UpdateVehicleResponse::SharedCtor() {
}

UpdateVehicleResponse::~UpdateVehicleResponse() {
  // @@protoc_insertion_point(destructor:mruv.vehicles.UpdateVehicleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateVehicleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateVehicleResponse::ArenaDtor(void* object) {
  UpdateVehicleResponse* _this = reinterpret_cast< UpdateVehicleResponse* >(object);
  (void)_this;
}
void UpdateVehicleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateVehicleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateVehicleResponse& UpdateVehicleResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateVehicleResponse_vehicles_2fvehicles_2eproto.base);
  return *internal_default_instance();
}


void UpdateVehicleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.vehicles.UpdateVehicleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateVehicleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateVehicleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.vehicles.UpdateVehicleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.vehicles.UpdateVehicleResponse)
  return target;
}

size_t UpdateVehicleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.vehicles.UpdateVehicleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateVehicleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.vehicles.UpdateVehicleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateVehicleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateVehicleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.vehicles.UpdateVehicleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.vehicles.UpdateVehicleResponse)
    MergeFrom(*source);
  }
}

void UpdateVehicleResponse::MergeFrom(const UpdateVehicleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.vehicles.UpdateVehicleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateVehicleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.vehicles.UpdateVehicleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateVehicleResponse::CopyFrom(const UpdateVehicleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.vehicles.UpdateVehicleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateVehicleResponse::IsInitialized() const {
  return true;
}

void UpdateVehicleResponse::InternalSwap(UpdateVehicleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateVehicleResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteVehicleRequest::InitAsDefaultInstance() {
}
class DeleteVehicleRequest::_Internal {
 public:
};

DeleteVehicleRequest::DeleteVehicleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.vehicles.DeleteVehicleRequest)
}
DeleteVehicleRequest::DeleteVehicleRequest(const DeleteVehicleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.vehicles.DeleteVehicleRequest)
}

void DeleteVehicleRequest::SharedCtor() {
  id_ = 0u;
}

DeleteVehicleRequest::~DeleteVehicleRequest() {
  // @@protoc_insertion_point(destructor:mruv.vehicles.DeleteVehicleRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteVehicleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteVehicleRequest::ArenaDtor(void* object) {
  DeleteVehicleRequest* _this = reinterpret_cast< DeleteVehicleRequest* >(object);
  (void)_this;
}
void DeleteVehicleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteVehicleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteVehicleRequest& DeleteVehicleRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteVehicleRequest_vehicles_2fvehicles_2eproto.base);
  return *internal_default_instance();
}


void DeleteVehicleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.vehicles.DeleteVehicleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteVehicleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteVehicleRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.vehicles.DeleteVehicleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.vehicles.DeleteVehicleRequest)
  return target;
}

size_t DeleteVehicleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.vehicles.DeleteVehicleRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteVehicleRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.vehicles.DeleteVehicleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteVehicleRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteVehicleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.vehicles.DeleteVehicleRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.vehicles.DeleteVehicleRequest)
    MergeFrom(*source);
  }
}

void DeleteVehicleRequest::MergeFrom(const DeleteVehicleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.vehicles.DeleteVehicleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteVehicleRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.vehicles.DeleteVehicleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteVehicleRequest::CopyFrom(const DeleteVehicleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.vehicles.DeleteVehicleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteVehicleRequest::IsInitialized() const {
  return true;
}

void DeleteVehicleRequest::InternalSwap(DeleteVehicleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteVehicleRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteVehicleResponse::InitAsDefaultInstance() {
}
class DeleteVehicleResponse::_Internal {
 public:
};

DeleteVehicleResponse::DeleteVehicleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.vehicles.DeleteVehicleResponse)
}
DeleteVehicleResponse::DeleteVehicleResponse(const DeleteVehicleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.vehicles.DeleteVehicleResponse)
}

void DeleteVehicleResponse::SharedCtor() {
}

DeleteVehicleResponse::~DeleteVehicleResponse() {
  // @@protoc_insertion_point(destructor:mruv.vehicles.DeleteVehicleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteVehicleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteVehicleResponse::ArenaDtor(void* object) {
  DeleteVehicleResponse* _this = reinterpret_cast< DeleteVehicleResponse* >(object);
  (void)_this;
}
void DeleteVehicleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteVehicleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteVehicleResponse& DeleteVehicleResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteVehicleResponse_vehicles_2fvehicles_2eproto.base);
  return *internal_default_instance();
}


void DeleteVehicleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.vehicles.DeleteVehicleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteVehicleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteVehicleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.vehicles.DeleteVehicleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.vehicles.DeleteVehicleResponse)
  return target;
}

size_t DeleteVehicleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.vehicles.DeleteVehicleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteVehicleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.vehicles.DeleteVehicleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteVehicleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteVehicleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.vehicles.DeleteVehicleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.vehicles.DeleteVehicleResponse)
    MergeFrom(*source);
  }
}

void DeleteVehicleResponse::MergeFrom(const DeleteVehicleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.vehicles.DeleteVehicleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteVehicleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.vehicles.DeleteVehicleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteVehicleResponse::CopyFrom(const DeleteVehicleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.vehicles.DeleteVehicleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteVehicleResponse::IsInitialized() const {
  return true;
}

void DeleteVehicleResponse::InternalSwap(DeleteVehicleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteVehicleResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace vehicles
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mruv::vehicles::CreateVehicleRequest* Arena::CreateMaybeMessage< ::mruv::vehicles::CreateVehicleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::vehicles::CreateVehicleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::vehicles::CreateVehicleResponse* Arena::CreateMaybeMessage< ::mruv::vehicles::CreateVehicleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::vehicles::CreateVehicleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::vehicles::GetVehicleRequest* Arena::CreateMaybeMessage< ::mruv::vehicles::GetVehicleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::vehicles::GetVehicleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::vehicles::GetVehicleResponse* Arena::CreateMaybeMessage< ::mruv::vehicles::GetVehicleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::vehicles::GetVehicleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::vehicles::UpdateVehicleRequest* Arena::CreateMaybeMessage< ::mruv::vehicles::UpdateVehicleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::vehicles::UpdateVehicleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::vehicles::UpdateVehicleResponse* Arena::CreateMaybeMessage< ::mruv::vehicles::UpdateVehicleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::vehicles::UpdateVehicleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::vehicles::DeleteVehicleRequest* Arena::CreateMaybeMessage< ::mruv::vehicles::DeleteVehicleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::vehicles::DeleteVehicleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::vehicles::DeleteVehicleResponse* Arena::CreateMaybeMessage< ::mruv::vehicles::DeleteVehicleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::vehicles::DeleteVehicleResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
