// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: houses/houses.proto

#include "houses/houses.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace mruv {
namespace houses {
class CreateHouseRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateHouseRequest> _instance;
} _CreateHouseRequest_default_instance_;
class CreateHouseResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateHouseResponse> _instance;
} _CreateHouseResponse_default_instance_;
class GetHouseRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetHouseRequest> _instance;
} _GetHouseRequest_default_instance_;
class GetHouseResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetHouseResponse> _instance;
} _GetHouseResponse_default_instance_;
class UpdateHouseRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateHouseRequest> _instance;
} _UpdateHouseRequest_default_instance_;
class UpdateHouseResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateHouseResponse> _instance;
} _UpdateHouseResponse_default_instance_;
class DeleteHouseRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteHouseRequest> _instance;
} _DeleteHouseRequest_default_instance_;
class DeleteHouseResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteHouseResponse> _instance;
} _DeleteHouseResponse_default_instance_;
}  // namespace houses
}  // namespace mruv
static void InitDefaultsscc_info_CreateHouseRequest_houses_2fhouses_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::houses::_CreateHouseRequest_default_instance_;
    new (ptr) ::mruv::houses::CreateHouseRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::houses::CreateHouseRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateHouseRequest_houses_2fhouses_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateHouseRequest_houses_2fhouses_2eproto}, {}};

static void InitDefaultsscc_info_CreateHouseResponse_houses_2fhouses_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::houses::_CreateHouseResponse_default_instance_;
    new (ptr) ::mruv::houses::CreateHouseResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::houses::CreateHouseResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateHouseResponse_houses_2fhouses_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateHouseResponse_houses_2fhouses_2eproto}, {}};

static void InitDefaultsscc_info_DeleteHouseRequest_houses_2fhouses_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::houses::_DeleteHouseRequest_default_instance_;
    new (ptr) ::mruv::houses::DeleteHouseRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::houses::DeleteHouseRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteHouseRequest_houses_2fhouses_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteHouseRequest_houses_2fhouses_2eproto}, {}};

static void InitDefaultsscc_info_DeleteHouseResponse_houses_2fhouses_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::houses::_DeleteHouseResponse_default_instance_;
    new (ptr) ::mruv::houses::DeleteHouseResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::houses::DeleteHouseResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteHouseResponse_houses_2fhouses_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteHouseResponse_houses_2fhouses_2eproto}, {}};

static void InitDefaultsscc_info_GetHouseRequest_houses_2fhouses_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::houses::_GetHouseRequest_default_instance_;
    new (ptr) ::mruv::houses::GetHouseRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::houses::GetHouseRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetHouseRequest_houses_2fhouses_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetHouseRequest_houses_2fhouses_2eproto}, {}};

static void InitDefaultsscc_info_GetHouseResponse_houses_2fhouses_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::houses::_GetHouseResponse_default_instance_;
    new (ptr) ::mruv::houses::GetHouseResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::houses::GetHouseResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetHouseResponse_houses_2fhouses_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetHouseResponse_houses_2fhouses_2eproto}, {}};

static void InitDefaultsscc_info_UpdateHouseRequest_houses_2fhouses_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::houses::_UpdateHouseRequest_default_instance_;
    new (ptr) ::mruv::houses::UpdateHouseRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::houses::UpdateHouseRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateHouseRequest_houses_2fhouses_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateHouseRequest_houses_2fhouses_2eproto}, {}};

static void InitDefaultsscc_info_UpdateHouseResponse_houses_2fhouses_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::houses::_UpdateHouseResponse_default_instance_;
    new (ptr) ::mruv::houses::UpdateHouseResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::houses::UpdateHouseResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateHouseResponse_houses_2fhouses_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateHouseResponse_houses_2fhouses_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_houses_2fhouses_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_houses_2fhouses_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_houses_2fhouses_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_houses_2fhouses_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::houses::CreateHouseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::houses::CreateHouseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::houses::GetHouseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::houses::GetHouseRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::houses::GetHouseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::houses::UpdateHouseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::houses::UpdateHouseRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::houses::UpdateHouseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::houses::DeleteHouseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::houses::DeleteHouseRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::houses::DeleteHouseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mruv::houses::CreateHouseRequest)},
  { 5, -1, sizeof(::mruv::houses::CreateHouseResponse)},
  { 10, -1, sizeof(::mruv::houses::GetHouseRequest)},
  { 16, -1, sizeof(::mruv::houses::GetHouseResponse)},
  { 21, -1, sizeof(::mruv::houses::UpdateHouseRequest)},
  { 27, -1, sizeof(::mruv::houses::UpdateHouseResponse)},
  { 32, -1, sizeof(::mruv::houses::DeleteHouseRequest)},
  { 38, -1, sizeof(::mruv::houses::DeleteHouseResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::houses::_CreateHouseRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::houses::_CreateHouseResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::houses::_GetHouseRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::houses::_GetHouseResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::houses::_UpdateHouseRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::houses::_UpdateHouseResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::houses::_DeleteHouseRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::houses::_DeleteHouseResponse_default_instance_),
};

const char descriptor_table_protodef_houses_2fhouses_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023houses/houses.proto\022\013mruv.houses\032\034goog"
  "le/api/annotations.proto\"\024\n\022CreateHouseR"
  "equest\"\025\n\023CreateHouseResponse\"\035\n\017GetHous"
  "eRequest\022\n\n\002id\030\001 \001(\r\"\022\n\020GetHouseResponse"
  "\" \n\022UpdateHouseRequest\022\n\n\002id\030\001 \001(\r\"\025\n\023Up"
  "dateHouseResponse\" \n\022DeleteHouseRequest\022"
  "\n\n\002id\030\001 \001(\r\"\025\n\023DeleteHouseResponse2\261\003\n\021M"
  "ruVHousesService\022d\n\013CreateHouse\022\037.mruv.h"
  "ouses.CreateHouseRequest\032 .mruv.houses.C"
  "reateHouseResponse\"\022\202\323\344\223\002\014\"\n/v1/houses\022`"
  "\n\010GetHouse\022\034.mruv.houses.GetHouseRequest"
  "\032\035.mruv.houses.GetHouseResponse\"\027\202\323\344\223\002\021\022"
  "\017/v1/houses/{id}\022i\n\013UpdateHouse\022\037.mruv.h"
  "ouses.UpdateHouseRequest\032 .mruv.houses.U"
  "pdateHouseResponse\"\027\202\323\344\223\002\0212\017/v1/houses/{"
  "id}\022i\n\013DeleteHouse\022\037.mruv.houses.DeleteH"
  "ouseRequest\032 .mruv.houses.DeleteHouseRes"
  "ponse\"\027\202\323\344\223\002\021*\017/v1/houses/{id}B&Z$github"
  ".com/MruV-RP/mruv-pb-go/housesb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_houses_2fhouses_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_houses_2fhouses_2eproto_sccs[8] = {
  &scc_info_CreateHouseRequest_houses_2fhouses_2eproto.base,
  &scc_info_CreateHouseResponse_houses_2fhouses_2eproto.base,
  &scc_info_DeleteHouseRequest_houses_2fhouses_2eproto.base,
  &scc_info_DeleteHouseResponse_houses_2fhouses_2eproto.base,
  &scc_info_GetHouseRequest_houses_2fhouses_2eproto.base,
  &scc_info_GetHouseResponse_houses_2fhouses_2eproto.base,
  &scc_info_UpdateHouseRequest_houses_2fhouses_2eproto.base,
  &scc_info_UpdateHouseResponse_houses_2fhouses_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_houses_2fhouses_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_houses_2fhouses_2eproto = {
  false, false, descriptor_table_protodef_houses_2fhouses_2eproto, "houses/houses.proto", 758,
  &descriptor_table_houses_2fhouses_2eproto_once, descriptor_table_houses_2fhouses_2eproto_sccs, descriptor_table_houses_2fhouses_2eproto_deps, 8, 1,
  schemas, file_default_instances, TableStruct_houses_2fhouses_2eproto::offsets,
  file_level_metadata_houses_2fhouses_2eproto, 8, file_level_enum_descriptors_houses_2fhouses_2eproto, file_level_service_descriptors_houses_2fhouses_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_houses_2fhouses_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_houses_2fhouses_2eproto)), true);
namespace mruv {
namespace houses {

// ===================================================================

void CreateHouseRequest::InitAsDefaultInstance() {
}
class CreateHouseRequest::_Internal {
 public:
};

CreateHouseRequest::CreateHouseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.houses.CreateHouseRequest)
}
CreateHouseRequest::CreateHouseRequest(const CreateHouseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.houses.CreateHouseRequest)
}

void CreateHouseRequest::SharedCtor() {
}

CreateHouseRequest::~CreateHouseRequest() {
  // @@protoc_insertion_point(destructor:mruv.houses.CreateHouseRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateHouseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateHouseRequest::ArenaDtor(void* object) {
  CreateHouseRequest* _this = reinterpret_cast< CreateHouseRequest* >(object);
  (void)_this;
}
void CreateHouseRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateHouseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateHouseRequest& CreateHouseRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateHouseRequest_houses_2fhouses_2eproto.base);
  return *internal_default_instance();
}


void CreateHouseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.houses.CreateHouseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateHouseRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateHouseRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.houses.CreateHouseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.houses.CreateHouseRequest)
  return target;
}

size_t CreateHouseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.houses.CreateHouseRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateHouseRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.houses.CreateHouseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateHouseRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateHouseRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.houses.CreateHouseRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.houses.CreateHouseRequest)
    MergeFrom(*source);
  }
}

void CreateHouseRequest::MergeFrom(const CreateHouseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.houses.CreateHouseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateHouseRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.houses.CreateHouseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateHouseRequest::CopyFrom(const CreateHouseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.houses.CreateHouseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateHouseRequest::IsInitialized() const {
  return true;
}

void CreateHouseRequest::InternalSwap(CreateHouseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateHouseRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateHouseResponse::InitAsDefaultInstance() {
}
class CreateHouseResponse::_Internal {
 public:
};

CreateHouseResponse::CreateHouseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.houses.CreateHouseResponse)
}
CreateHouseResponse::CreateHouseResponse(const CreateHouseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.houses.CreateHouseResponse)
}

void CreateHouseResponse::SharedCtor() {
}

CreateHouseResponse::~CreateHouseResponse() {
  // @@protoc_insertion_point(destructor:mruv.houses.CreateHouseResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateHouseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateHouseResponse::ArenaDtor(void* object) {
  CreateHouseResponse* _this = reinterpret_cast< CreateHouseResponse* >(object);
  (void)_this;
}
void CreateHouseResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateHouseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateHouseResponse& CreateHouseResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateHouseResponse_houses_2fhouses_2eproto.base);
  return *internal_default_instance();
}


void CreateHouseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.houses.CreateHouseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateHouseResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateHouseResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.houses.CreateHouseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.houses.CreateHouseResponse)
  return target;
}

size_t CreateHouseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.houses.CreateHouseResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateHouseResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.houses.CreateHouseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateHouseResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateHouseResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.houses.CreateHouseResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.houses.CreateHouseResponse)
    MergeFrom(*source);
  }
}

void CreateHouseResponse::MergeFrom(const CreateHouseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.houses.CreateHouseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateHouseResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.houses.CreateHouseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateHouseResponse::CopyFrom(const CreateHouseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.houses.CreateHouseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateHouseResponse::IsInitialized() const {
  return true;
}

void CreateHouseResponse::InternalSwap(CreateHouseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateHouseResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetHouseRequest::InitAsDefaultInstance() {
}
class GetHouseRequest::_Internal {
 public:
};

GetHouseRequest::GetHouseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.houses.GetHouseRequest)
}
GetHouseRequest::GetHouseRequest(const GetHouseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.houses.GetHouseRequest)
}

void GetHouseRequest::SharedCtor() {
  id_ = 0u;
}

GetHouseRequest::~GetHouseRequest() {
  // @@protoc_insertion_point(destructor:mruv.houses.GetHouseRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetHouseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetHouseRequest::ArenaDtor(void* object) {
  GetHouseRequest* _this = reinterpret_cast< GetHouseRequest* >(object);
  (void)_this;
}
void GetHouseRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetHouseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetHouseRequest& GetHouseRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetHouseRequest_houses_2fhouses_2eproto.base);
  return *internal_default_instance();
}


void GetHouseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.houses.GetHouseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetHouseRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetHouseRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.houses.GetHouseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.houses.GetHouseRequest)
  return target;
}

size_t GetHouseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.houses.GetHouseRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetHouseRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.houses.GetHouseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetHouseRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetHouseRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.houses.GetHouseRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.houses.GetHouseRequest)
    MergeFrom(*source);
  }
}

void GetHouseRequest::MergeFrom(const GetHouseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.houses.GetHouseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetHouseRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.houses.GetHouseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHouseRequest::CopyFrom(const GetHouseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.houses.GetHouseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHouseRequest::IsInitialized() const {
  return true;
}

void GetHouseRequest::InternalSwap(GetHouseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetHouseRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetHouseResponse::InitAsDefaultInstance() {
}
class GetHouseResponse::_Internal {
 public:
};

GetHouseResponse::GetHouseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.houses.GetHouseResponse)
}
GetHouseResponse::GetHouseResponse(const GetHouseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.houses.GetHouseResponse)
}

void GetHouseResponse::SharedCtor() {
}

GetHouseResponse::~GetHouseResponse() {
  // @@protoc_insertion_point(destructor:mruv.houses.GetHouseResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetHouseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetHouseResponse::ArenaDtor(void* object) {
  GetHouseResponse* _this = reinterpret_cast< GetHouseResponse* >(object);
  (void)_this;
}
void GetHouseResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetHouseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetHouseResponse& GetHouseResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetHouseResponse_houses_2fhouses_2eproto.base);
  return *internal_default_instance();
}


void GetHouseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.houses.GetHouseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetHouseResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetHouseResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.houses.GetHouseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.houses.GetHouseResponse)
  return target;
}

size_t GetHouseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.houses.GetHouseResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetHouseResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.houses.GetHouseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetHouseResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetHouseResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.houses.GetHouseResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.houses.GetHouseResponse)
    MergeFrom(*source);
  }
}

void GetHouseResponse::MergeFrom(const GetHouseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.houses.GetHouseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetHouseResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.houses.GetHouseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHouseResponse::CopyFrom(const GetHouseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.houses.GetHouseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHouseResponse::IsInitialized() const {
  return true;
}

void GetHouseResponse::InternalSwap(GetHouseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetHouseResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateHouseRequest::InitAsDefaultInstance() {
}
class UpdateHouseRequest::_Internal {
 public:
};

UpdateHouseRequest::UpdateHouseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.houses.UpdateHouseRequest)
}
UpdateHouseRequest::UpdateHouseRequest(const UpdateHouseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.houses.UpdateHouseRequest)
}

void UpdateHouseRequest::SharedCtor() {
  id_ = 0u;
}

UpdateHouseRequest::~UpdateHouseRequest() {
  // @@protoc_insertion_point(destructor:mruv.houses.UpdateHouseRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateHouseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateHouseRequest::ArenaDtor(void* object) {
  UpdateHouseRequest* _this = reinterpret_cast< UpdateHouseRequest* >(object);
  (void)_this;
}
void UpdateHouseRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateHouseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateHouseRequest& UpdateHouseRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateHouseRequest_houses_2fhouses_2eproto.base);
  return *internal_default_instance();
}


void UpdateHouseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.houses.UpdateHouseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateHouseRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateHouseRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.houses.UpdateHouseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.houses.UpdateHouseRequest)
  return target;
}

size_t UpdateHouseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.houses.UpdateHouseRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateHouseRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.houses.UpdateHouseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateHouseRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateHouseRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.houses.UpdateHouseRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.houses.UpdateHouseRequest)
    MergeFrom(*source);
  }
}

void UpdateHouseRequest::MergeFrom(const UpdateHouseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.houses.UpdateHouseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void UpdateHouseRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.houses.UpdateHouseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateHouseRequest::CopyFrom(const UpdateHouseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.houses.UpdateHouseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateHouseRequest::IsInitialized() const {
  return true;
}

void UpdateHouseRequest::InternalSwap(UpdateHouseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateHouseRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateHouseResponse::InitAsDefaultInstance() {
}
class UpdateHouseResponse::_Internal {
 public:
};

UpdateHouseResponse::UpdateHouseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.houses.UpdateHouseResponse)
}
UpdateHouseResponse::UpdateHouseResponse(const UpdateHouseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.houses.UpdateHouseResponse)
}

void UpdateHouseResponse::SharedCtor() {
}

UpdateHouseResponse::~UpdateHouseResponse() {
  // @@protoc_insertion_point(destructor:mruv.houses.UpdateHouseResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateHouseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateHouseResponse::ArenaDtor(void* object) {
  UpdateHouseResponse* _this = reinterpret_cast< UpdateHouseResponse* >(object);
  (void)_this;
}
void UpdateHouseResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateHouseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateHouseResponse& UpdateHouseResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateHouseResponse_houses_2fhouses_2eproto.base);
  return *internal_default_instance();
}


void UpdateHouseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.houses.UpdateHouseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateHouseResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateHouseResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.houses.UpdateHouseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.houses.UpdateHouseResponse)
  return target;
}

size_t UpdateHouseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.houses.UpdateHouseResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateHouseResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.houses.UpdateHouseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateHouseResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateHouseResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.houses.UpdateHouseResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.houses.UpdateHouseResponse)
    MergeFrom(*source);
  }
}

void UpdateHouseResponse::MergeFrom(const UpdateHouseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.houses.UpdateHouseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateHouseResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.houses.UpdateHouseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateHouseResponse::CopyFrom(const UpdateHouseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.houses.UpdateHouseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateHouseResponse::IsInitialized() const {
  return true;
}

void UpdateHouseResponse::InternalSwap(UpdateHouseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateHouseResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteHouseRequest::InitAsDefaultInstance() {
}
class DeleteHouseRequest::_Internal {
 public:
};

DeleteHouseRequest::DeleteHouseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.houses.DeleteHouseRequest)
}
DeleteHouseRequest::DeleteHouseRequest(const DeleteHouseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.houses.DeleteHouseRequest)
}

void DeleteHouseRequest::SharedCtor() {
  id_ = 0u;
}

DeleteHouseRequest::~DeleteHouseRequest() {
  // @@protoc_insertion_point(destructor:mruv.houses.DeleteHouseRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteHouseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteHouseRequest::ArenaDtor(void* object) {
  DeleteHouseRequest* _this = reinterpret_cast< DeleteHouseRequest* >(object);
  (void)_this;
}
void DeleteHouseRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteHouseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteHouseRequest& DeleteHouseRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteHouseRequest_houses_2fhouses_2eproto.base);
  return *internal_default_instance();
}


void DeleteHouseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.houses.DeleteHouseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteHouseRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteHouseRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.houses.DeleteHouseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.houses.DeleteHouseRequest)
  return target;
}

size_t DeleteHouseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.houses.DeleteHouseRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteHouseRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.houses.DeleteHouseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteHouseRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteHouseRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.houses.DeleteHouseRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.houses.DeleteHouseRequest)
    MergeFrom(*source);
  }
}

void DeleteHouseRequest::MergeFrom(const DeleteHouseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.houses.DeleteHouseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteHouseRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.houses.DeleteHouseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteHouseRequest::CopyFrom(const DeleteHouseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.houses.DeleteHouseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteHouseRequest::IsInitialized() const {
  return true;
}

void DeleteHouseRequest::InternalSwap(DeleteHouseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteHouseRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteHouseResponse::InitAsDefaultInstance() {
}
class DeleteHouseResponse::_Internal {
 public:
};

DeleteHouseResponse::DeleteHouseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.houses.DeleteHouseResponse)
}
DeleteHouseResponse::DeleteHouseResponse(const DeleteHouseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.houses.DeleteHouseResponse)
}

void DeleteHouseResponse::SharedCtor() {
}

DeleteHouseResponse::~DeleteHouseResponse() {
  // @@protoc_insertion_point(destructor:mruv.houses.DeleteHouseResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteHouseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteHouseResponse::ArenaDtor(void* object) {
  DeleteHouseResponse* _this = reinterpret_cast< DeleteHouseResponse* >(object);
  (void)_this;
}
void DeleteHouseResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteHouseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteHouseResponse& DeleteHouseResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteHouseResponse_houses_2fhouses_2eproto.base);
  return *internal_default_instance();
}


void DeleteHouseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.houses.DeleteHouseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteHouseResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteHouseResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.houses.DeleteHouseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.houses.DeleteHouseResponse)
  return target;
}

size_t DeleteHouseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.houses.DeleteHouseResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteHouseResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.houses.DeleteHouseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteHouseResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteHouseResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.houses.DeleteHouseResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.houses.DeleteHouseResponse)
    MergeFrom(*source);
  }
}

void DeleteHouseResponse::MergeFrom(const DeleteHouseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.houses.DeleteHouseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteHouseResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.houses.DeleteHouseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteHouseResponse::CopyFrom(const DeleteHouseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.houses.DeleteHouseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteHouseResponse::IsInitialized() const {
  return true;
}

void DeleteHouseResponse::InternalSwap(DeleteHouseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteHouseResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace houses
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mruv::houses::CreateHouseRequest* Arena::CreateMaybeMessage< ::mruv::houses::CreateHouseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::houses::CreateHouseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::houses::CreateHouseResponse* Arena::CreateMaybeMessage< ::mruv::houses::CreateHouseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::houses::CreateHouseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::houses::GetHouseRequest* Arena::CreateMaybeMessage< ::mruv::houses::GetHouseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::houses::GetHouseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::houses::GetHouseResponse* Arena::CreateMaybeMessage< ::mruv::houses::GetHouseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::houses::GetHouseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::houses::UpdateHouseRequest* Arena::CreateMaybeMessage< ::mruv::houses::UpdateHouseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::houses::UpdateHouseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::houses::UpdateHouseResponse* Arena::CreateMaybeMessage< ::mruv::houses::UpdateHouseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::houses::UpdateHouseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::houses::DeleteHouseRequest* Arena::CreateMaybeMessage< ::mruv::houses::DeleteHouseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::houses::DeleteHouseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::houses::DeleteHouseResponse* Arena::CreateMaybeMessage< ::mruv::houses::DeleteHouseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::houses::DeleteHouseResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
