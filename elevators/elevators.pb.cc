// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: elevators/elevators.proto

#include "elevators/elevators.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace mruv {
namespace elevators {
class CreateElevatorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateElevatorRequest> _instance;
} _CreateElevatorRequest_default_instance_;
class CreateElevatorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateElevatorResponse> _instance;
} _CreateElevatorResponse_default_instance_;
class GetElevatorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetElevatorRequest> _instance;
} _GetElevatorRequest_default_instance_;
class GetElevatorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetElevatorResponse> _instance;
} _GetElevatorResponse_default_instance_;
class UpdateElevatorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateElevatorRequest> _instance;
} _UpdateElevatorRequest_default_instance_;
class UpdateElevatorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateElevatorResponse> _instance;
} _UpdateElevatorResponse_default_instance_;
class DeleteElevatorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteElevatorRequest> _instance;
} _DeleteElevatorRequest_default_instance_;
class DeleteElevatorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteElevatorResponse> _instance;
} _DeleteElevatorResponse_default_instance_;
class GetElevatorFloorsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetElevatorFloorsRequest> _instance;
} _GetElevatorFloorsRequest_default_instance_;
class GetElevatorFloorsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetElevatorFloorsResponse> _instance;
} _GetElevatorFloorsResponse_default_instance_;
}  // namespace elevators
}  // namespace mruv
static void InitDefaultsscc_info_CreateElevatorRequest_elevators_2felevators_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::elevators::_CreateElevatorRequest_default_instance_;
    new (ptr) ::mruv::elevators::CreateElevatorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::elevators::CreateElevatorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateElevatorRequest_elevators_2felevators_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateElevatorRequest_elevators_2felevators_2eproto}, {}};

static void InitDefaultsscc_info_CreateElevatorResponse_elevators_2felevators_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::elevators::_CreateElevatorResponse_default_instance_;
    new (ptr) ::mruv::elevators::CreateElevatorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::elevators::CreateElevatorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateElevatorResponse_elevators_2felevators_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateElevatorResponse_elevators_2felevators_2eproto}, {}};

static void InitDefaultsscc_info_DeleteElevatorRequest_elevators_2felevators_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::elevators::_DeleteElevatorRequest_default_instance_;
    new (ptr) ::mruv::elevators::DeleteElevatorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::elevators::DeleteElevatorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteElevatorRequest_elevators_2felevators_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteElevatorRequest_elevators_2felevators_2eproto}, {}};

static void InitDefaultsscc_info_DeleteElevatorResponse_elevators_2felevators_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::elevators::_DeleteElevatorResponse_default_instance_;
    new (ptr) ::mruv::elevators::DeleteElevatorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::elevators::DeleteElevatorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteElevatorResponse_elevators_2felevators_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteElevatorResponse_elevators_2felevators_2eproto}, {}};

static void InitDefaultsscc_info_GetElevatorFloorsRequest_elevators_2felevators_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::elevators::_GetElevatorFloorsRequest_default_instance_;
    new (ptr) ::mruv::elevators::GetElevatorFloorsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::elevators::GetElevatorFloorsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetElevatorFloorsRequest_elevators_2felevators_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetElevatorFloorsRequest_elevators_2felevators_2eproto}, {}};

static void InitDefaultsscc_info_GetElevatorFloorsResponse_elevators_2felevators_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::elevators::_GetElevatorFloorsResponse_default_instance_;
    new (ptr) ::mruv::elevators::GetElevatorFloorsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::elevators::GetElevatorFloorsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetElevatorFloorsResponse_elevators_2felevators_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetElevatorFloorsResponse_elevators_2felevators_2eproto}, {}};

static void InitDefaultsscc_info_GetElevatorRequest_elevators_2felevators_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::elevators::_GetElevatorRequest_default_instance_;
    new (ptr) ::mruv::elevators::GetElevatorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::elevators::GetElevatorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetElevatorRequest_elevators_2felevators_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetElevatorRequest_elevators_2felevators_2eproto}, {}};

static void InitDefaultsscc_info_GetElevatorResponse_elevators_2felevators_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::elevators::_GetElevatorResponse_default_instance_;
    new (ptr) ::mruv::elevators::GetElevatorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::elevators::GetElevatorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetElevatorResponse_elevators_2felevators_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetElevatorResponse_elevators_2felevators_2eproto}, {}};

static void InitDefaultsscc_info_UpdateElevatorRequest_elevators_2felevators_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::elevators::_UpdateElevatorRequest_default_instance_;
    new (ptr) ::mruv::elevators::UpdateElevatorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::elevators::UpdateElevatorRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateElevatorRequest_elevators_2felevators_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateElevatorRequest_elevators_2felevators_2eproto}, {}};

static void InitDefaultsscc_info_UpdateElevatorResponse_elevators_2felevators_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::elevators::_UpdateElevatorResponse_default_instance_;
    new (ptr) ::mruv::elevators::UpdateElevatorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::elevators::UpdateElevatorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateElevatorResponse_elevators_2felevators_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateElevatorResponse_elevators_2felevators_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_elevators_2felevators_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_elevators_2felevators_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_elevators_2felevators_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_elevators_2felevators_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::CreateElevatorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::CreateElevatorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::CreateElevatorResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::GetElevatorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::GetElevatorRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::GetElevatorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::UpdateElevatorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::UpdateElevatorRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::UpdateElevatorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::DeleteElevatorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::DeleteElevatorRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::DeleteElevatorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::GetElevatorFloorsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::GetElevatorFloorsRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::elevators::GetElevatorFloorsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mruv::elevators::CreateElevatorRequest)},
  { 5, -1, sizeof(::mruv::elevators::CreateElevatorResponse)},
  { 11, -1, sizeof(::mruv::elevators::GetElevatorRequest)},
  { 17, -1, sizeof(::mruv::elevators::GetElevatorResponse)},
  { 22, -1, sizeof(::mruv::elevators::UpdateElevatorRequest)},
  { 28, -1, sizeof(::mruv::elevators::UpdateElevatorResponse)},
  { 33, -1, sizeof(::mruv::elevators::DeleteElevatorRequest)},
  { 39, -1, sizeof(::mruv::elevators::DeleteElevatorResponse)},
  { 44, -1, sizeof(::mruv::elevators::GetElevatorFloorsRequest)},
  { 50, -1, sizeof(::mruv::elevators::GetElevatorFloorsResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::elevators::_CreateElevatorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::elevators::_CreateElevatorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::elevators::_GetElevatorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::elevators::_GetElevatorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::elevators::_UpdateElevatorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::elevators::_UpdateElevatorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::elevators::_DeleteElevatorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::elevators::_DeleteElevatorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::elevators::_GetElevatorFloorsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::elevators::_GetElevatorFloorsResponse_default_instance_),
};

const char descriptor_table_protodef_elevators_2felevators_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031elevators/elevators.proto\022\016mruv.elevat"
  "ors\032\034google/api/annotations.proto\"\027\n\025Cre"
  "ateElevatorRequest\"$\n\026CreateElevatorResp"
  "onse\022\n\n\002id\030\001 \001(\r\" \n\022GetElevatorRequest\022\n"
  "\n\002id\030\001 \001(\r\"\025\n\023GetElevatorResponse\"#\n\025Upd"
  "ateElevatorRequest\022\n\n\002id\030\001 \001(\r\"\030\n\026Update"
  "ElevatorResponse\"#\n\025DeleteElevatorReques"
  "t\022\n\n\002id\030\001 \001(\r\"\030\n\026DeleteElevatorResponse\""
  "&\n\030GetElevatorFloorsRequest\022\n\n\002id\030\001 \001(\r\""
  "\033\n\031GetElevatorFloorsResponse2\212\005\n\024MruVEle"
  "vatorsService\022v\n\016CreateElevator\022%.mruv.e"
  "levators.CreateElevatorRequest\032&.mruv.el"
  "evators.CreateElevatorResponse\"\025\202\323\344\223\002\017\"\r"
  "/v1/elevators\022r\n\013GetElevator\022\".mruv.elev"
  "ators.GetElevatorRequest\032#.mruv.elevator"
  "s.GetElevatorResponse\"\032\202\323\344\223\002\024\022\022/v1/eleva"
  "tors/{id}\022{\n\016UpdateElevator\022%.mruv.eleva"
  "tors.UpdateElevatorRequest\032&.mruv.elevat"
  "ors.UpdateElevatorResponse\"\032\202\323\344\223\002\0242\022/v1/"
  "elevators/{id}\022{\n\016DeleteElevator\022%.mruv."
  "elevators.DeleteElevatorRequest\032&.mruv.e"
  "levators.DeleteElevatorResponse\"\032\202\323\344\223\002\024*"
  "\022/v1/elevators/{id}\022\213\001\n\021GetElevatorFloor"
  "s\022(.mruv.elevators.GetElevatorFloorsRequ"
  "est\032).mruv.elevators.GetElevatorFloorsRe"
  "sponse\"!\202\323\344\223\002\033\022\031/v1/elevators/{id}/floor"
  "sB)Z\'github.com/MruV-RP/mruv-pb-go/eleva"
  "torsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_elevators_2felevators_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_elevators_2felevators_2eproto_sccs[10] = {
  &scc_info_CreateElevatorRequest_elevators_2felevators_2eproto.base,
  &scc_info_CreateElevatorResponse_elevators_2felevators_2eproto.base,
  &scc_info_DeleteElevatorRequest_elevators_2felevators_2eproto.base,
  &scc_info_DeleteElevatorResponse_elevators_2felevators_2eproto.base,
  &scc_info_GetElevatorFloorsRequest_elevators_2felevators_2eproto.base,
  &scc_info_GetElevatorFloorsResponse_elevators_2felevators_2eproto.base,
  &scc_info_GetElevatorRequest_elevators_2felevators_2eproto.base,
  &scc_info_GetElevatorResponse_elevators_2felevators_2eproto.base,
  &scc_info_UpdateElevatorRequest_elevators_2felevators_2eproto.base,
  &scc_info_UpdateElevatorResponse_elevators_2felevators_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_elevators_2felevators_2eproto_once;
static bool descriptor_table_elevators_2felevators_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_elevators_2felevators_2eproto = {
  &descriptor_table_elevators_2felevators_2eproto_initialized, descriptor_table_protodef_elevators_2felevators_2eproto, "elevators/elevators.proto", 1092,
  &descriptor_table_elevators_2felevators_2eproto_once, descriptor_table_elevators_2felevators_2eproto_sccs, descriptor_table_elevators_2felevators_2eproto_deps, 10, 1,
  schemas, file_default_instances, TableStruct_elevators_2felevators_2eproto::offsets,
  file_level_metadata_elevators_2felevators_2eproto, 10, file_level_enum_descriptors_elevators_2felevators_2eproto, file_level_service_descriptors_elevators_2felevators_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_elevators_2felevators_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_elevators_2felevators_2eproto), true);
namespace mruv {
namespace elevators {

// ===================================================================

void CreateElevatorRequest::InitAsDefaultInstance() {
}
class CreateElevatorRequest::_Internal {
 public:
};

CreateElevatorRequest::CreateElevatorRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.elevators.CreateElevatorRequest)
}
CreateElevatorRequest::CreateElevatorRequest(const CreateElevatorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.elevators.CreateElevatorRequest)
}

void CreateElevatorRequest::SharedCtor() {
}

CreateElevatorRequest::~CreateElevatorRequest() {
  // @@protoc_insertion_point(destructor:mruv.elevators.CreateElevatorRequest)
  SharedDtor();
}

void CreateElevatorRequest::SharedDtor() {
}

void CreateElevatorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateElevatorRequest& CreateElevatorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateElevatorRequest_elevators_2felevators_2eproto.base);
  return *internal_default_instance();
}


void CreateElevatorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.elevators.CreateElevatorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* CreateElevatorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateElevatorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.elevators.CreateElevatorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.elevators.CreateElevatorRequest)
  return target;
}

size_t CreateElevatorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.elevators.CreateElevatorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateElevatorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.elevators.CreateElevatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateElevatorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateElevatorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.elevators.CreateElevatorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.elevators.CreateElevatorRequest)
    MergeFrom(*source);
  }
}

void CreateElevatorRequest::MergeFrom(const CreateElevatorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.elevators.CreateElevatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateElevatorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.elevators.CreateElevatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateElevatorRequest::CopyFrom(const CreateElevatorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.elevators.CreateElevatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateElevatorRequest::IsInitialized() const {
  return true;
}

void CreateElevatorRequest::InternalSwap(CreateElevatorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateElevatorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateElevatorResponse::InitAsDefaultInstance() {
}
class CreateElevatorResponse::_Internal {
 public:
};

CreateElevatorResponse::CreateElevatorResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.elevators.CreateElevatorResponse)
}
CreateElevatorResponse::CreateElevatorResponse(const CreateElevatorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.elevators.CreateElevatorResponse)
}

void CreateElevatorResponse::SharedCtor() {
  id_ = 0u;
}

CreateElevatorResponse::~CreateElevatorResponse() {
  // @@protoc_insertion_point(destructor:mruv.elevators.CreateElevatorResponse)
  SharedDtor();
}

void CreateElevatorResponse::SharedDtor() {
}

void CreateElevatorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateElevatorResponse& CreateElevatorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateElevatorResponse_elevators_2felevators_2eproto.base);
  return *internal_default_instance();
}


void CreateElevatorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.elevators.CreateElevatorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* CreateElevatorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateElevatorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.elevators.CreateElevatorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.elevators.CreateElevatorResponse)
  return target;
}

size_t CreateElevatorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.elevators.CreateElevatorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateElevatorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.elevators.CreateElevatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateElevatorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateElevatorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.elevators.CreateElevatorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.elevators.CreateElevatorResponse)
    MergeFrom(*source);
  }
}

void CreateElevatorResponse::MergeFrom(const CreateElevatorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.elevators.CreateElevatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void CreateElevatorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.elevators.CreateElevatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateElevatorResponse::CopyFrom(const CreateElevatorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.elevators.CreateElevatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateElevatorResponse::IsInitialized() const {
  return true;
}

void CreateElevatorResponse::InternalSwap(CreateElevatorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateElevatorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetElevatorRequest::InitAsDefaultInstance() {
}
class GetElevatorRequest::_Internal {
 public:
};

GetElevatorRequest::GetElevatorRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.elevators.GetElevatorRequest)
}
GetElevatorRequest::GetElevatorRequest(const GetElevatorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.elevators.GetElevatorRequest)
}

void GetElevatorRequest::SharedCtor() {
  id_ = 0u;
}

GetElevatorRequest::~GetElevatorRequest() {
  // @@protoc_insertion_point(destructor:mruv.elevators.GetElevatorRequest)
  SharedDtor();
}

void GetElevatorRequest::SharedDtor() {
}

void GetElevatorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetElevatorRequest& GetElevatorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetElevatorRequest_elevators_2felevators_2eproto.base);
  return *internal_default_instance();
}


void GetElevatorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.elevators.GetElevatorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* GetElevatorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetElevatorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.elevators.GetElevatorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.elevators.GetElevatorRequest)
  return target;
}

size_t GetElevatorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.elevators.GetElevatorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetElevatorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.elevators.GetElevatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetElevatorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetElevatorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.elevators.GetElevatorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.elevators.GetElevatorRequest)
    MergeFrom(*source);
  }
}

void GetElevatorRequest::MergeFrom(const GetElevatorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.elevators.GetElevatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetElevatorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.elevators.GetElevatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetElevatorRequest::CopyFrom(const GetElevatorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.elevators.GetElevatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetElevatorRequest::IsInitialized() const {
  return true;
}

void GetElevatorRequest::InternalSwap(GetElevatorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetElevatorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetElevatorResponse::InitAsDefaultInstance() {
}
class GetElevatorResponse::_Internal {
 public:
};

GetElevatorResponse::GetElevatorResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.elevators.GetElevatorResponse)
}
GetElevatorResponse::GetElevatorResponse(const GetElevatorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.elevators.GetElevatorResponse)
}

void GetElevatorResponse::SharedCtor() {
}

GetElevatorResponse::~GetElevatorResponse() {
  // @@protoc_insertion_point(destructor:mruv.elevators.GetElevatorResponse)
  SharedDtor();
}

void GetElevatorResponse::SharedDtor() {
}

void GetElevatorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetElevatorResponse& GetElevatorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetElevatorResponse_elevators_2felevators_2eproto.base);
  return *internal_default_instance();
}


void GetElevatorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.elevators.GetElevatorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* GetElevatorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetElevatorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.elevators.GetElevatorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.elevators.GetElevatorResponse)
  return target;
}

size_t GetElevatorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.elevators.GetElevatorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetElevatorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.elevators.GetElevatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetElevatorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetElevatorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.elevators.GetElevatorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.elevators.GetElevatorResponse)
    MergeFrom(*source);
  }
}

void GetElevatorResponse::MergeFrom(const GetElevatorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.elevators.GetElevatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetElevatorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.elevators.GetElevatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetElevatorResponse::CopyFrom(const GetElevatorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.elevators.GetElevatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetElevatorResponse::IsInitialized() const {
  return true;
}

void GetElevatorResponse::InternalSwap(GetElevatorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetElevatorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateElevatorRequest::InitAsDefaultInstance() {
}
class UpdateElevatorRequest::_Internal {
 public:
};

UpdateElevatorRequest::UpdateElevatorRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.elevators.UpdateElevatorRequest)
}
UpdateElevatorRequest::UpdateElevatorRequest(const UpdateElevatorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.elevators.UpdateElevatorRequest)
}

void UpdateElevatorRequest::SharedCtor() {
  id_ = 0u;
}

UpdateElevatorRequest::~UpdateElevatorRequest() {
  // @@protoc_insertion_point(destructor:mruv.elevators.UpdateElevatorRequest)
  SharedDtor();
}

void UpdateElevatorRequest::SharedDtor() {
}

void UpdateElevatorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateElevatorRequest& UpdateElevatorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateElevatorRequest_elevators_2felevators_2eproto.base);
  return *internal_default_instance();
}


void UpdateElevatorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.elevators.UpdateElevatorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* UpdateElevatorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateElevatorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.elevators.UpdateElevatorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.elevators.UpdateElevatorRequest)
  return target;
}

size_t UpdateElevatorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.elevators.UpdateElevatorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateElevatorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.elevators.UpdateElevatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateElevatorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateElevatorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.elevators.UpdateElevatorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.elevators.UpdateElevatorRequest)
    MergeFrom(*source);
  }
}

void UpdateElevatorRequest::MergeFrom(const UpdateElevatorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.elevators.UpdateElevatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void UpdateElevatorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.elevators.UpdateElevatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateElevatorRequest::CopyFrom(const UpdateElevatorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.elevators.UpdateElevatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateElevatorRequest::IsInitialized() const {
  return true;
}

void UpdateElevatorRequest::InternalSwap(UpdateElevatorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateElevatorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateElevatorResponse::InitAsDefaultInstance() {
}
class UpdateElevatorResponse::_Internal {
 public:
};

UpdateElevatorResponse::UpdateElevatorResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.elevators.UpdateElevatorResponse)
}
UpdateElevatorResponse::UpdateElevatorResponse(const UpdateElevatorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.elevators.UpdateElevatorResponse)
}

void UpdateElevatorResponse::SharedCtor() {
}

UpdateElevatorResponse::~UpdateElevatorResponse() {
  // @@protoc_insertion_point(destructor:mruv.elevators.UpdateElevatorResponse)
  SharedDtor();
}

void UpdateElevatorResponse::SharedDtor() {
}

void UpdateElevatorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateElevatorResponse& UpdateElevatorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateElevatorResponse_elevators_2felevators_2eproto.base);
  return *internal_default_instance();
}


void UpdateElevatorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.elevators.UpdateElevatorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* UpdateElevatorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateElevatorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.elevators.UpdateElevatorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.elevators.UpdateElevatorResponse)
  return target;
}

size_t UpdateElevatorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.elevators.UpdateElevatorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateElevatorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.elevators.UpdateElevatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateElevatorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateElevatorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.elevators.UpdateElevatorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.elevators.UpdateElevatorResponse)
    MergeFrom(*source);
  }
}

void UpdateElevatorResponse::MergeFrom(const UpdateElevatorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.elevators.UpdateElevatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateElevatorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.elevators.UpdateElevatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateElevatorResponse::CopyFrom(const UpdateElevatorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.elevators.UpdateElevatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateElevatorResponse::IsInitialized() const {
  return true;
}

void UpdateElevatorResponse::InternalSwap(UpdateElevatorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateElevatorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteElevatorRequest::InitAsDefaultInstance() {
}
class DeleteElevatorRequest::_Internal {
 public:
};

DeleteElevatorRequest::DeleteElevatorRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.elevators.DeleteElevatorRequest)
}
DeleteElevatorRequest::DeleteElevatorRequest(const DeleteElevatorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.elevators.DeleteElevatorRequest)
}

void DeleteElevatorRequest::SharedCtor() {
  id_ = 0u;
}

DeleteElevatorRequest::~DeleteElevatorRequest() {
  // @@protoc_insertion_point(destructor:mruv.elevators.DeleteElevatorRequest)
  SharedDtor();
}

void DeleteElevatorRequest::SharedDtor() {
}

void DeleteElevatorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteElevatorRequest& DeleteElevatorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteElevatorRequest_elevators_2felevators_2eproto.base);
  return *internal_default_instance();
}


void DeleteElevatorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.elevators.DeleteElevatorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* DeleteElevatorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteElevatorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.elevators.DeleteElevatorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.elevators.DeleteElevatorRequest)
  return target;
}

size_t DeleteElevatorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.elevators.DeleteElevatorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteElevatorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.elevators.DeleteElevatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteElevatorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteElevatorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.elevators.DeleteElevatorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.elevators.DeleteElevatorRequest)
    MergeFrom(*source);
  }
}

void DeleteElevatorRequest::MergeFrom(const DeleteElevatorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.elevators.DeleteElevatorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteElevatorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.elevators.DeleteElevatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteElevatorRequest::CopyFrom(const DeleteElevatorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.elevators.DeleteElevatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteElevatorRequest::IsInitialized() const {
  return true;
}

void DeleteElevatorRequest::InternalSwap(DeleteElevatorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteElevatorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteElevatorResponse::InitAsDefaultInstance() {
}
class DeleteElevatorResponse::_Internal {
 public:
};

DeleteElevatorResponse::DeleteElevatorResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.elevators.DeleteElevatorResponse)
}
DeleteElevatorResponse::DeleteElevatorResponse(const DeleteElevatorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.elevators.DeleteElevatorResponse)
}

void DeleteElevatorResponse::SharedCtor() {
}

DeleteElevatorResponse::~DeleteElevatorResponse() {
  // @@protoc_insertion_point(destructor:mruv.elevators.DeleteElevatorResponse)
  SharedDtor();
}

void DeleteElevatorResponse::SharedDtor() {
}

void DeleteElevatorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteElevatorResponse& DeleteElevatorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteElevatorResponse_elevators_2felevators_2eproto.base);
  return *internal_default_instance();
}


void DeleteElevatorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.elevators.DeleteElevatorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* DeleteElevatorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteElevatorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.elevators.DeleteElevatorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.elevators.DeleteElevatorResponse)
  return target;
}

size_t DeleteElevatorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.elevators.DeleteElevatorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteElevatorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.elevators.DeleteElevatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteElevatorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteElevatorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.elevators.DeleteElevatorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.elevators.DeleteElevatorResponse)
    MergeFrom(*source);
  }
}

void DeleteElevatorResponse::MergeFrom(const DeleteElevatorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.elevators.DeleteElevatorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteElevatorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.elevators.DeleteElevatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteElevatorResponse::CopyFrom(const DeleteElevatorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.elevators.DeleteElevatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteElevatorResponse::IsInitialized() const {
  return true;
}

void DeleteElevatorResponse::InternalSwap(DeleteElevatorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteElevatorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetElevatorFloorsRequest::InitAsDefaultInstance() {
}
class GetElevatorFloorsRequest::_Internal {
 public:
};

GetElevatorFloorsRequest::GetElevatorFloorsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.elevators.GetElevatorFloorsRequest)
}
GetElevatorFloorsRequest::GetElevatorFloorsRequest(const GetElevatorFloorsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.elevators.GetElevatorFloorsRequest)
}

void GetElevatorFloorsRequest::SharedCtor() {
  id_ = 0u;
}

GetElevatorFloorsRequest::~GetElevatorFloorsRequest() {
  // @@protoc_insertion_point(destructor:mruv.elevators.GetElevatorFloorsRequest)
  SharedDtor();
}

void GetElevatorFloorsRequest::SharedDtor() {
}

void GetElevatorFloorsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetElevatorFloorsRequest& GetElevatorFloorsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetElevatorFloorsRequest_elevators_2felevators_2eproto.base);
  return *internal_default_instance();
}


void GetElevatorFloorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.elevators.GetElevatorFloorsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* GetElevatorFloorsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetElevatorFloorsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.elevators.GetElevatorFloorsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.elevators.GetElevatorFloorsRequest)
  return target;
}

size_t GetElevatorFloorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.elevators.GetElevatorFloorsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetElevatorFloorsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.elevators.GetElevatorFloorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetElevatorFloorsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetElevatorFloorsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.elevators.GetElevatorFloorsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.elevators.GetElevatorFloorsRequest)
    MergeFrom(*source);
  }
}

void GetElevatorFloorsRequest::MergeFrom(const GetElevatorFloorsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.elevators.GetElevatorFloorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetElevatorFloorsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.elevators.GetElevatorFloorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetElevatorFloorsRequest::CopyFrom(const GetElevatorFloorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.elevators.GetElevatorFloorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetElevatorFloorsRequest::IsInitialized() const {
  return true;
}

void GetElevatorFloorsRequest::InternalSwap(GetElevatorFloorsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetElevatorFloorsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetElevatorFloorsResponse::InitAsDefaultInstance() {
}
class GetElevatorFloorsResponse::_Internal {
 public:
};

GetElevatorFloorsResponse::GetElevatorFloorsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.elevators.GetElevatorFloorsResponse)
}
GetElevatorFloorsResponse::GetElevatorFloorsResponse(const GetElevatorFloorsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.elevators.GetElevatorFloorsResponse)
}

void GetElevatorFloorsResponse::SharedCtor() {
}

GetElevatorFloorsResponse::~GetElevatorFloorsResponse() {
  // @@protoc_insertion_point(destructor:mruv.elevators.GetElevatorFloorsResponse)
  SharedDtor();
}

void GetElevatorFloorsResponse::SharedDtor() {
}

void GetElevatorFloorsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetElevatorFloorsResponse& GetElevatorFloorsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetElevatorFloorsResponse_elevators_2felevators_2eproto.base);
  return *internal_default_instance();
}


void GetElevatorFloorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.elevators.GetElevatorFloorsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* GetElevatorFloorsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetElevatorFloorsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.elevators.GetElevatorFloorsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.elevators.GetElevatorFloorsResponse)
  return target;
}

size_t GetElevatorFloorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.elevators.GetElevatorFloorsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetElevatorFloorsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.elevators.GetElevatorFloorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetElevatorFloorsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetElevatorFloorsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.elevators.GetElevatorFloorsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.elevators.GetElevatorFloorsResponse)
    MergeFrom(*source);
  }
}

void GetElevatorFloorsResponse::MergeFrom(const GetElevatorFloorsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.elevators.GetElevatorFloorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetElevatorFloorsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.elevators.GetElevatorFloorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetElevatorFloorsResponse::CopyFrom(const GetElevatorFloorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.elevators.GetElevatorFloorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetElevatorFloorsResponse::IsInitialized() const {
  return true;
}

void GetElevatorFloorsResponse::InternalSwap(GetElevatorFloorsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetElevatorFloorsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace elevators
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mruv::elevators::CreateElevatorRequest* Arena::CreateMaybeMessage< ::mruv::elevators::CreateElevatorRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::elevators::CreateElevatorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::elevators::CreateElevatorResponse* Arena::CreateMaybeMessage< ::mruv::elevators::CreateElevatorResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::elevators::CreateElevatorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::elevators::GetElevatorRequest* Arena::CreateMaybeMessage< ::mruv::elevators::GetElevatorRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::elevators::GetElevatorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::elevators::GetElevatorResponse* Arena::CreateMaybeMessage< ::mruv::elevators::GetElevatorResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::elevators::GetElevatorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::elevators::UpdateElevatorRequest* Arena::CreateMaybeMessage< ::mruv::elevators::UpdateElevatorRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::elevators::UpdateElevatorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::elevators::UpdateElevatorResponse* Arena::CreateMaybeMessage< ::mruv::elevators::UpdateElevatorResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::elevators::UpdateElevatorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::elevators::DeleteElevatorRequest* Arena::CreateMaybeMessage< ::mruv::elevators::DeleteElevatorRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::elevators::DeleteElevatorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::elevators::DeleteElevatorResponse* Arena::CreateMaybeMessage< ::mruv::elevators::DeleteElevatorResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::elevators::DeleteElevatorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::elevators::GetElevatorFloorsRequest* Arena::CreateMaybeMessage< ::mruv::elevators::GetElevatorFloorsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::elevators::GetElevatorFloorsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::elevators::GetElevatorFloorsResponse* Arena::CreateMaybeMessage< ::mruv::elevators::GetElevatorFloorsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::elevators::GetElevatorFloorsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
