// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jobs/jobs.proto

#include "jobs/jobs.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace mruv {
namespace jobs {
class CreateJobRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateJobRequest> _instance;
} _CreateJobRequest_default_instance_;
class CreateJobResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateJobResponse> _instance;
} _CreateJobResponse_default_instance_;
class GetJobRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetJobRequest> _instance;
} _GetJobRequest_default_instance_;
class GetJobResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetJobResponse> _instance;
} _GetJobResponse_default_instance_;
class UpdateJobRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateJobRequest> _instance;
} _UpdateJobRequest_default_instance_;
class UpdateJobResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateJobResponse> _instance;
} _UpdateJobResponse_default_instance_;
class DeleteJobRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteJobRequest> _instance;
} _DeleteJobRequest_default_instance_;
class DeleteJobResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteJobResponse> _instance;
} _DeleteJobResponse_default_instance_;
}  // namespace jobs
}  // namespace mruv
static void InitDefaultsscc_info_CreateJobRequest_jobs_2fjobs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::jobs::_CreateJobRequest_default_instance_;
    new (ptr) ::mruv::jobs::CreateJobRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::jobs::CreateJobRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateJobRequest_jobs_2fjobs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateJobRequest_jobs_2fjobs_2eproto}, {}};

static void InitDefaultsscc_info_CreateJobResponse_jobs_2fjobs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::jobs::_CreateJobResponse_default_instance_;
    new (ptr) ::mruv::jobs::CreateJobResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::jobs::CreateJobResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateJobResponse_jobs_2fjobs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateJobResponse_jobs_2fjobs_2eproto}, {}};

static void InitDefaultsscc_info_DeleteJobRequest_jobs_2fjobs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::jobs::_DeleteJobRequest_default_instance_;
    new (ptr) ::mruv::jobs::DeleteJobRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::jobs::DeleteJobRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteJobRequest_jobs_2fjobs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteJobRequest_jobs_2fjobs_2eproto}, {}};

static void InitDefaultsscc_info_DeleteJobResponse_jobs_2fjobs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::jobs::_DeleteJobResponse_default_instance_;
    new (ptr) ::mruv::jobs::DeleteJobResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::jobs::DeleteJobResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteJobResponse_jobs_2fjobs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteJobResponse_jobs_2fjobs_2eproto}, {}};

static void InitDefaultsscc_info_GetJobRequest_jobs_2fjobs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::jobs::_GetJobRequest_default_instance_;
    new (ptr) ::mruv::jobs::GetJobRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::jobs::GetJobRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetJobRequest_jobs_2fjobs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetJobRequest_jobs_2fjobs_2eproto}, {}};

static void InitDefaultsscc_info_GetJobResponse_jobs_2fjobs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::jobs::_GetJobResponse_default_instance_;
    new (ptr) ::mruv::jobs::GetJobResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::jobs::GetJobResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetJobResponse_jobs_2fjobs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetJobResponse_jobs_2fjobs_2eproto}, {}};

static void InitDefaultsscc_info_UpdateJobRequest_jobs_2fjobs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::jobs::_UpdateJobRequest_default_instance_;
    new (ptr) ::mruv::jobs::UpdateJobRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::jobs::UpdateJobRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateJobRequest_jobs_2fjobs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateJobRequest_jobs_2fjobs_2eproto}, {}};

static void InitDefaultsscc_info_UpdateJobResponse_jobs_2fjobs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::jobs::_UpdateJobResponse_default_instance_;
    new (ptr) ::mruv::jobs::UpdateJobResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::jobs::UpdateJobResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateJobResponse_jobs_2fjobs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateJobResponse_jobs_2fjobs_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_jobs_2fjobs_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_jobs_2fjobs_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_jobs_2fjobs_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_jobs_2fjobs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::jobs::CreateJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::jobs::CreateJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::jobs::GetJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::jobs::GetJobRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::jobs::GetJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::jobs::UpdateJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::jobs::UpdateJobRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::jobs::UpdateJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::jobs::DeleteJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::jobs::DeleteJobRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::jobs::DeleteJobResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mruv::jobs::CreateJobRequest)},
  { 5, -1, sizeof(::mruv::jobs::CreateJobResponse)},
  { 10, -1, sizeof(::mruv::jobs::GetJobRequest)},
  { 16, -1, sizeof(::mruv::jobs::GetJobResponse)},
  { 21, -1, sizeof(::mruv::jobs::UpdateJobRequest)},
  { 27, -1, sizeof(::mruv::jobs::UpdateJobResponse)},
  { 32, -1, sizeof(::mruv::jobs::DeleteJobRequest)},
  { 38, -1, sizeof(::mruv::jobs::DeleteJobResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::jobs::_CreateJobRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::jobs::_CreateJobResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::jobs::_GetJobRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::jobs::_GetJobResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::jobs::_UpdateJobRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::jobs::_UpdateJobResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::jobs::_DeleteJobRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::jobs::_DeleteJobResponse_default_instance_),
};

const char descriptor_table_protodef_jobs_2fjobs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017jobs/jobs.proto\022\tmruv.jobs\032\034google/api"
  "/annotations.proto\"\022\n\020CreateJobRequest\"\023"
  "\n\021CreateJobResponse\"\033\n\rGetJobRequest\022\n\n\002"
  "id\030\001 \001(\r\"\020\n\016GetJobResponse\"\036\n\020UpdateJobR"
  "equest\022\n\n\002id\030\001 \001(\r\"\023\n\021UpdateJobResponse\""
  "\036\n\020DeleteJobRequest\022\n\n\002id\030\001 \001(\r\"\023\n\021Delet"
  "eJobResponse2\205\003\n\017MruVJobsService\022[\n\tCrea"
  "teJob\022\033.mruv.jobs.CreateJobRequest\032\034.mru"
  "v.jobs.CreateJobResponse\"\023\202\323\344\223\002\r\"\010/v1/jo"
  "bs:\001*\022T\n\006GetJob\022\030.mruv.jobs.GetJobReques"
  "t\032\031.mruv.jobs.GetJobResponse\"\025\202\323\344\223\002\017\022\r/v"
  "1/jobs/{id}\022`\n\tUpdateJob\022\033.mruv.jobs.Upd"
  "ateJobRequest\032\034.mruv.jobs.UpdateJobRespo"
  "nse\"\030\202\323\344\223\002\0222\r/v1/jobs/{id}:\001*\022]\n\tDeleteJ"
  "ob\022\033.mruv.jobs.DeleteJobRequest\032\034.mruv.j"
  "obs.DeleteJobResponse\"\025\202\323\344\223\002\017*\r/v1/jobs/"
  "{id}B$Z\"github.com/MruV-RP/mruv-pb-go/jo"
  "bsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_jobs_2fjobs_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_jobs_2fjobs_2eproto_sccs[8] = {
  &scc_info_CreateJobRequest_jobs_2fjobs_2eproto.base,
  &scc_info_CreateJobResponse_jobs_2fjobs_2eproto.base,
  &scc_info_DeleteJobRequest_jobs_2fjobs_2eproto.base,
  &scc_info_DeleteJobResponse_jobs_2fjobs_2eproto.base,
  &scc_info_GetJobRequest_jobs_2fjobs_2eproto.base,
  &scc_info_GetJobResponse_jobs_2fjobs_2eproto.base,
  &scc_info_UpdateJobRequest_jobs_2fjobs_2eproto.base,
  &scc_info_UpdateJobResponse_jobs_2fjobs_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_jobs_2fjobs_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_jobs_2fjobs_2eproto = {
  false, false, descriptor_table_protodef_jobs_2fjobs_2eproto, "jobs/jobs.proto", 690,
  &descriptor_table_jobs_2fjobs_2eproto_once, descriptor_table_jobs_2fjobs_2eproto_sccs, descriptor_table_jobs_2fjobs_2eproto_deps, 8, 1,
  schemas, file_default_instances, TableStruct_jobs_2fjobs_2eproto::offsets,
  file_level_metadata_jobs_2fjobs_2eproto, 8, file_level_enum_descriptors_jobs_2fjobs_2eproto, file_level_service_descriptors_jobs_2fjobs_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_jobs_2fjobs_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_jobs_2fjobs_2eproto)), true);
namespace mruv {
namespace jobs {

// ===================================================================

void CreateJobRequest::InitAsDefaultInstance() {
}
class CreateJobRequest::_Internal {
 public:
};

CreateJobRequest::CreateJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.jobs.CreateJobRequest)
}
CreateJobRequest::CreateJobRequest(const CreateJobRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.jobs.CreateJobRequest)
}

void CreateJobRequest::SharedCtor() {
}

CreateJobRequest::~CreateJobRequest() {
  // @@protoc_insertion_point(destructor:mruv.jobs.CreateJobRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateJobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateJobRequest::ArenaDtor(void* object) {
  CreateJobRequest* _this = reinterpret_cast< CreateJobRequest* >(object);
  (void)_this;
}
void CreateJobRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateJobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateJobRequest& CreateJobRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateJobRequest_jobs_2fjobs_2eproto.base);
  return *internal_default_instance();
}


void CreateJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.jobs.CreateJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateJobRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateJobRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.jobs.CreateJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.jobs.CreateJobRequest)
  return target;
}

size_t CreateJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.jobs.CreateJobRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateJobRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.jobs.CreateJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateJobRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateJobRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.jobs.CreateJobRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.jobs.CreateJobRequest)
    MergeFrom(*source);
  }
}

void CreateJobRequest::MergeFrom(const CreateJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.jobs.CreateJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateJobRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.jobs.CreateJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateJobRequest::CopyFrom(const CreateJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.jobs.CreateJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateJobRequest::IsInitialized() const {
  return true;
}

void CreateJobRequest::InternalSwap(CreateJobRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateJobRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateJobResponse::InitAsDefaultInstance() {
}
class CreateJobResponse::_Internal {
 public:
};

CreateJobResponse::CreateJobResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.jobs.CreateJobResponse)
}
CreateJobResponse::CreateJobResponse(const CreateJobResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.jobs.CreateJobResponse)
}

void CreateJobResponse::SharedCtor() {
}

CreateJobResponse::~CreateJobResponse() {
  // @@protoc_insertion_point(destructor:mruv.jobs.CreateJobResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateJobResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateJobResponse::ArenaDtor(void* object) {
  CreateJobResponse* _this = reinterpret_cast< CreateJobResponse* >(object);
  (void)_this;
}
void CreateJobResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateJobResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateJobResponse& CreateJobResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateJobResponse_jobs_2fjobs_2eproto.base);
  return *internal_default_instance();
}


void CreateJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.jobs.CreateJobResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateJobResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateJobResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.jobs.CreateJobResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.jobs.CreateJobResponse)
  return target;
}

size_t CreateJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.jobs.CreateJobResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateJobResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.jobs.CreateJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateJobResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateJobResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.jobs.CreateJobResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.jobs.CreateJobResponse)
    MergeFrom(*source);
  }
}

void CreateJobResponse::MergeFrom(const CreateJobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.jobs.CreateJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateJobResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.jobs.CreateJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateJobResponse::CopyFrom(const CreateJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.jobs.CreateJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateJobResponse::IsInitialized() const {
  return true;
}

void CreateJobResponse::InternalSwap(CreateJobResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateJobResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetJobRequest::InitAsDefaultInstance() {
}
class GetJobRequest::_Internal {
 public:
};

GetJobRequest::GetJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.jobs.GetJobRequest)
}
GetJobRequest::GetJobRequest(const GetJobRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.jobs.GetJobRequest)
}

void GetJobRequest::SharedCtor() {
  id_ = 0u;
}

GetJobRequest::~GetJobRequest() {
  // @@protoc_insertion_point(destructor:mruv.jobs.GetJobRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetJobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetJobRequest::ArenaDtor(void* object) {
  GetJobRequest* _this = reinterpret_cast< GetJobRequest* >(object);
  (void)_this;
}
void GetJobRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetJobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetJobRequest& GetJobRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetJobRequest_jobs_2fjobs_2eproto.base);
  return *internal_default_instance();
}


void GetJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.jobs.GetJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetJobRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetJobRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.jobs.GetJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.jobs.GetJobRequest)
  return target;
}

size_t GetJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.jobs.GetJobRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetJobRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.jobs.GetJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJobRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetJobRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.jobs.GetJobRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.jobs.GetJobRequest)
    MergeFrom(*source);
  }
}

void GetJobRequest::MergeFrom(const GetJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.jobs.GetJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetJobRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.jobs.GetJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobRequest::CopyFrom(const GetJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.jobs.GetJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobRequest::IsInitialized() const {
  return true;
}

void GetJobRequest::InternalSwap(GetJobRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetJobRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetJobResponse::InitAsDefaultInstance() {
}
class GetJobResponse::_Internal {
 public:
};

GetJobResponse::GetJobResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.jobs.GetJobResponse)
}
GetJobResponse::GetJobResponse(const GetJobResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.jobs.GetJobResponse)
}

void GetJobResponse::SharedCtor() {
}

GetJobResponse::~GetJobResponse() {
  // @@protoc_insertion_point(destructor:mruv.jobs.GetJobResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetJobResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetJobResponse::ArenaDtor(void* object) {
  GetJobResponse* _this = reinterpret_cast< GetJobResponse* >(object);
  (void)_this;
}
void GetJobResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetJobResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetJobResponse& GetJobResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetJobResponse_jobs_2fjobs_2eproto.base);
  return *internal_default_instance();
}


void GetJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.jobs.GetJobResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetJobResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetJobResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.jobs.GetJobResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.jobs.GetJobResponse)
  return target;
}

size_t GetJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.jobs.GetJobResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetJobResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.jobs.GetJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJobResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetJobResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.jobs.GetJobResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.jobs.GetJobResponse)
    MergeFrom(*source);
  }
}

void GetJobResponse::MergeFrom(const GetJobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.jobs.GetJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetJobResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.jobs.GetJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobResponse::CopyFrom(const GetJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.jobs.GetJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobResponse::IsInitialized() const {
  return true;
}

void GetJobResponse::InternalSwap(GetJobResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetJobResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateJobRequest::InitAsDefaultInstance() {
}
class UpdateJobRequest::_Internal {
 public:
};

UpdateJobRequest::UpdateJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.jobs.UpdateJobRequest)
}
UpdateJobRequest::UpdateJobRequest(const UpdateJobRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.jobs.UpdateJobRequest)
}

void UpdateJobRequest::SharedCtor() {
  id_ = 0u;
}

UpdateJobRequest::~UpdateJobRequest() {
  // @@protoc_insertion_point(destructor:mruv.jobs.UpdateJobRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateJobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateJobRequest::ArenaDtor(void* object) {
  UpdateJobRequest* _this = reinterpret_cast< UpdateJobRequest* >(object);
  (void)_this;
}
void UpdateJobRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateJobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateJobRequest& UpdateJobRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateJobRequest_jobs_2fjobs_2eproto.base);
  return *internal_default_instance();
}


void UpdateJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.jobs.UpdateJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateJobRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateJobRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.jobs.UpdateJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.jobs.UpdateJobRequest)
  return target;
}

size_t UpdateJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.jobs.UpdateJobRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateJobRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.jobs.UpdateJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateJobRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateJobRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.jobs.UpdateJobRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.jobs.UpdateJobRequest)
    MergeFrom(*source);
  }
}

void UpdateJobRequest::MergeFrom(const UpdateJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.jobs.UpdateJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void UpdateJobRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.jobs.UpdateJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateJobRequest::CopyFrom(const UpdateJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.jobs.UpdateJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateJobRequest::IsInitialized() const {
  return true;
}

void UpdateJobRequest::InternalSwap(UpdateJobRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateJobRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateJobResponse::InitAsDefaultInstance() {
}
class UpdateJobResponse::_Internal {
 public:
};

UpdateJobResponse::UpdateJobResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.jobs.UpdateJobResponse)
}
UpdateJobResponse::UpdateJobResponse(const UpdateJobResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.jobs.UpdateJobResponse)
}

void UpdateJobResponse::SharedCtor() {
}

UpdateJobResponse::~UpdateJobResponse() {
  // @@protoc_insertion_point(destructor:mruv.jobs.UpdateJobResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateJobResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateJobResponse::ArenaDtor(void* object) {
  UpdateJobResponse* _this = reinterpret_cast< UpdateJobResponse* >(object);
  (void)_this;
}
void UpdateJobResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateJobResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateJobResponse& UpdateJobResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateJobResponse_jobs_2fjobs_2eproto.base);
  return *internal_default_instance();
}


void UpdateJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.jobs.UpdateJobResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateJobResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateJobResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.jobs.UpdateJobResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.jobs.UpdateJobResponse)
  return target;
}

size_t UpdateJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.jobs.UpdateJobResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateJobResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.jobs.UpdateJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateJobResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateJobResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.jobs.UpdateJobResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.jobs.UpdateJobResponse)
    MergeFrom(*source);
  }
}

void UpdateJobResponse::MergeFrom(const UpdateJobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.jobs.UpdateJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateJobResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.jobs.UpdateJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateJobResponse::CopyFrom(const UpdateJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.jobs.UpdateJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateJobResponse::IsInitialized() const {
  return true;
}

void UpdateJobResponse::InternalSwap(UpdateJobResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateJobResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteJobRequest::InitAsDefaultInstance() {
}
class DeleteJobRequest::_Internal {
 public:
};

DeleteJobRequest::DeleteJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.jobs.DeleteJobRequest)
}
DeleteJobRequest::DeleteJobRequest(const DeleteJobRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.jobs.DeleteJobRequest)
}

void DeleteJobRequest::SharedCtor() {
  id_ = 0u;
}

DeleteJobRequest::~DeleteJobRequest() {
  // @@protoc_insertion_point(destructor:mruv.jobs.DeleteJobRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteJobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteJobRequest::ArenaDtor(void* object) {
  DeleteJobRequest* _this = reinterpret_cast< DeleteJobRequest* >(object);
  (void)_this;
}
void DeleteJobRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteJobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteJobRequest& DeleteJobRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteJobRequest_jobs_2fjobs_2eproto.base);
  return *internal_default_instance();
}


void DeleteJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.jobs.DeleteJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteJobRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteJobRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.jobs.DeleteJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.jobs.DeleteJobRequest)
  return target;
}

size_t DeleteJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.jobs.DeleteJobRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteJobRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.jobs.DeleteJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteJobRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteJobRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.jobs.DeleteJobRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.jobs.DeleteJobRequest)
    MergeFrom(*source);
  }
}

void DeleteJobRequest::MergeFrom(const DeleteJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.jobs.DeleteJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteJobRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.jobs.DeleteJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteJobRequest::CopyFrom(const DeleteJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.jobs.DeleteJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteJobRequest::IsInitialized() const {
  return true;
}

void DeleteJobRequest::InternalSwap(DeleteJobRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteJobRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteJobResponse::InitAsDefaultInstance() {
}
class DeleteJobResponse::_Internal {
 public:
};

DeleteJobResponse::DeleteJobResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.jobs.DeleteJobResponse)
}
DeleteJobResponse::DeleteJobResponse(const DeleteJobResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.jobs.DeleteJobResponse)
}

void DeleteJobResponse::SharedCtor() {
}

DeleteJobResponse::~DeleteJobResponse() {
  // @@protoc_insertion_point(destructor:mruv.jobs.DeleteJobResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteJobResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteJobResponse::ArenaDtor(void* object) {
  DeleteJobResponse* _this = reinterpret_cast< DeleteJobResponse* >(object);
  (void)_this;
}
void DeleteJobResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteJobResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteJobResponse& DeleteJobResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteJobResponse_jobs_2fjobs_2eproto.base);
  return *internal_default_instance();
}


void DeleteJobResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.jobs.DeleteJobResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteJobResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteJobResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.jobs.DeleteJobResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.jobs.DeleteJobResponse)
  return target;
}

size_t DeleteJobResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.jobs.DeleteJobResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteJobResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.jobs.DeleteJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteJobResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteJobResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.jobs.DeleteJobResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.jobs.DeleteJobResponse)
    MergeFrom(*source);
  }
}

void DeleteJobResponse::MergeFrom(const DeleteJobResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.jobs.DeleteJobResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteJobResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.jobs.DeleteJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteJobResponse::CopyFrom(const DeleteJobResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.jobs.DeleteJobResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteJobResponse::IsInitialized() const {
  return true;
}

void DeleteJobResponse::InternalSwap(DeleteJobResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteJobResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace jobs
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mruv::jobs::CreateJobRequest* Arena::CreateMaybeMessage< ::mruv::jobs::CreateJobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::jobs::CreateJobRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::jobs::CreateJobResponse* Arena::CreateMaybeMessage< ::mruv::jobs::CreateJobResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::jobs::CreateJobResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::jobs::GetJobRequest* Arena::CreateMaybeMessage< ::mruv::jobs::GetJobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::jobs::GetJobRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::jobs::GetJobResponse* Arena::CreateMaybeMessage< ::mruv::jobs::GetJobResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::jobs::GetJobResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::jobs::UpdateJobRequest* Arena::CreateMaybeMessage< ::mruv::jobs::UpdateJobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::jobs::UpdateJobRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::jobs::UpdateJobResponse* Arena::CreateMaybeMessage< ::mruv::jobs::UpdateJobResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::jobs::UpdateJobResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::jobs::DeleteJobRequest* Arena::CreateMaybeMessage< ::mruv::jobs::DeleteJobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::jobs::DeleteJobRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::jobs::DeleteJobResponse* Arena::CreateMaybeMessage< ::mruv::jobs::DeleteJobResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::jobs::DeleteJobResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
