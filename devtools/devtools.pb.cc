// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: devtools/devtools.proto

#include "devtools/devtools.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fdevtools_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Animation_devtools_2fdevtools_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fdevtools_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetAnimationsResponse_Row_devtools_2fdevtools_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fdevtools_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetOutfitsResponse_Row_devtools_2fdevtools_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fdevtools_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetPositionsResponse_Row_devtools_2fdevtools_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fdevtools_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Outfit_devtools_2fdevtools_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fdevtools_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Player_devtools_2fdevtools_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devtools_2fdevtools_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Position_devtools_2fdevtools_5fmodel_2eproto;
namespace mruv {
namespace devtools {
class GetPositionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPositionsRequest> _instance;
} _GetPositionsRequest_default_instance_;
class GetPositionsResponse_RowDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPositionsResponse_Row> _instance;
} _GetPositionsResponse_Row_default_instance_;
class GetPositionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPositionsResponse> _instance;
} _GetPositionsResponse_default_instance_;
class SavePositionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavePositionRequest> _instance;
} _SavePositionRequest_default_instance_;
class SavePositionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavePositionResponse> _instance;
} _SavePositionResponse_default_instance_;
class DeletePositionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeletePositionRequest> _instance;
} _DeletePositionRequest_default_instance_;
class DeletePositionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeletePositionResponse> _instance;
} _DeletePositionResponse_default_instance_;
class GetOutfitsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOutfitsRequest> _instance;
} _GetOutfitsRequest_default_instance_;
class GetOutfitsResponse_RowDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOutfitsResponse_Row> _instance;
} _GetOutfitsResponse_Row_default_instance_;
class GetOutfitsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOutfitsResponse> _instance;
} _GetOutfitsResponse_default_instance_;
class SaveOutfitRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SaveOutfitRequest> _instance;
} _SaveOutfitRequest_default_instance_;
class SaveOutfitResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SaveOutfitResponse> _instance;
} _SaveOutfitResponse_default_instance_;
class GetAnimationsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAnimationsRequest> _instance;
} _GetAnimationsRequest_default_instance_;
class GetAnimationsResponse_RowDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAnimationsResponse_Row> _instance;
} _GetAnimationsResponse_Row_default_instance_;
class GetAnimationsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAnimationsResponse> _instance;
} _GetAnimationsResponse_default_instance_;
class GetAnimationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAnimationRequest> _instance;
} _GetAnimationRequest_default_instance_;
class GetAnimationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAnimationResponse> _instance;
} _GetAnimationResponse_default_instance_;
class SaveAnimationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SaveAnimationRequest> _instance;
} _SaveAnimationRequest_default_instance_;
class SaveAnimationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SaveAnimationResponse> _instance;
} _SaveAnimationResponse_default_instance_;
}  // namespace devtools
}  // namespace mruv
static void InitDefaultsscc_info_DeletePositionRequest_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_DeletePositionRequest_default_instance_;
    new (ptr) ::mruv::devtools::DeletePositionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::DeletePositionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeletePositionRequest_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeletePositionRequest_devtools_2fdevtools_2eproto}, {
      &scc_info_Position_devtools_2fdevtools_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_DeletePositionResponse_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_DeletePositionResponse_default_instance_;
    new (ptr) ::mruv::devtools::DeletePositionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::DeletePositionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeletePositionResponse_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeletePositionResponse_devtools_2fdevtools_2eproto}, {}};

static void InitDefaultsscc_info_GetAnimationRequest_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_GetAnimationRequest_default_instance_;
    new (ptr) ::mruv::devtools::GetAnimationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::GetAnimationRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAnimationRequest_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAnimationRequest_devtools_2fdevtools_2eproto}, {}};

static void InitDefaultsscc_info_GetAnimationResponse_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_GetAnimationResponse_default_instance_;
    new (ptr) ::mruv::devtools::GetAnimationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::GetAnimationResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetAnimationResponse_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetAnimationResponse_devtools_2fdevtools_2eproto}, {
      &scc_info_Animation_devtools_2fdevtools_5fmodel_2eproto.base,
      &scc_info_Player_devtools_2fdevtools_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_GetAnimationsRequest_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_GetAnimationsRequest_default_instance_;
    new (ptr) ::mruv::devtools::GetAnimationsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::GetAnimationsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAnimationsRequest_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAnimationsRequest_devtools_2fdevtools_2eproto}, {}};

static void InitDefaultsscc_info_GetAnimationsResponse_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_GetAnimationsResponse_default_instance_;
    new (ptr) ::mruv::devtools::GetAnimationsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::GetAnimationsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetAnimationsResponse_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetAnimationsResponse_devtools_2fdevtools_2eproto}, {
      &scc_info_GetAnimationsResponse_Row_devtools_2fdevtools_2eproto.base,}};

static void InitDefaultsscc_info_GetAnimationsResponse_Row_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_GetAnimationsResponse_Row_default_instance_;
    new (ptr) ::mruv::devtools::GetAnimationsResponse_Row();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::GetAnimationsResponse_Row::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetAnimationsResponse_Row_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetAnimationsResponse_Row_devtools_2fdevtools_2eproto}, {
      &scc_info_Animation_devtools_2fdevtools_5fmodel_2eproto.base,
      &scc_info_Player_devtools_2fdevtools_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_GetOutfitsRequest_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_GetOutfitsRequest_default_instance_;
    new (ptr) ::mruv::devtools::GetOutfitsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::GetOutfitsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetOutfitsRequest_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetOutfitsRequest_devtools_2fdevtools_2eproto}, {}};

static void InitDefaultsscc_info_GetOutfitsResponse_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_GetOutfitsResponse_default_instance_;
    new (ptr) ::mruv::devtools::GetOutfitsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::GetOutfitsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetOutfitsResponse_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetOutfitsResponse_devtools_2fdevtools_2eproto}, {
      &scc_info_GetOutfitsResponse_Row_devtools_2fdevtools_2eproto.base,}};

static void InitDefaultsscc_info_GetOutfitsResponse_Row_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_GetOutfitsResponse_Row_default_instance_;
    new (ptr) ::mruv::devtools::GetOutfitsResponse_Row();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::GetOutfitsResponse_Row::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetOutfitsResponse_Row_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetOutfitsResponse_Row_devtools_2fdevtools_2eproto}, {
      &scc_info_Outfit_devtools_2fdevtools_5fmodel_2eproto.base,
      &scc_info_Player_devtools_2fdevtools_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_GetPositionsRequest_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_GetPositionsRequest_default_instance_;
    new (ptr) ::mruv::devtools::GetPositionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::GetPositionsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetPositionsRequest_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetPositionsRequest_devtools_2fdevtools_2eproto}, {
      &scc_info_Player_devtools_2fdevtools_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_GetPositionsResponse_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_GetPositionsResponse_default_instance_;
    new (ptr) ::mruv::devtools::GetPositionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::GetPositionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetPositionsResponse_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetPositionsResponse_devtools_2fdevtools_2eproto}, {
      &scc_info_GetPositionsResponse_Row_devtools_2fdevtools_2eproto.base,}};

static void InitDefaultsscc_info_GetPositionsResponse_Row_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_GetPositionsResponse_Row_default_instance_;
    new (ptr) ::mruv::devtools::GetPositionsResponse_Row();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::GetPositionsResponse_Row::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetPositionsResponse_Row_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetPositionsResponse_Row_devtools_2fdevtools_2eproto}, {
      &scc_info_Position_devtools_2fdevtools_5fmodel_2eproto.base,
      &scc_info_Player_devtools_2fdevtools_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_SaveAnimationRequest_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_SaveAnimationRequest_default_instance_;
    new (ptr) ::mruv::devtools::SaveAnimationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::SaveAnimationRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SaveAnimationRequest_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SaveAnimationRequest_devtools_2fdevtools_2eproto}, {
      &scc_info_Animation_devtools_2fdevtools_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_SaveAnimationResponse_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_SaveAnimationResponse_default_instance_;
    new (ptr) ::mruv::devtools::SaveAnimationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::SaveAnimationResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SaveAnimationResponse_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SaveAnimationResponse_devtools_2fdevtools_2eproto}, {}};

static void InitDefaultsscc_info_SaveOutfitRequest_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_SaveOutfitRequest_default_instance_;
    new (ptr) ::mruv::devtools::SaveOutfitRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::SaveOutfitRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SaveOutfitRequest_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SaveOutfitRequest_devtools_2fdevtools_2eproto}, {
      &scc_info_Outfit_devtools_2fdevtools_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_SaveOutfitResponse_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_SaveOutfitResponse_default_instance_;
    new (ptr) ::mruv::devtools::SaveOutfitResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::SaveOutfitResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SaveOutfitResponse_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SaveOutfitResponse_devtools_2fdevtools_2eproto}, {}};

static void InitDefaultsscc_info_SavePositionRequest_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_SavePositionRequest_default_instance_;
    new (ptr) ::mruv::devtools::SavePositionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::SavePositionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavePositionRequest_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SavePositionRequest_devtools_2fdevtools_2eproto}, {
      &scc_info_Position_devtools_2fdevtools_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_SavePositionResponse_devtools_2fdevtools_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::devtools::_SavePositionResponse_default_instance_;
    new (ptr) ::mruv::devtools::SavePositionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::devtools::SavePositionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SavePositionResponse_devtools_2fdevtools_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SavePositionResponse_devtools_2fdevtools_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_devtools_2fdevtools_2eproto[19];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_devtools_2fdevtools_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_devtools_2fdevtools_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_devtools_2fdevtools_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetPositionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetPositionsRequest, limit_),
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetPositionsRequest, category_),
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetPositionsRequest, author_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetPositionsResponse_Row, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetPositionsResponse_Row, position_),
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetPositionsResponse_Row, author_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetPositionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetPositionsResponse, positions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::SavePositionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::SavePositionRequest, position_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::SavePositionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::SavePositionResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::DeletePositionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::DeletePositionRequest, position_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::DeletePositionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::DeletePositionResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetOutfitsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetOutfitsRequest, name_),
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetOutfitsRequest, category_),
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetOutfitsRequest, author_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetOutfitsResponse_Row, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetOutfitsResponse_Row, outfit_),
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetOutfitsResponse_Row, author_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetOutfitsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetOutfitsResponse, outfits_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::SaveOutfitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::SaveOutfitRequest, outfit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::SaveOutfitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::SaveOutfitResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationsRequest, limit_),
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationsRequest, dict_),
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationsRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationsResponse_Row, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationsResponse_Row, animation_),
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationsResponse_Row, author_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationsResponse, animations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationRequest, dict_),
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationResponse, animation_),
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::GetAnimationResponse, author_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::SaveAnimationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::SaveAnimationRequest, animation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::SaveAnimationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::devtools::SaveAnimationResponse, success_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mruv::devtools::GetPositionsRequest)},
  { 8, -1, sizeof(::mruv::devtools::GetPositionsResponse_Row)},
  { 15, -1, sizeof(::mruv::devtools::GetPositionsResponse)},
  { 21, -1, sizeof(::mruv::devtools::SavePositionRequest)},
  { 27, -1, sizeof(::mruv::devtools::SavePositionResponse)},
  { 33, -1, sizeof(::mruv::devtools::DeletePositionRequest)},
  { 39, -1, sizeof(::mruv::devtools::DeletePositionResponse)},
  { 45, -1, sizeof(::mruv::devtools::GetOutfitsRequest)},
  { 53, -1, sizeof(::mruv::devtools::GetOutfitsResponse_Row)},
  { 60, -1, sizeof(::mruv::devtools::GetOutfitsResponse)},
  { 66, -1, sizeof(::mruv::devtools::SaveOutfitRequest)},
  { 72, -1, sizeof(::mruv::devtools::SaveOutfitResponse)},
  { 78, -1, sizeof(::mruv::devtools::GetAnimationsRequest)},
  { 86, -1, sizeof(::mruv::devtools::GetAnimationsResponse_Row)},
  { 93, -1, sizeof(::mruv::devtools::GetAnimationsResponse)},
  { 99, -1, sizeof(::mruv::devtools::GetAnimationRequest)},
  { 106, -1, sizeof(::mruv::devtools::GetAnimationResponse)},
  { 113, -1, sizeof(::mruv::devtools::SaveAnimationRequest)},
  { 119, -1, sizeof(::mruv::devtools::SaveAnimationResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_GetPositionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_GetPositionsResponse_Row_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_GetPositionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_SavePositionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_SavePositionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_DeletePositionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_DeletePositionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_GetOutfitsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_GetOutfitsResponse_Row_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_GetOutfitsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_SaveOutfitRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_SaveOutfitResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_GetAnimationsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_GetAnimationsResponse_Row_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_GetAnimationsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_GetAnimationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_GetAnimationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_SaveAnimationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::devtools::_SaveAnimationResponse_default_instance_),
};

const char descriptor_table_protodef_devtools_2fdevtools_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027devtools/devtools.proto\022\rmruv.devtools"
  "\032\034google/api/annotations.proto\032\023common/h"
  "ealth.proto\032\035devtools/devtools_model.pro"
  "to\"]\n\023GetPositionsRequest\022\r\n\005limit\030\001 \001(\r"
  "\022\020\n\010category\030\002 \001(\t\022%\n\006author\030\003 \001(\0132\025.mru"
  "v.devtools.Player\"\253\001\n\024GetPositionsRespon"
  "se\022:\n\tpositions\030\001 \003(\0132\'.mruv.devtools.Ge"
  "tPositionsResponse.Row\032W\n\003Row\022)\n\010positio"
  "n\030\001 \001(\0132\027.mruv.devtools.Position\022%\n\006auth"
  "or\030\002 \001(\0132\025.mruv.devtools.Player\"@\n\023SaveP"
  "ositionRequest\022)\n\010position\030\001 \001(\0132\027.mruv."
  "devtools.Position\"\'\n\024SavePositionRespons"
  "e\022\017\n\007success\030\001 \001(\010\"B\n\025DeletePositionRequ"
  "est\022)\n\010position\030\001 \001(\0132\027.mruv.devtools.Po"
  "sition\")\n\026DeletePositionResponse\022\017\n\007succ"
  "ess\030\001 \001(\010\"C\n\021GetOutfitsRequest\022\014\n\004name\030\001"
  " \001(\t\022\020\n\010category\030\002 \001(\t\022\016\n\006author\030\003 \001(\t\"\241"
  "\001\n\022GetOutfitsResponse\0226\n\007outfits\030\001 \003(\0132%"
  ".mruv.devtools.GetOutfitsResponse.Row\032S\n"
  "\003Row\022%\n\006outfit\030\001 \001(\0132\025.mruv.devtools.Out"
  "fit\022%\n\006author\030\002 \001(\0132\025.mruv.devtools.Play"
  "er\":\n\021SaveOutfitRequest\022%\n\006outfit\030\001 \001(\0132"
  "\025.mruv.devtools.Outfit\"%\n\022SaveOutfitResp"
  "onse\022\017\n\007success\030\001 \001(\010\"A\n\024GetAnimationsRe"
  "quest\022\r\n\005limit\030\001 \001(\r\022\014\n\004dict\030\002 \001(\t\022\014\n\004na"
  "me\030\003 \001(\t\"\260\001\n\025GetAnimationsResponse\022<\n\nan"
  "imations\030\001 \003(\0132(.mruv.devtools.GetAnimat"
  "ionsResponse.Row\032Y\n\003Row\022+\n\tanimation\030\001 \001"
  "(\0132\030.mruv.devtools.Animation\022%\n\006author\030\002"
  " \001(\0132\025.mruv.devtools.Player\"1\n\023GetAnimat"
  "ionRequest\022\014\n\004dict\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\"j"
  "\n\024GetAnimationResponse\022+\n\tanimation\030\001 \001("
  "\0132\030.mruv.devtools.Animation\022%\n\006author\030\002 "
  "\001(\0132\025.mruv.devtools.Player\"C\n\024SaveAnimat"
  "ionRequest\022+\n\tanimation\030\001 \001(\0132\030.mruv.dev"
  "tools.Animation\"(\n\025SaveAnimationResponse"
  "\022\017\n\007success\030\001 \001(\0102\254\t\n\023MruVDevToolsServic"
  "e\022w\n\014GetPositions\022\".mruv.devtools.GetPos"
  "itionsRequest\032#.mruv.devtools.GetPositio"
  "nsResponse\"\036\202\323\344\223\002\030\022\026/v1/devtools/positio"
  "ns\022w\n\014SavePosition\022\".mruv.devtools.SaveP"
  "ositionRequest\032#.mruv.devtools.SavePosit"
  "ionResponse\"\036\202\323\344\223\002\030\"\026/v1/devtools/positi"
  "ons\022|\n\016DeletePosition\022$.mruv.devtools.De"
  "letePositionRequest\032%.mruv.devtools.Dele"
  "tePositionResponse\"\035\202\323\344\223\002\027*\025/v1/devtools"
  "/position\022o\n\nGetOutfits\022 .mruv.devtools."
  "GetOutfitsRequest\032!.mruv.devtools.GetOut"
  "fitsResponse\"\034\202\323\344\223\002\026\022\024/v1/devtools/outfi"
  "ts\022o\n\nSaveOutfit\022 .mruv.devtools.SaveOut"
  "fitRequest\032!.mruv.devtools.SaveOutfitRes"
  "ponse\"\034\202\323\344\223\002\026\"\024/v1/devtools/outfits\022{\n\rG"
  "etAnimations\022#.mruv.devtools.GetAnimatio"
  "nsRequest\032$.mruv.devtools.GetAnimationsR"
  "esponse\"\037\202\323\344\223\002\031\022\027/v1/devtools/animations"
  "\022\177\n\014GetAnimation\022\".mruv.devtools.GetAnim"
  "ationRequest\032#.mruv.devtools.GetAnimatio"
  "nResponse\"&\202\323\344\223\002 \022\036/v1/devtools/animatio"
  "ns/{name}\022{\n\rSaveAnimation\022#.mruv.devtoo"
  "ls.SaveAnimationRequest\032$.mruv.devtools."
  "SaveAnimationResponse\"\037\202\323\344\223\002\031\"\027/v1/devto"
  "ols/animations\022h\n\020GetServiceStatus\022\032.mru"
  "v.ServiceStatusRequest\032\033.mruv.ServiceSta"
  "tusResponse\"\033\202\323\344\223\002\025\022\023/v1/devtools/status"
  "\022^\n\021GetServiceVersion\022\024.mruv.VersionRequ"
  "est\032\025.mruv.VersionResponse\"\034\202\323\344\223\002\026\022\024/v1/"
  "devtools/versionB(Z&github.com/MruV-RP/m"
  "ruv-pb-go/devtoolsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_devtools_2fdevtools_2eproto_deps[3] = {
  &::descriptor_table_common_2fhealth_2eproto,
  &::descriptor_table_devtools_2fdevtools_5fmodel_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_devtools_2fdevtools_2eproto_sccs[19] = {
  &scc_info_DeletePositionRequest_devtools_2fdevtools_2eproto.base,
  &scc_info_DeletePositionResponse_devtools_2fdevtools_2eproto.base,
  &scc_info_GetAnimationRequest_devtools_2fdevtools_2eproto.base,
  &scc_info_GetAnimationResponse_devtools_2fdevtools_2eproto.base,
  &scc_info_GetAnimationsRequest_devtools_2fdevtools_2eproto.base,
  &scc_info_GetAnimationsResponse_devtools_2fdevtools_2eproto.base,
  &scc_info_GetAnimationsResponse_Row_devtools_2fdevtools_2eproto.base,
  &scc_info_GetOutfitsRequest_devtools_2fdevtools_2eproto.base,
  &scc_info_GetOutfitsResponse_devtools_2fdevtools_2eproto.base,
  &scc_info_GetOutfitsResponse_Row_devtools_2fdevtools_2eproto.base,
  &scc_info_GetPositionsRequest_devtools_2fdevtools_2eproto.base,
  &scc_info_GetPositionsResponse_devtools_2fdevtools_2eproto.base,
  &scc_info_GetPositionsResponse_Row_devtools_2fdevtools_2eproto.base,
  &scc_info_SaveAnimationRequest_devtools_2fdevtools_2eproto.base,
  &scc_info_SaveAnimationResponse_devtools_2fdevtools_2eproto.base,
  &scc_info_SaveOutfitRequest_devtools_2fdevtools_2eproto.base,
  &scc_info_SaveOutfitResponse_devtools_2fdevtools_2eproto.base,
  &scc_info_SavePositionRequest_devtools_2fdevtools_2eproto.base,
  &scc_info_SavePositionResponse_devtools_2fdevtools_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_devtools_2fdevtools_2eproto_once;
static bool descriptor_table_devtools_2fdevtools_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_devtools_2fdevtools_2eproto = {
  &descriptor_table_devtools_2fdevtools_2eproto_initialized, descriptor_table_protodef_devtools_2fdevtools_2eproto, "devtools/devtools.proto", 2706,
  &descriptor_table_devtools_2fdevtools_2eproto_once, descriptor_table_devtools_2fdevtools_2eproto_sccs, descriptor_table_devtools_2fdevtools_2eproto_deps, 19, 3,
  schemas, file_default_instances, TableStruct_devtools_2fdevtools_2eproto::offsets,
  file_level_metadata_devtools_2fdevtools_2eproto, 19, file_level_enum_descriptors_devtools_2fdevtools_2eproto, file_level_service_descriptors_devtools_2fdevtools_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_devtools_2fdevtools_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_devtools_2fdevtools_2eproto), true);
namespace mruv {
namespace devtools {

// ===================================================================

void GetPositionsRequest::InitAsDefaultInstance() {
  ::mruv::devtools::_GetPositionsRequest_default_instance_._instance.get_mutable()->author_ = const_cast< ::mruv::devtools::Player*>(
      ::mruv::devtools::Player::internal_default_instance());
}
class GetPositionsRequest::_Internal {
 public:
  static const ::mruv::devtools::Player& author(const GetPositionsRequest* msg);
};

const ::mruv::devtools::Player&
GetPositionsRequest::_Internal::author(const GetPositionsRequest* msg) {
  return *msg->author_;
}
void GetPositionsRequest::clear_author() {
  if (GetArenaNoVirtual() == nullptr && author_ != nullptr) {
    delete author_;
  }
  author_ = nullptr;
}
GetPositionsRequest::GetPositionsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.GetPositionsRequest)
}
GetPositionsRequest::GetPositionsRequest(const GetPositionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_category().empty()) {
    category_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from._internal_has_author()) {
    author_ = new ::mruv::devtools::Player(*from.author_);
  } else {
    author_ = nullptr;
  }
  limit_ = from.limit_;
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.GetPositionsRequest)
}

void GetPositionsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPositionsRequest_devtools_2fdevtools_2eproto.base);
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&author_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&author_)) + sizeof(limit_));
}

GetPositionsRequest::~GetPositionsRequest() {
  // @@protoc_insertion_point(destructor:mruv.devtools.GetPositionsRequest)
  SharedDtor();
}

void GetPositionsRequest::SharedDtor() {
  category_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete author_;
}

void GetPositionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPositionsRequest& GetPositionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPositionsRequest_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void GetPositionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.GetPositionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  category_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && author_ != nullptr) {
    delete author_;
  }
  author_ = nullptr;
  limit_ = 0u;
  _internal_metadata_.Clear();
}

const char* GetPositionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 limit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string category = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_category();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.devtools.GetPositionsRequest.category"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mruv.devtools.Player author = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_author(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPositionsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.GetPositionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 limit = 1;
  if (this->limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_limit(), target);
  }

  // string category = 2;
  if (this->category().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_category().data(), static_cast<int>(this->_internal_category().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.devtools.GetPositionsRequest.category");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_category(), target);
  }

  // .mruv.devtools.Player author = 3;
  if (this->has_author()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::author(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.GetPositionsRequest)
  return target;
}

size_t GetPositionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.GetPositionsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string category = 2;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_category());
  }

  // .mruv.devtools.Player author = 3;
  if (this->has_author()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *author_);
  }

  // uint32 limit = 1;
  if (this->limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_limit());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPositionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.GetPositionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPositionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPositionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.GetPositionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.GetPositionsRequest)
    MergeFrom(*source);
  }
}

void GetPositionsRequest::MergeFrom(const GetPositionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.GetPositionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.category().size() > 0) {

    category_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from.has_author()) {
    _internal_mutable_author()->::mruv::devtools::Player::MergeFrom(from._internal_author());
  }
  if (from.limit() != 0) {
    _internal_set_limit(from._internal_limit());
  }
}

void GetPositionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.GetPositionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPositionsRequest::CopyFrom(const GetPositionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.GetPositionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPositionsRequest::IsInitialized() const {
  return true;
}

void GetPositionsRequest::InternalSwap(GetPositionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  category_.Swap(&other->category_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(author_, other->author_);
  swap(limit_, other->limit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPositionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPositionsResponse_Row::InitAsDefaultInstance() {
  ::mruv::devtools::_GetPositionsResponse_Row_default_instance_._instance.get_mutable()->position_ = const_cast< ::mruv::devtools::Position*>(
      ::mruv::devtools::Position::internal_default_instance());
  ::mruv::devtools::_GetPositionsResponse_Row_default_instance_._instance.get_mutable()->author_ = const_cast< ::mruv::devtools::Player*>(
      ::mruv::devtools::Player::internal_default_instance());
}
class GetPositionsResponse_Row::_Internal {
 public:
  static const ::mruv::devtools::Position& position(const GetPositionsResponse_Row* msg);
  static const ::mruv::devtools::Player& author(const GetPositionsResponse_Row* msg);
};

const ::mruv::devtools::Position&
GetPositionsResponse_Row::_Internal::position(const GetPositionsResponse_Row* msg) {
  return *msg->position_;
}
const ::mruv::devtools::Player&
GetPositionsResponse_Row::_Internal::author(const GetPositionsResponse_Row* msg) {
  return *msg->author_;
}
void GetPositionsResponse_Row::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
void GetPositionsResponse_Row::clear_author() {
  if (GetArenaNoVirtual() == nullptr && author_ != nullptr) {
    delete author_;
  }
  author_ = nullptr;
}
GetPositionsResponse_Row::GetPositionsResponse_Row()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.GetPositionsResponse.Row)
}
GetPositionsResponse_Row::GetPositionsResponse_Row(const GetPositionsResponse_Row& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_position()) {
    position_ = new ::mruv::devtools::Position(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from._internal_has_author()) {
    author_ = new ::mruv::devtools::Player(*from.author_);
  } else {
    author_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.GetPositionsResponse.Row)
}

void GetPositionsResponse_Row::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPositionsResponse_Row_devtools_2fdevtools_2eproto.base);
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&author_) -
      reinterpret_cast<char*>(&position_)) + sizeof(author_));
}

GetPositionsResponse_Row::~GetPositionsResponse_Row() {
  // @@protoc_insertion_point(destructor:mruv.devtools.GetPositionsResponse.Row)
  SharedDtor();
}

void GetPositionsResponse_Row::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete author_;
}

void GetPositionsResponse_Row::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPositionsResponse_Row& GetPositionsResponse_Row::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPositionsResponse_Row_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void GetPositionsResponse_Row::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.GetPositionsResponse.Row)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && author_ != nullptr) {
    delete author_;
  }
  author_ = nullptr;
  _internal_metadata_.Clear();
}

const char* GetPositionsResponse_Row::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.devtools.Position position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mruv.devtools.Player author = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_author(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPositionsResponse_Row::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.GetPositionsResponse.Row)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.devtools.Position position = 1;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::position(this), target, stream);
  }

  // .mruv.devtools.Player author = 2;
  if (this->has_author()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::author(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.GetPositionsResponse.Row)
  return target;
}

size_t GetPositionsResponse_Row::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.GetPositionsResponse.Row)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.devtools.Position position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .mruv.devtools.Player author = 2;
  if (this->has_author()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *author_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPositionsResponse_Row::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.GetPositionsResponse.Row)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPositionsResponse_Row* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPositionsResponse_Row>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.GetPositionsResponse.Row)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.GetPositionsResponse.Row)
    MergeFrom(*source);
  }
}

void GetPositionsResponse_Row::MergeFrom(const GetPositionsResponse_Row& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.GetPositionsResponse.Row)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    _internal_mutable_position()->::mruv::devtools::Position::MergeFrom(from._internal_position());
  }
  if (from.has_author()) {
    _internal_mutable_author()->::mruv::devtools::Player::MergeFrom(from._internal_author());
  }
}

void GetPositionsResponse_Row::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.GetPositionsResponse.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPositionsResponse_Row::CopyFrom(const GetPositionsResponse_Row& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.GetPositionsResponse.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPositionsResponse_Row::IsInitialized() const {
  return true;
}

void GetPositionsResponse_Row::InternalSwap(GetPositionsResponse_Row* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(position_, other->position_);
  swap(author_, other->author_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPositionsResponse_Row::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPositionsResponse::InitAsDefaultInstance() {
}
class GetPositionsResponse::_Internal {
 public:
};

GetPositionsResponse::GetPositionsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.GetPositionsResponse)
}
GetPositionsResponse::GetPositionsResponse(const GetPositionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      positions_(from.positions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.GetPositionsResponse)
}

void GetPositionsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPositionsResponse_devtools_2fdevtools_2eproto.base);
}

GetPositionsResponse::~GetPositionsResponse() {
  // @@protoc_insertion_point(destructor:mruv.devtools.GetPositionsResponse)
  SharedDtor();
}

void GetPositionsResponse::SharedDtor() {
}

void GetPositionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPositionsResponse& GetPositionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPositionsResponse_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void GetPositionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.GetPositionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  positions_.Clear();
  _internal_metadata_.Clear();
}

const char* GetPositionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .mruv.devtools.GetPositionsResponse.Row positions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_positions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPositionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.GetPositionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mruv.devtools.GetPositionsResponse.Row positions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_positions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_positions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.GetPositionsResponse)
  return target;
}

size_t GetPositionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.GetPositionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mruv.devtools.GetPositionsResponse.Row positions = 1;
  total_size += 1UL * this->_internal_positions_size();
  for (const auto& msg : this->positions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPositionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.GetPositionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPositionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPositionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.GetPositionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.GetPositionsResponse)
    MergeFrom(*source);
  }
}

void GetPositionsResponse::MergeFrom(const GetPositionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.GetPositionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  positions_.MergeFrom(from.positions_);
}

void GetPositionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.GetPositionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPositionsResponse::CopyFrom(const GetPositionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.GetPositionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPositionsResponse::IsInitialized() const {
  return true;
}

void GetPositionsResponse::InternalSwap(GetPositionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  positions_.InternalSwap(&other->positions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPositionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SavePositionRequest::InitAsDefaultInstance() {
  ::mruv::devtools::_SavePositionRequest_default_instance_._instance.get_mutable()->position_ = const_cast< ::mruv::devtools::Position*>(
      ::mruv::devtools::Position::internal_default_instance());
}
class SavePositionRequest::_Internal {
 public:
  static const ::mruv::devtools::Position& position(const SavePositionRequest* msg);
};

const ::mruv::devtools::Position&
SavePositionRequest::_Internal::position(const SavePositionRequest* msg) {
  return *msg->position_;
}
void SavePositionRequest::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
SavePositionRequest::SavePositionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.SavePositionRequest)
}
SavePositionRequest::SavePositionRequest(const SavePositionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_position()) {
    position_ = new ::mruv::devtools::Position(*from.position_);
  } else {
    position_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.SavePositionRequest)
}

void SavePositionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SavePositionRequest_devtools_2fdevtools_2eproto.base);
  position_ = nullptr;
}

SavePositionRequest::~SavePositionRequest() {
  // @@protoc_insertion_point(destructor:mruv.devtools.SavePositionRequest)
  SharedDtor();
}

void SavePositionRequest::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void SavePositionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavePositionRequest& SavePositionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavePositionRequest_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void SavePositionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.SavePositionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  _internal_metadata_.Clear();
}

const char* SavePositionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.devtools.Position position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SavePositionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.SavePositionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.devtools.Position position = 1;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::position(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.SavePositionRequest)
  return target;
}

size_t SavePositionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.SavePositionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.devtools.Position position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavePositionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.SavePositionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SavePositionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavePositionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.SavePositionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.SavePositionRequest)
    MergeFrom(*source);
  }
}

void SavePositionRequest::MergeFrom(const SavePositionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.SavePositionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    _internal_mutable_position()->::mruv::devtools::Position::MergeFrom(from._internal_position());
  }
}

void SavePositionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.SavePositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavePositionRequest::CopyFrom(const SavePositionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.SavePositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavePositionRequest::IsInitialized() const {
  return true;
}

void SavePositionRequest::InternalSwap(SavePositionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(position_, other->position_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavePositionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SavePositionResponse::InitAsDefaultInstance() {
}
class SavePositionResponse::_Internal {
 public:
};

SavePositionResponse::SavePositionResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.SavePositionResponse)
}
SavePositionResponse::SavePositionResponse(const SavePositionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.SavePositionResponse)
}

void SavePositionResponse::SharedCtor() {
  success_ = false;
}

SavePositionResponse::~SavePositionResponse() {
  // @@protoc_insertion_point(destructor:mruv.devtools.SavePositionResponse)
  SharedDtor();
}

void SavePositionResponse::SharedDtor() {
}

void SavePositionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavePositionResponse& SavePositionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavePositionResponse_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void SavePositionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.SavePositionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear();
}

const char* SavePositionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SavePositionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.SavePositionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.SavePositionResponse)
  return target;
}

size_t SavePositionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.SavePositionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavePositionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.SavePositionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SavePositionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavePositionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.SavePositionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.SavePositionResponse)
    MergeFrom(*source);
  }
}

void SavePositionResponse::MergeFrom(const SavePositionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.SavePositionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void SavePositionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.SavePositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavePositionResponse::CopyFrom(const SavePositionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.SavePositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavePositionResponse::IsInitialized() const {
  return true;
}

void SavePositionResponse::InternalSwap(SavePositionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavePositionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeletePositionRequest::InitAsDefaultInstance() {
  ::mruv::devtools::_DeletePositionRequest_default_instance_._instance.get_mutable()->position_ = const_cast< ::mruv::devtools::Position*>(
      ::mruv::devtools::Position::internal_default_instance());
}
class DeletePositionRequest::_Internal {
 public:
  static const ::mruv::devtools::Position& position(const DeletePositionRequest* msg);
};

const ::mruv::devtools::Position&
DeletePositionRequest::_Internal::position(const DeletePositionRequest* msg) {
  return *msg->position_;
}
void DeletePositionRequest::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
DeletePositionRequest::DeletePositionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.DeletePositionRequest)
}
DeletePositionRequest::DeletePositionRequest(const DeletePositionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_position()) {
    position_ = new ::mruv::devtools::Position(*from.position_);
  } else {
    position_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.DeletePositionRequest)
}

void DeletePositionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeletePositionRequest_devtools_2fdevtools_2eproto.base);
  position_ = nullptr;
}

DeletePositionRequest::~DeletePositionRequest() {
  // @@protoc_insertion_point(destructor:mruv.devtools.DeletePositionRequest)
  SharedDtor();
}

void DeletePositionRequest::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void DeletePositionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeletePositionRequest& DeletePositionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeletePositionRequest_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void DeletePositionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.DeletePositionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  _internal_metadata_.Clear();
}

const char* DeletePositionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.devtools.Position position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePositionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.DeletePositionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.devtools.Position position = 1;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::position(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.DeletePositionRequest)
  return target;
}

size_t DeletePositionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.DeletePositionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.devtools.Position position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePositionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.DeletePositionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePositionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeletePositionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.DeletePositionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.DeletePositionRequest)
    MergeFrom(*source);
  }
}

void DeletePositionRequest::MergeFrom(const DeletePositionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.DeletePositionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    _internal_mutable_position()->::mruv::devtools::Position::MergeFrom(from._internal_position());
  }
}

void DeletePositionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.DeletePositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePositionRequest::CopyFrom(const DeletePositionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.DeletePositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePositionRequest::IsInitialized() const {
  return true;
}

void DeletePositionRequest::InternalSwap(DeletePositionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(position_, other->position_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePositionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeletePositionResponse::InitAsDefaultInstance() {
}
class DeletePositionResponse::_Internal {
 public:
};

DeletePositionResponse::DeletePositionResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.DeletePositionResponse)
}
DeletePositionResponse::DeletePositionResponse(const DeletePositionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.DeletePositionResponse)
}

void DeletePositionResponse::SharedCtor() {
  success_ = false;
}

DeletePositionResponse::~DeletePositionResponse() {
  // @@protoc_insertion_point(destructor:mruv.devtools.DeletePositionResponse)
  SharedDtor();
}

void DeletePositionResponse::SharedDtor() {
}

void DeletePositionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeletePositionResponse& DeletePositionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeletePositionResponse_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void DeletePositionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.DeletePositionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear();
}

const char* DeletePositionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeletePositionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.DeletePositionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.DeletePositionResponse)
  return target;
}

size_t DeletePositionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.DeletePositionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePositionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.DeletePositionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePositionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeletePositionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.DeletePositionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.DeletePositionResponse)
    MergeFrom(*source);
  }
}

void DeletePositionResponse::MergeFrom(const DeletePositionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.DeletePositionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void DeletePositionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.DeletePositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePositionResponse::CopyFrom(const DeletePositionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.DeletePositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePositionResponse::IsInitialized() const {
  return true;
}

void DeletePositionResponse::InternalSwap(DeletePositionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePositionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOutfitsRequest::InitAsDefaultInstance() {
}
class GetOutfitsRequest::_Internal {
 public:
};

GetOutfitsRequest::GetOutfitsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.GetOutfitsRequest)
}
GetOutfitsRequest::GetOutfitsRequest(const GetOutfitsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_category().empty()) {
    category_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  author_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_author().empty()) {
    author_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.GetOutfitsRequest)
}

void GetOutfitsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOutfitsRequest_devtools_2fdevtools_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  author_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetOutfitsRequest::~GetOutfitsRequest() {
  // @@protoc_insertion_point(destructor:mruv.devtools.GetOutfitsRequest)
  SharedDtor();
}

void GetOutfitsRequest::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  author_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetOutfitsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOutfitsRequest& GetOutfitsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOutfitsRequest_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void GetOutfitsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.GetOutfitsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  author_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* GetOutfitsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.devtools.GetOutfitsRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string category = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_category();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.devtools.GetOutfitsRequest.category"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string author = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_author();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.devtools.GetOutfitsRequest.author"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOutfitsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.GetOutfitsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.devtools.GetOutfitsRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string category = 2;
  if (this->category().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_category().data(), static_cast<int>(this->_internal_category().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.devtools.GetOutfitsRequest.category");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_category(), target);
  }

  // string author = 3;
  if (this->author().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_author().data(), static_cast<int>(this->_internal_author().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.devtools.GetOutfitsRequest.author");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_author(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.GetOutfitsRequest)
  return target;
}

size_t GetOutfitsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.GetOutfitsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string category = 2;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_category());
  }

  // string author = 3;
  if (this->author().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_author());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOutfitsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.GetOutfitsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOutfitsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOutfitsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.GetOutfitsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.GetOutfitsRequest)
    MergeFrom(*source);
  }
}

void GetOutfitsRequest::MergeFrom(const GetOutfitsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.GetOutfitsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.category().size() > 0) {

    category_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from.author().size() > 0) {

    author_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
}

void GetOutfitsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.GetOutfitsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOutfitsRequest::CopyFrom(const GetOutfitsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.GetOutfitsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOutfitsRequest::IsInitialized() const {
  return true;
}

void GetOutfitsRequest::InternalSwap(GetOutfitsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  category_.Swap(&other->category_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  author_.Swap(&other->author_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOutfitsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOutfitsResponse_Row::InitAsDefaultInstance() {
  ::mruv::devtools::_GetOutfitsResponse_Row_default_instance_._instance.get_mutable()->outfit_ = const_cast< ::mruv::devtools::Outfit*>(
      ::mruv::devtools::Outfit::internal_default_instance());
  ::mruv::devtools::_GetOutfitsResponse_Row_default_instance_._instance.get_mutable()->author_ = const_cast< ::mruv::devtools::Player*>(
      ::mruv::devtools::Player::internal_default_instance());
}
class GetOutfitsResponse_Row::_Internal {
 public:
  static const ::mruv::devtools::Outfit& outfit(const GetOutfitsResponse_Row* msg);
  static const ::mruv::devtools::Player& author(const GetOutfitsResponse_Row* msg);
};

const ::mruv::devtools::Outfit&
GetOutfitsResponse_Row::_Internal::outfit(const GetOutfitsResponse_Row* msg) {
  return *msg->outfit_;
}
const ::mruv::devtools::Player&
GetOutfitsResponse_Row::_Internal::author(const GetOutfitsResponse_Row* msg) {
  return *msg->author_;
}
void GetOutfitsResponse_Row::clear_outfit() {
  if (GetArenaNoVirtual() == nullptr && outfit_ != nullptr) {
    delete outfit_;
  }
  outfit_ = nullptr;
}
void GetOutfitsResponse_Row::clear_author() {
  if (GetArenaNoVirtual() == nullptr && author_ != nullptr) {
    delete author_;
  }
  author_ = nullptr;
}
GetOutfitsResponse_Row::GetOutfitsResponse_Row()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.GetOutfitsResponse.Row)
}
GetOutfitsResponse_Row::GetOutfitsResponse_Row(const GetOutfitsResponse_Row& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_outfit()) {
    outfit_ = new ::mruv::devtools::Outfit(*from.outfit_);
  } else {
    outfit_ = nullptr;
  }
  if (from._internal_has_author()) {
    author_ = new ::mruv::devtools::Player(*from.author_);
  } else {
    author_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.GetOutfitsResponse.Row)
}

void GetOutfitsResponse_Row::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOutfitsResponse_Row_devtools_2fdevtools_2eproto.base);
  ::memset(&outfit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&author_) -
      reinterpret_cast<char*>(&outfit_)) + sizeof(author_));
}

GetOutfitsResponse_Row::~GetOutfitsResponse_Row() {
  // @@protoc_insertion_point(destructor:mruv.devtools.GetOutfitsResponse.Row)
  SharedDtor();
}

void GetOutfitsResponse_Row::SharedDtor() {
  if (this != internal_default_instance()) delete outfit_;
  if (this != internal_default_instance()) delete author_;
}

void GetOutfitsResponse_Row::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOutfitsResponse_Row& GetOutfitsResponse_Row::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOutfitsResponse_Row_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void GetOutfitsResponse_Row::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.GetOutfitsResponse.Row)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && outfit_ != nullptr) {
    delete outfit_;
  }
  outfit_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && author_ != nullptr) {
    delete author_;
  }
  author_ = nullptr;
  _internal_metadata_.Clear();
}

const char* GetOutfitsResponse_Row::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.devtools.Outfit outfit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_outfit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mruv.devtools.Player author = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_author(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOutfitsResponse_Row::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.GetOutfitsResponse.Row)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.devtools.Outfit outfit = 1;
  if (this->has_outfit()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::outfit(this), target, stream);
  }

  // .mruv.devtools.Player author = 2;
  if (this->has_author()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::author(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.GetOutfitsResponse.Row)
  return target;
}

size_t GetOutfitsResponse_Row::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.GetOutfitsResponse.Row)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.devtools.Outfit outfit = 1;
  if (this->has_outfit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *outfit_);
  }

  // .mruv.devtools.Player author = 2;
  if (this->has_author()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *author_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOutfitsResponse_Row::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.GetOutfitsResponse.Row)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOutfitsResponse_Row* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOutfitsResponse_Row>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.GetOutfitsResponse.Row)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.GetOutfitsResponse.Row)
    MergeFrom(*source);
  }
}

void GetOutfitsResponse_Row::MergeFrom(const GetOutfitsResponse_Row& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.GetOutfitsResponse.Row)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_outfit()) {
    _internal_mutable_outfit()->::mruv::devtools::Outfit::MergeFrom(from._internal_outfit());
  }
  if (from.has_author()) {
    _internal_mutable_author()->::mruv::devtools::Player::MergeFrom(from._internal_author());
  }
}

void GetOutfitsResponse_Row::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.GetOutfitsResponse.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOutfitsResponse_Row::CopyFrom(const GetOutfitsResponse_Row& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.GetOutfitsResponse.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOutfitsResponse_Row::IsInitialized() const {
  return true;
}

void GetOutfitsResponse_Row::InternalSwap(GetOutfitsResponse_Row* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(outfit_, other->outfit_);
  swap(author_, other->author_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOutfitsResponse_Row::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOutfitsResponse::InitAsDefaultInstance() {
}
class GetOutfitsResponse::_Internal {
 public:
};

GetOutfitsResponse::GetOutfitsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.GetOutfitsResponse)
}
GetOutfitsResponse::GetOutfitsResponse(const GetOutfitsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      outfits_(from.outfits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.GetOutfitsResponse)
}

void GetOutfitsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetOutfitsResponse_devtools_2fdevtools_2eproto.base);
}

GetOutfitsResponse::~GetOutfitsResponse() {
  // @@protoc_insertion_point(destructor:mruv.devtools.GetOutfitsResponse)
  SharedDtor();
}

void GetOutfitsResponse::SharedDtor() {
}

void GetOutfitsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOutfitsResponse& GetOutfitsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOutfitsResponse_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void GetOutfitsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.GetOutfitsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outfits_.Clear();
  _internal_metadata_.Clear();
}

const char* GetOutfitsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .mruv.devtools.GetOutfitsResponse.Row outfits = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outfits(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOutfitsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.GetOutfitsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mruv.devtools.GetOutfitsResponse.Row outfits = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_outfits_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_outfits(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.GetOutfitsResponse)
  return target;
}

size_t GetOutfitsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.GetOutfitsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mruv.devtools.GetOutfitsResponse.Row outfits = 1;
  total_size += 1UL * this->_internal_outfits_size();
  for (const auto& msg : this->outfits_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOutfitsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.GetOutfitsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOutfitsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOutfitsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.GetOutfitsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.GetOutfitsResponse)
    MergeFrom(*source);
  }
}

void GetOutfitsResponse::MergeFrom(const GetOutfitsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.GetOutfitsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  outfits_.MergeFrom(from.outfits_);
}

void GetOutfitsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.GetOutfitsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOutfitsResponse::CopyFrom(const GetOutfitsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.GetOutfitsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOutfitsResponse::IsInitialized() const {
  return true;
}

void GetOutfitsResponse::InternalSwap(GetOutfitsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  outfits_.InternalSwap(&other->outfits_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOutfitsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SaveOutfitRequest::InitAsDefaultInstance() {
  ::mruv::devtools::_SaveOutfitRequest_default_instance_._instance.get_mutable()->outfit_ = const_cast< ::mruv::devtools::Outfit*>(
      ::mruv::devtools::Outfit::internal_default_instance());
}
class SaveOutfitRequest::_Internal {
 public:
  static const ::mruv::devtools::Outfit& outfit(const SaveOutfitRequest* msg);
};

const ::mruv::devtools::Outfit&
SaveOutfitRequest::_Internal::outfit(const SaveOutfitRequest* msg) {
  return *msg->outfit_;
}
void SaveOutfitRequest::clear_outfit() {
  if (GetArenaNoVirtual() == nullptr && outfit_ != nullptr) {
    delete outfit_;
  }
  outfit_ = nullptr;
}
SaveOutfitRequest::SaveOutfitRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.SaveOutfitRequest)
}
SaveOutfitRequest::SaveOutfitRequest(const SaveOutfitRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_outfit()) {
    outfit_ = new ::mruv::devtools::Outfit(*from.outfit_);
  } else {
    outfit_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.SaveOutfitRequest)
}

void SaveOutfitRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SaveOutfitRequest_devtools_2fdevtools_2eproto.base);
  outfit_ = nullptr;
}

SaveOutfitRequest::~SaveOutfitRequest() {
  // @@protoc_insertion_point(destructor:mruv.devtools.SaveOutfitRequest)
  SharedDtor();
}

void SaveOutfitRequest::SharedDtor() {
  if (this != internal_default_instance()) delete outfit_;
}

void SaveOutfitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SaveOutfitRequest& SaveOutfitRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SaveOutfitRequest_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void SaveOutfitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.SaveOutfitRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && outfit_ != nullptr) {
    delete outfit_;
  }
  outfit_ = nullptr;
  _internal_metadata_.Clear();
}

const char* SaveOutfitRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.devtools.Outfit outfit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_outfit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SaveOutfitRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.SaveOutfitRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.devtools.Outfit outfit = 1;
  if (this->has_outfit()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::outfit(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.SaveOutfitRequest)
  return target;
}

size_t SaveOutfitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.SaveOutfitRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.devtools.Outfit outfit = 1;
  if (this->has_outfit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *outfit_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveOutfitRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.SaveOutfitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveOutfitRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SaveOutfitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.SaveOutfitRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.SaveOutfitRequest)
    MergeFrom(*source);
  }
}

void SaveOutfitRequest::MergeFrom(const SaveOutfitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.SaveOutfitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_outfit()) {
    _internal_mutable_outfit()->::mruv::devtools::Outfit::MergeFrom(from._internal_outfit());
  }
}

void SaveOutfitRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.SaveOutfitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveOutfitRequest::CopyFrom(const SaveOutfitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.SaveOutfitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveOutfitRequest::IsInitialized() const {
  return true;
}

void SaveOutfitRequest::InternalSwap(SaveOutfitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(outfit_, other->outfit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveOutfitRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SaveOutfitResponse::InitAsDefaultInstance() {
}
class SaveOutfitResponse::_Internal {
 public:
};

SaveOutfitResponse::SaveOutfitResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.SaveOutfitResponse)
}
SaveOutfitResponse::SaveOutfitResponse(const SaveOutfitResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.SaveOutfitResponse)
}

void SaveOutfitResponse::SharedCtor() {
  success_ = false;
}

SaveOutfitResponse::~SaveOutfitResponse() {
  // @@protoc_insertion_point(destructor:mruv.devtools.SaveOutfitResponse)
  SharedDtor();
}

void SaveOutfitResponse::SharedDtor() {
}

void SaveOutfitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SaveOutfitResponse& SaveOutfitResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SaveOutfitResponse_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void SaveOutfitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.SaveOutfitResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear();
}

const char* SaveOutfitResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SaveOutfitResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.SaveOutfitResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.SaveOutfitResponse)
  return target;
}

size_t SaveOutfitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.SaveOutfitResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveOutfitResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.SaveOutfitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveOutfitResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SaveOutfitResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.SaveOutfitResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.SaveOutfitResponse)
    MergeFrom(*source);
  }
}

void SaveOutfitResponse::MergeFrom(const SaveOutfitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.SaveOutfitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void SaveOutfitResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.SaveOutfitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveOutfitResponse::CopyFrom(const SaveOutfitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.SaveOutfitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveOutfitResponse::IsInitialized() const {
  return true;
}

void SaveOutfitResponse::InternalSwap(SaveOutfitResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveOutfitResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAnimationsRequest::InitAsDefaultInstance() {
}
class GetAnimationsRequest::_Internal {
 public:
};

GetAnimationsRequest::GetAnimationsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.GetAnimationsRequest)
}
GetAnimationsRequest::GetAnimationsRequest(const GetAnimationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dict_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dict().empty()) {
    dict_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.dict_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  limit_ = from.limit_;
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.GetAnimationsRequest)
}

void GetAnimationsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAnimationsRequest_devtools_2fdevtools_2eproto.base);
  dict_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  limit_ = 0u;
}

GetAnimationsRequest::~GetAnimationsRequest() {
  // @@protoc_insertion_point(destructor:mruv.devtools.GetAnimationsRequest)
  SharedDtor();
}

void GetAnimationsRequest::SharedDtor() {
  dict_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAnimationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAnimationsRequest& GetAnimationsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAnimationsRequest_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void GetAnimationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.GetAnimationsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dict_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  limit_ = 0u;
  _internal_metadata_.Clear();
}

const char* GetAnimationsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 limit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dict = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_dict();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.devtools.GetAnimationsRequest.dict"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.devtools.GetAnimationsRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAnimationsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.GetAnimationsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 limit = 1;
  if (this->limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_limit(), target);
  }

  // string dict = 2;
  if (this->dict().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dict().data(), static_cast<int>(this->_internal_dict().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.devtools.GetAnimationsRequest.dict");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_dict(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.devtools.GetAnimationsRequest.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.GetAnimationsRequest)
  return target;
}

size_t GetAnimationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.GetAnimationsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dict = 2;
  if (this->dict().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dict());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint32 limit = 1;
  if (this->limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_limit());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAnimationsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.GetAnimationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAnimationsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAnimationsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.GetAnimationsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.GetAnimationsRequest)
    MergeFrom(*source);
  }
}

void GetAnimationsRequest::MergeFrom(const GetAnimationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.GetAnimationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dict().size() > 0) {

    dict_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.dict_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.limit() != 0) {
    _internal_set_limit(from._internal_limit());
  }
}

void GetAnimationsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.GetAnimationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAnimationsRequest::CopyFrom(const GetAnimationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.GetAnimationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAnimationsRequest::IsInitialized() const {
  return true;
}

void GetAnimationsRequest::InternalSwap(GetAnimationsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  dict_.Swap(&other->dict_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(limit_, other->limit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAnimationsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAnimationsResponse_Row::InitAsDefaultInstance() {
  ::mruv::devtools::_GetAnimationsResponse_Row_default_instance_._instance.get_mutable()->animation_ = const_cast< ::mruv::devtools::Animation*>(
      ::mruv::devtools::Animation::internal_default_instance());
  ::mruv::devtools::_GetAnimationsResponse_Row_default_instance_._instance.get_mutable()->author_ = const_cast< ::mruv::devtools::Player*>(
      ::mruv::devtools::Player::internal_default_instance());
}
class GetAnimationsResponse_Row::_Internal {
 public:
  static const ::mruv::devtools::Animation& animation(const GetAnimationsResponse_Row* msg);
  static const ::mruv::devtools::Player& author(const GetAnimationsResponse_Row* msg);
};

const ::mruv::devtools::Animation&
GetAnimationsResponse_Row::_Internal::animation(const GetAnimationsResponse_Row* msg) {
  return *msg->animation_;
}
const ::mruv::devtools::Player&
GetAnimationsResponse_Row::_Internal::author(const GetAnimationsResponse_Row* msg) {
  return *msg->author_;
}
void GetAnimationsResponse_Row::clear_animation() {
  if (GetArenaNoVirtual() == nullptr && animation_ != nullptr) {
    delete animation_;
  }
  animation_ = nullptr;
}
void GetAnimationsResponse_Row::clear_author() {
  if (GetArenaNoVirtual() == nullptr && author_ != nullptr) {
    delete author_;
  }
  author_ = nullptr;
}
GetAnimationsResponse_Row::GetAnimationsResponse_Row()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.GetAnimationsResponse.Row)
}
GetAnimationsResponse_Row::GetAnimationsResponse_Row(const GetAnimationsResponse_Row& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_animation()) {
    animation_ = new ::mruv::devtools::Animation(*from.animation_);
  } else {
    animation_ = nullptr;
  }
  if (from._internal_has_author()) {
    author_ = new ::mruv::devtools::Player(*from.author_);
  } else {
    author_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.GetAnimationsResponse.Row)
}

void GetAnimationsResponse_Row::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAnimationsResponse_Row_devtools_2fdevtools_2eproto.base);
  ::memset(&animation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&author_) -
      reinterpret_cast<char*>(&animation_)) + sizeof(author_));
}

GetAnimationsResponse_Row::~GetAnimationsResponse_Row() {
  // @@protoc_insertion_point(destructor:mruv.devtools.GetAnimationsResponse.Row)
  SharedDtor();
}

void GetAnimationsResponse_Row::SharedDtor() {
  if (this != internal_default_instance()) delete animation_;
  if (this != internal_default_instance()) delete author_;
}

void GetAnimationsResponse_Row::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAnimationsResponse_Row& GetAnimationsResponse_Row::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAnimationsResponse_Row_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void GetAnimationsResponse_Row::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.GetAnimationsResponse.Row)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && animation_ != nullptr) {
    delete animation_;
  }
  animation_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && author_ != nullptr) {
    delete author_;
  }
  author_ = nullptr;
  _internal_metadata_.Clear();
}

const char* GetAnimationsResponse_Row::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.devtools.Animation animation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_animation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mruv.devtools.Player author = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_author(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAnimationsResponse_Row::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.GetAnimationsResponse.Row)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.devtools.Animation animation = 1;
  if (this->has_animation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::animation(this), target, stream);
  }

  // .mruv.devtools.Player author = 2;
  if (this->has_author()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::author(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.GetAnimationsResponse.Row)
  return target;
}

size_t GetAnimationsResponse_Row::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.GetAnimationsResponse.Row)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.devtools.Animation animation = 1;
  if (this->has_animation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *animation_);
  }

  // .mruv.devtools.Player author = 2;
  if (this->has_author()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *author_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAnimationsResponse_Row::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.GetAnimationsResponse.Row)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAnimationsResponse_Row* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAnimationsResponse_Row>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.GetAnimationsResponse.Row)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.GetAnimationsResponse.Row)
    MergeFrom(*source);
  }
}

void GetAnimationsResponse_Row::MergeFrom(const GetAnimationsResponse_Row& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.GetAnimationsResponse.Row)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_animation()) {
    _internal_mutable_animation()->::mruv::devtools::Animation::MergeFrom(from._internal_animation());
  }
  if (from.has_author()) {
    _internal_mutable_author()->::mruv::devtools::Player::MergeFrom(from._internal_author());
  }
}

void GetAnimationsResponse_Row::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.GetAnimationsResponse.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAnimationsResponse_Row::CopyFrom(const GetAnimationsResponse_Row& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.GetAnimationsResponse.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAnimationsResponse_Row::IsInitialized() const {
  return true;
}

void GetAnimationsResponse_Row::InternalSwap(GetAnimationsResponse_Row* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(animation_, other->animation_);
  swap(author_, other->author_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAnimationsResponse_Row::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAnimationsResponse::InitAsDefaultInstance() {
}
class GetAnimationsResponse::_Internal {
 public:
};

GetAnimationsResponse::GetAnimationsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.GetAnimationsResponse)
}
GetAnimationsResponse::GetAnimationsResponse(const GetAnimationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      animations_(from.animations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.GetAnimationsResponse)
}

void GetAnimationsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAnimationsResponse_devtools_2fdevtools_2eproto.base);
}

GetAnimationsResponse::~GetAnimationsResponse() {
  // @@protoc_insertion_point(destructor:mruv.devtools.GetAnimationsResponse)
  SharedDtor();
}

void GetAnimationsResponse::SharedDtor() {
}

void GetAnimationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAnimationsResponse& GetAnimationsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAnimationsResponse_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void GetAnimationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.GetAnimationsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  animations_.Clear();
  _internal_metadata_.Clear();
}

const char* GetAnimationsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .mruv.devtools.GetAnimationsResponse.Row animations = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_animations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAnimationsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.GetAnimationsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mruv.devtools.GetAnimationsResponse.Row animations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_animations_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_animations(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.GetAnimationsResponse)
  return target;
}

size_t GetAnimationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.GetAnimationsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mruv.devtools.GetAnimationsResponse.Row animations = 1;
  total_size += 1UL * this->_internal_animations_size();
  for (const auto& msg : this->animations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAnimationsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.GetAnimationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAnimationsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAnimationsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.GetAnimationsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.GetAnimationsResponse)
    MergeFrom(*source);
  }
}

void GetAnimationsResponse::MergeFrom(const GetAnimationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.GetAnimationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  animations_.MergeFrom(from.animations_);
}

void GetAnimationsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.GetAnimationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAnimationsResponse::CopyFrom(const GetAnimationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.GetAnimationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAnimationsResponse::IsInitialized() const {
  return true;
}

void GetAnimationsResponse::InternalSwap(GetAnimationsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  animations_.InternalSwap(&other->animations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAnimationsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAnimationRequest::InitAsDefaultInstance() {
}
class GetAnimationRequest::_Internal {
 public:
};

GetAnimationRequest::GetAnimationRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.GetAnimationRequest)
}
GetAnimationRequest::GetAnimationRequest(const GetAnimationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dict_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dict().empty()) {
    dict_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.dict_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.GetAnimationRequest)
}

void GetAnimationRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAnimationRequest_devtools_2fdevtools_2eproto.base);
  dict_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetAnimationRequest::~GetAnimationRequest() {
  // @@protoc_insertion_point(destructor:mruv.devtools.GetAnimationRequest)
  SharedDtor();
}

void GetAnimationRequest::SharedDtor() {
  dict_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAnimationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAnimationRequest& GetAnimationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAnimationRequest_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void GetAnimationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.GetAnimationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dict_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* GetAnimationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string dict = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_dict();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.devtools.GetAnimationRequest.dict"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.devtools.GetAnimationRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAnimationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.GetAnimationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dict = 1;
  if (this->dict().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dict().data(), static_cast<int>(this->_internal_dict().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.devtools.GetAnimationRequest.dict");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_dict(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.devtools.GetAnimationRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.GetAnimationRequest)
  return target;
}

size_t GetAnimationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.GetAnimationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dict = 1;
  if (this->dict().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dict());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAnimationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.GetAnimationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAnimationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAnimationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.GetAnimationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.GetAnimationRequest)
    MergeFrom(*source);
  }
}

void GetAnimationRequest::MergeFrom(const GetAnimationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.GetAnimationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dict().size() > 0) {

    dict_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.dict_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void GetAnimationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.GetAnimationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAnimationRequest::CopyFrom(const GetAnimationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.GetAnimationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAnimationRequest::IsInitialized() const {
  return true;
}

void GetAnimationRequest::InternalSwap(GetAnimationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  dict_.Swap(&other->dict_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAnimationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAnimationResponse::InitAsDefaultInstance() {
  ::mruv::devtools::_GetAnimationResponse_default_instance_._instance.get_mutable()->animation_ = const_cast< ::mruv::devtools::Animation*>(
      ::mruv::devtools::Animation::internal_default_instance());
  ::mruv::devtools::_GetAnimationResponse_default_instance_._instance.get_mutable()->author_ = const_cast< ::mruv::devtools::Player*>(
      ::mruv::devtools::Player::internal_default_instance());
}
class GetAnimationResponse::_Internal {
 public:
  static const ::mruv::devtools::Animation& animation(const GetAnimationResponse* msg);
  static const ::mruv::devtools::Player& author(const GetAnimationResponse* msg);
};

const ::mruv::devtools::Animation&
GetAnimationResponse::_Internal::animation(const GetAnimationResponse* msg) {
  return *msg->animation_;
}
const ::mruv::devtools::Player&
GetAnimationResponse::_Internal::author(const GetAnimationResponse* msg) {
  return *msg->author_;
}
void GetAnimationResponse::clear_animation() {
  if (GetArenaNoVirtual() == nullptr && animation_ != nullptr) {
    delete animation_;
  }
  animation_ = nullptr;
}
void GetAnimationResponse::clear_author() {
  if (GetArenaNoVirtual() == nullptr && author_ != nullptr) {
    delete author_;
  }
  author_ = nullptr;
}
GetAnimationResponse::GetAnimationResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.GetAnimationResponse)
}
GetAnimationResponse::GetAnimationResponse(const GetAnimationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_animation()) {
    animation_ = new ::mruv::devtools::Animation(*from.animation_);
  } else {
    animation_ = nullptr;
  }
  if (from._internal_has_author()) {
    author_ = new ::mruv::devtools::Player(*from.author_);
  } else {
    author_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.GetAnimationResponse)
}

void GetAnimationResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAnimationResponse_devtools_2fdevtools_2eproto.base);
  ::memset(&animation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&author_) -
      reinterpret_cast<char*>(&animation_)) + sizeof(author_));
}

GetAnimationResponse::~GetAnimationResponse() {
  // @@protoc_insertion_point(destructor:mruv.devtools.GetAnimationResponse)
  SharedDtor();
}

void GetAnimationResponse::SharedDtor() {
  if (this != internal_default_instance()) delete animation_;
  if (this != internal_default_instance()) delete author_;
}

void GetAnimationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAnimationResponse& GetAnimationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAnimationResponse_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void GetAnimationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.GetAnimationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && animation_ != nullptr) {
    delete animation_;
  }
  animation_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && author_ != nullptr) {
    delete author_;
  }
  author_ = nullptr;
  _internal_metadata_.Clear();
}

const char* GetAnimationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.devtools.Animation animation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_animation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mruv.devtools.Player author = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_author(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAnimationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.GetAnimationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.devtools.Animation animation = 1;
  if (this->has_animation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::animation(this), target, stream);
  }

  // .mruv.devtools.Player author = 2;
  if (this->has_author()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::author(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.GetAnimationResponse)
  return target;
}

size_t GetAnimationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.GetAnimationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.devtools.Animation animation = 1;
  if (this->has_animation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *animation_);
  }

  // .mruv.devtools.Player author = 2;
  if (this->has_author()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *author_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAnimationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.GetAnimationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAnimationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAnimationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.GetAnimationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.GetAnimationResponse)
    MergeFrom(*source);
  }
}

void GetAnimationResponse::MergeFrom(const GetAnimationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.GetAnimationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_animation()) {
    _internal_mutable_animation()->::mruv::devtools::Animation::MergeFrom(from._internal_animation());
  }
  if (from.has_author()) {
    _internal_mutable_author()->::mruv::devtools::Player::MergeFrom(from._internal_author());
  }
}

void GetAnimationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.GetAnimationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAnimationResponse::CopyFrom(const GetAnimationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.GetAnimationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAnimationResponse::IsInitialized() const {
  return true;
}

void GetAnimationResponse::InternalSwap(GetAnimationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(animation_, other->animation_);
  swap(author_, other->author_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAnimationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SaveAnimationRequest::InitAsDefaultInstance() {
  ::mruv::devtools::_SaveAnimationRequest_default_instance_._instance.get_mutable()->animation_ = const_cast< ::mruv::devtools::Animation*>(
      ::mruv::devtools::Animation::internal_default_instance());
}
class SaveAnimationRequest::_Internal {
 public:
  static const ::mruv::devtools::Animation& animation(const SaveAnimationRequest* msg);
};

const ::mruv::devtools::Animation&
SaveAnimationRequest::_Internal::animation(const SaveAnimationRequest* msg) {
  return *msg->animation_;
}
void SaveAnimationRequest::clear_animation() {
  if (GetArenaNoVirtual() == nullptr && animation_ != nullptr) {
    delete animation_;
  }
  animation_ = nullptr;
}
SaveAnimationRequest::SaveAnimationRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.SaveAnimationRequest)
}
SaveAnimationRequest::SaveAnimationRequest(const SaveAnimationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_animation()) {
    animation_ = new ::mruv::devtools::Animation(*from.animation_);
  } else {
    animation_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.SaveAnimationRequest)
}

void SaveAnimationRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SaveAnimationRequest_devtools_2fdevtools_2eproto.base);
  animation_ = nullptr;
}

SaveAnimationRequest::~SaveAnimationRequest() {
  // @@protoc_insertion_point(destructor:mruv.devtools.SaveAnimationRequest)
  SharedDtor();
}

void SaveAnimationRequest::SharedDtor() {
  if (this != internal_default_instance()) delete animation_;
}

void SaveAnimationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SaveAnimationRequest& SaveAnimationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SaveAnimationRequest_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void SaveAnimationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.SaveAnimationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && animation_ != nullptr) {
    delete animation_;
  }
  animation_ = nullptr;
  _internal_metadata_.Clear();
}

const char* SaveAnimationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.devtools.Animation animation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_animation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SaveAnimationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.SaveAnimationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.devtools.Animation animation = 1;
  if (this->has_animation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::animation(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.SaveAnimationRequest)
  return target;
}

size_t SaveAnimationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.SaveAnimationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.devtools.Animation animation = 1;
  if (this->has_animation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *animation_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveAnimationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.SaveAnimationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveAnimationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SaveAnimationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.SaveAnimationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.SaveAnimationRequest)
    MergeFrom(*source);
  }
}

void SaveAnimationRequest::MergeFrom(const SaveAnimationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.SaveAnimationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_animation()) {
    _internal_mutable_animation()->::mruv::devtools::Animation::MergeFrom(from._internal_animation());
  }
}

void SaveAnimationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.SaveAnimationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveAnimationRequest::CopyFrom(const SaveAnimationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.SaveAnimationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveAnimationRequest::IsInitialized() const {
  return true;
}

void SaveAnimationRequest::InternalSwap(SaveAnimationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(animation_, other->animation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveAnimationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SaveAnimationResponse::InitAsDefaultInstance() {
}
class SaveAnimationResponse::_Internal {
 public:
};

SaveAnimationResponse::SaveAnimationResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.devtools.SaveAnimationResponse)
}
SaveAnimationResponse::SaveAnimationResponse(const SaveAnimationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:mruv.devtools.SaveAnimationResponse)
}

void SaveAnimationResponse::SharedCtor() {
  success_ = false;
}

SaveAnimationResponse::~SaveAnimationResponse() {
  // @@protoc_insertion_point(destructor:mruv.devtools.SaveAnimationResponse)
  SharedDtor();
}

void SaveAnimationResponse::SharedDtor() {
}

void SaveAnimationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SaveAnimationResponse& SaveAnimationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SaveAnimationResponse_devtools_2fdevtools_2eproto.base);
  return *internal_default_instance();
}


void SaveAnimationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.devtools.SaveAnimationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear();
}

const char* SaveAnimationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SaveAnimationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.devtools.SaveAnimationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.devtools.SaveAnimationResponse)
  return target;
}

size_t SaveAnimationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.devtools.SaveAnimationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveAnimationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.devtools.SaveAnimationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveAnimationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SaveAnimationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.devtools.SaveAnimationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.devtools.SaveAnimationResponse)
    MergeFrom(*source);
  }
}

void SaveAnimationResponse::MergeFrom(const SaveAnimationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.devtools.SaveAnimationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void SaveAnimationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.devtools.SaveAnimationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveAnimationResponse::CopyFrom(const SaveAnimationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.devtools.SaveAnimationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveAnimationResponse::IsInitialized() const {
  return true;
}

void SaveAnimationResponse::InternalSwap(SaveAnimationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveAnimationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace devtools
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mruv::devtools::GetPositionsRequest* Arena::CreateMaybeMessage< ::mruv::devtools::GetPositionsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::GetPositionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::GetPositionsResponse_Row* Arena::CreateMaybeMessage< ::mruv::devtools::GetPositionsResponse_Row >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::GetPositionsResponse_Row >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::GetPositionsResponse* Arena::CreateMaybeMessage< ::mruv::devtools::GetPositionsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::GetPositionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::SavePositionRequest* Arena::CreateMaybeMessage< ::mruv::devtools::SavePositionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::SavePositionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::SavePositionResponse* Arena::CreateMaybeMessage< ::mruv::devtools::SavePositionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::SavePositionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::DeletePositionRequest* Arena::CreateMaybeMessage< ::mruv::devtools::DeletePositionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::DeletePositionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::DeletePositionResponse* Arena::CreateMaybeMessage< ::mruv::devtools::DeletePositionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::DeletePositionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::GetOutfitsRequest* Arena::CreateMaybeMessage< ::mruv::devtools::GetOutfitsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::GetOutfitsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::GetOutfitsResponse_Row* Arena::CreateMaybeMessage< ::mruv::devtools::GetOutfitsResponse_Row >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::GetOutfitsResponse_Row >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::GetOutfitsResponse* Arena::CreateMaybeMessage< ::mruv::devtools::GetOutfitsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::GetOutfitsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::SaveOutfitRequest* Arena::CreateMaybeMessage< ::mruv::devtools::SaveOutfitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::SaveOutfitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::SaveOutfitResponse* Arena::CreateMaybeMessage< ::mruv::devtools::SaveOutfitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::SaveOutfitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::GetAnimationsRequest* Arena::CreateMaybeMessage< ::mruv::devtools::GetAnimationsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::GetAnimationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::GetAnimationsResponse_Row* Arena::CreateMaybeMessage< ::mruv::devtools::GetAnimationsResponse_Row >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::GetAnimationsResponse_Row >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::GetAnimationsResponse* Arena::CreateMaybeMessage< ::mruv::devtools::GetAnimationsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::GetAnimationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::GetAnimationRequest* Arena::CreateMaybeMessage< ::mruv::devtools::GetAnimationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::GetAnimationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::GetAnimationResponse* Arena::CreateMaybeMessage< ::mruv::devtools::GetAnimationResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::GetAnimationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::SaveAnimationRequest* Arena::CreateMaybeMessage< ::mruv::devtools::SaveAnimationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::SaveAnimationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::devtools::SaveAnimationResponse* Arena::CreateMaybeMessage< ::mruv::devtools::SaveAnimationResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::devtools::SaveAnimationResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
