// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: objects/objects.proto

#include "objects/objects.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_objects_2fobjects_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse_objects_2fobjects_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_objects_2fobjects_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetObjectMaterialsResponse_MaterialsEntry_DoNotUse_objects_2fobjects_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_objects_2fobjects_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Material_objects_2fobjects_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_objects_2fobjects_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MaterialText_objects_2fobjects_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_objects_2fobjects_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Object_objects_2fobjects_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_objects_2fobjects_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Object_MaterialTextsEntry_DoNotUse_objects_2fobjects_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_objects_2fobjects_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Object_MaterialsEntry_DoNotUse_objects_2fobjects_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_objects_2fobjects_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemovedBuilding_objects_2fobjects_2eproto;
namespace mruv {
namespace objects {
class Object_MaterialsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Object_MaterialsEntry_DoNotUse> _instance;
} _Object_MaterialsEntry_DoNotUse_default_instance_;
class Object_MaterialTextsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Object_MaterialTextsEntry_DoNotUse> _instance;
} _Object_MaterialTextsEntry_DoNotUse_default_instance_;
class ObjectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Object> _instance;
} _Object_default_instance_;
class MaterialDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Material> _instance;
} _Material_default_instance_;
class MaterialTextDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MaterialText> _instance;
} _MaterialText_default_instance_;
class RemovedBuildingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemovedBuilding> _instance;
} _RemovedBuilding_default_instance_;
class CreateObjectRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateObjectRequest> _instance;
} _CreateObjectRequest_default_instance_;
class CreateObjectResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateObjectResponse> _instance;
} _CreateObjectResponse_default_instance_;
class GetObjectRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectRequest> _instance;
} _GetObjectRequest_default_instance_;
class GetObjectResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectResponse> _instance;
} _GetObjectResponse_default_instance_;
class UpdateObjectRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateObjectRequest> _instance;
} _UpdateObjectRequest_default_instance_;
class UpdateObjectResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateObjectResponse> _instance;
} _UpdateObjectResponse_default_instance_;
class DeleteObjectRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteObjectRequest> _instance;
} _DeleteObjectRequest_default_instance_;
class DeleteObjectResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteObjectResponse> _instance;
} _DeleteObjectResponse_default_instance_;
class AddObjectMaterialRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddObjectMaterialRequest> _instance;
} _AddObjectMaterialRequest_default_instance_;
class AddObjectMaterialResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddObjectMaterialResponse> _instance;
} _AddObjectMaterialResponse_default_instance_;
class GetObjectMaterialsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectMaterialsRequest> _instance;
} _GetObjectMaterialsRequest_default_instance_;
class GetObjectMaterialsResponse_MaterialsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectMaterialsResponse_MaterialsEntry_DoNotUse> _instance;
} _GetObjectMaterialsResponse_MaterialsEntry_DoNotUse_default_instance_;
class GetObjectMaterialsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectMaterialsResponse> _instance;
} _GetObjectMaterialsResponse_default_instance_;
class DeleteObjectMaterialRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteObjectMaterialRequest> _instance;
} _DeleteObjectMaterialRequest_default_instance_;
class DeleteObjectMaterialResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteObjectMaterialResponse> _instance;
} _DeleteObjectMaterialResponse_default_instance_;
class AddObjectMaterialTextRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddObjectMaterialTextRequest> _instance;
} _AddObjectMaterialTextRequest_default_instance_;
class AddObjectMaterialTextResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddObjectMaterialTextResponse> _instance;
} _AddObjectMaterialTextResponse_default_instance_;
class GetObjectMaterialTextsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectMaterialTextsRequest> _instance;
} _GetObjectMaterialTextsRequest_default_instance_;
class GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse> _instance;
} _GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse_default_instance_;
class GetObjectMaterialTextsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectMaterialTextsResponse> _instance;
} _GetObjectMaterialTextsResponse_default_instance_;
class DeleteObjectMaterialTextRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteObjectMaterialTextRequest> _instance;
} _DeleteObjectMaterialTextRequest_default_instance_;
class DeleteObjectMaterialTextResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteObjectMaterialTextResponse> _instance;
} _DeleteObjectMaterialTextResponse_default_instance_;
class AddRemoveBuildingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddRemoveBuildingRequest> _instance;
} _AddRemoveBuildingRequest_default_instance_;
class AddRemoveBuildingResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddRemoveBuildingResponse> _instance;
} _AddRemoveBuildingResponse_default_instance_;
class GetRemovedBuildingsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRemovedBuildingsRequest> _instance;
} _GetRemovedBuildingsRequest_default_instance_;
class GetRemovedBuildingsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRemovedBuildingsResponse> _instance;
} _GetRemovedBuildingsResponse_default_instance_;
class DeleteRemoveBuildingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRemoveBuildingRequest> _instance;
} _DeleteRemoveBuildingRequest_default_instance_;
class DeleteRemoveBuildingResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRemoveBuildingResponse> _instance;
} _DeleteRemoveBuildingResponse_default_instance_;
class FetchAllRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FetchAllRequest> _instance;
} _FetchAllRequest_default_instance_;
class FetchAllResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FetchAllResponse> _instance;
} _FetchAllResponse_default_instance_;
}  // namespace objects
}  // namespace mruv
static void InitDefaultsscc_info_AddObjectMaterialRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_AddObjectMaterialRequest_default_instance_;
    new (ptr) ::mruv::objects::AddObjectMaterialRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::AddObjectMaterialRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddObjectMaterialRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddObjectMaterialRequest_objects_2fobjects_2eproto}, {
      &scc_info_Material_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_AddObjectMaterialResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_AddObjectMaterialResponse_default_instance_;
    new (ptr) ::mruv::objects::AddObjectMaterialResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::AddObjectMaterialResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddObjectMaterialResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddObjectMaterialResponse_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_AddObjectMaterialTextRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_AddObjectMaterialTextRequest_default_instance_;
    new (ptr) ::mruv::objects::AddObjectMaterialTextRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::AddObjectMaterialTextRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddObjectMaterialTextRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddObjectMaterialTextRequest_objects_2fobjects_2eproto}, {
      &scc_info_MaterialText_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_AddObjectMaterialTextResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_AddObjectMaterialTextResponse_default_instance_;
    new (ptr) ::mruv::objects::AddObjectMaterialTextResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::AddObjectMaterialTextResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddObjectMaterialTextResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddObjectMaterialTextResponse_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_AddRemoveBuildingRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_AddRemoveBuildingRequest_default_instance_;
    new (ptr) ::mruv::objects::AddRemoveBuildingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::AddRemoveBuildingRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddRemoveBuildingRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddRemoveBuildingRequest_objects_2fobjects_2eproto}, {
      &scc_info_RemovedBuilding_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_AddRemoveBuildingResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_AddRemoveBuildingResponse_default_instance_;
    new (ptr) ::mruv::objects::AddRemoveBuildingResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::AddRemoveBuildingResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddRemoveBuildingResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddRemoveBuildingResponse_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_CreateObjectRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_CreateObjectRequest_default_instance_;
    new (ptr) ::mruv::objects::CreateObjectRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::CreateObjectRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateObjectRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateObjectRequest_objects_2fobjects_2eproto}, {
      &scc_info_Object_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_CreateObjectResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_CreateObjectResponse_default_instance_;
    new (ptr) ::mruv::objects::CreateObjectResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::CreateObjectResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateObjectResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateObjectResponse_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_DeleteObjectMaterialRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_DeleteObjectMaterialRequest_default_instance_;
    new (ptr) ::mruv::objects::DeleteObjectMaterialRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::DeleteObjectMaterialRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteObjectMaterialRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteObjectMaterialRequest_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_DeleteObjectMaterialResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_DeleteObjectMaterialResponse_default_instance_;
    new (ptr) ::mruv::objects::DeleteObjectMaterialResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::DeleteObjectMaterialResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteObjectMaterialResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteObjectMaterialResponse_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_DeleteObjectMaterialTextRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_DeleteObjectMaterialTextRequest_default_instance_;
    new (ptr) ::mruv::objects::DeleteObjectMaterialTextRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::DeleteObjectMaterialTextRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteObjectMaterialTextRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteObjectMaterialTextRequest_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_DeleteObjectMaterialTextResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_DeleteObjectMaterialTextResponse_default_instance_;
    new (ptr) ::mruv::objects::DeleteObjectMaterialTextResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::DeleteObjectMaterialTextResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteObjectMaterialTextResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteObjectMaterialTextResponse_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_DeleteObjectRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_DeleteObjectRequest_default_instance_;
    new (ptr) ::mruv::objects::DeleteObjectRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::DeleteObjectRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteObjectRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteObjectRequest_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_DeleteObjectResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_DeleteObjectResponse_default_instance_;
    new (ptr) ::mruv::objects::DeleteObjectResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::DeleteObjectResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteObjectResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteObjectResponse_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRemoveBuildingRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_DeleteRemoveBuildingRequest_default_instance_;
    new (ptr) ::mruv::objects::DeleteRemoveBuildingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::DeleteRemoveBuildingRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRemoveBuildingRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRemoveBuildingRequest_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRemoveBuildingResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_DeleteRemoveBuildingResponse_default_instance_;
    new (ptr) ::mruv::objects::DeleteRemoveBuildingResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::DeleteRemoveBuildingResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRemoveBuildingResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRemoveBuildingResponse_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_FetchAllRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_FetchAllRequest_default_instance_;
    new (ptr) ::mruv::objects::FetchAllRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::FetchAllRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FetchAllRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FetchAllRequest_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_FetchAllResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_FetchAllResponse_default_instance_;
    new (ptr) ::mruv::objects::FetchAllResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::FetchAllResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FetchAllResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FetchAllResponse_objects_2fobjects_2eproto}, {
      &scc_info_Object_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_GetObjectMaterialTextsRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetObjectMaterialTextsRequest_default_instance_;
    new (ptr) ::mruv::objects::GetObjectMaterialTextsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::GetObjectMaterialTextsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetObjectMaterialTextsRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetObjectMaterialTextsRequest_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_GetObjectMaterialTextsResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetObjectMaterialTextsResponse_default_instance_;
    new (ptr) ::mruv::objects::GetObjectMaterialTextsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::GetObjectMaterialTextsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetObjectMaterialTextsResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetObjectMaterialTextsResponse_objects_2fobjects_2eproto}, {
      &scc_info_GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse_default_instance_;
    new (ptr) ::mruv::objects::GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse();
  }
  ::mruv::objects::GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse_objects_2fobjects_2eproto}, {
      &scc_info_MaterialText_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_GetObjectMaterialsRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetObjectMaterialsRequest_default_instance_;
    new (ptr) ::mruv::objects::GetObjectMaterialsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::GetObjectMaterialsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetObjectMaterialsRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetObjectMaterialsRequest_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_GetObjectMaterialsResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetObjectMaterialsResponse_default_instance_;
    new (ptr) ::mruv::objects::GetObjectMaterialsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::GetObjectMaterialsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetObjectMaterialsResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetObjectMaterialsResponse_objects_2fobjects_2eproto}, {
      &scc_info_GetObjectMaterialsResponse_MaterialsEntry_DoNotUse_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_GetObjectMaterialsResponse_MaterialsEntry_DoNotUse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetObjectMaterialsResponse_MaterialsEntry_DoNotUse_default_instance_;
    new (ptr) ::mruv::objects::GetObjectMaterialsResponse_MaterialsEntry_DoNotUse();
  }
  ::mruv::objects::GetObjectMaterialsResponse_MaterialsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetObjectMaterialsResponse_MaterialsEntry_DoNotUse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetObjectMaterialsResponse_MaterialsEntry_DoNotUse_objects_2fobjects_2eproto}, {
      &scc_info_Material_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_GetObjectRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetObjectRequest_default_instance_;
    new (ptr) ::mruv::objects::GetObjectRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::GetObjectRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetObjectRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetObjectRequest_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_GetObjectResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetObjectResponse_default_instance_;
    new (ptr) ::mruv::objects::GetObjectResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::GetObjectResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetObjectResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetObjectResponse_objects_2fobjects_2eproto}, {
      &scc_info_Object_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_GetRemovedBuildingsRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetRemovedBuildingsRequest_default_instance_;
    new (ptr) ::mruv::objects::GetRemovedBuildingsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::GetRemovedBuildingsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRemovedBuildingsRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRemovedBuildingsRequest_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_GetRemovedBuildingsResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetRemovedBuildingsResponse_default_instance_;
    new (ptr) ::mruv::objects::GetRemovedBuildingsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::GetRemovedBuildingsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetRemovedBuildingsResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetRemovedBuildingsResponse_objects_2fobjects_2eproto}, {
      &scc_info_RemovedBuilding_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_Material_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_Material_default_instance_;
    new (ptr) ::mruv::objects::Material();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::Material::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Material_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Material_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_MaterialText_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_MaterialText_default_instance_;
    new (ptr) ::mruv::objects::MaterialText();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::MaterialText::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MaterialText_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MaterialText_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_Object_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_Object_default_instance_;
    new (ptr) ::mruv::objects::Object();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::Object::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Object_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Object_objects_2fobjects_2eproto}, {
      &scc_info_Object_MaterialsEntry_DoNotUse_objects_2fobjects_2eproto.base,
      &scc_info_Object_MaterialTextsEntry_DoNotUse_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_Object_MaterialTextsEntry_DoNotUse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_Object_MaterialTextsEntry_DoNotUse_default_instance_;
    new (ptr) ::mruv::objects::Object_MaterialTextsEntry_DoNotUse();
  }
  ::mruv::objects::Object_MaterialTextsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Object_MaterialTextsEntry_DoNotUse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Object_MaterialTextsEntry_DoNotUse_objects_2fobjects_2eproto}, {
      &scc_info_MaterialText_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_Object_MaterialsEntry_DoNotUse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_Object_MaterialsEntry_DoNotUse_default_instance_;
    new (ptr) ::mruv::objects::Object_MaterialsEntry_DoNotUse();
  }
  ::mruv::objects::Object_MaterialsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Object_MaterialsEntry_DoNotUse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Object_MaterialsEntry_DoNotUse_objects_2fobjects_2eproto}, {
      &scc_info_Material_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_RemovedBuilding_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_RemovedBuilding_default_instance_;
    new (ptr) ::mruv::objects::RemovedBuilding();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::RemovedBuilding::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemovedBuilding_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemovedBuilding_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_UpdateObjectRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_UpdateObjectRequest_default_instance_;
    new (ptr) ::mruv::objects::UpdateObjectRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::UpdateObjectRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateObjectRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateObjectRequest_objects_2fobjects_2eproto}, {
      &scc_info_Object_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_UpdateObjectResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_UpdateObjectResponse_default_instance_;
    new (ptr) ::mruv::objects::UpdateObjectResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::UpdateObjectResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateObjectResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateObjectResponse_objects_2fobjects_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_objects_2fobjects_2eproto[36];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_objects_2fobjects_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_objects_2fobjects_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_objects_2fobjects_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object_MaterialsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object_MaterialsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object_MaterialsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object_MaterialsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object_MaterialTextsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object_MaterialTextsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object_MaterialTextsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object_MaterialTextsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, model_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, x_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, y_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, z_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, rx_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, ry_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, rz_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, world_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, interior_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, player_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, area_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, stream_distance_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, draw_distance_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, priority_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, estate_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, materials_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, material_texts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Material, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Material, model_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Material, txd_name_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Material, texture_name_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Material, material_color_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Material, estate_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::MaterialText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::MaterialText, text_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::MaterialText, material_size_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::MaterialText, font_face_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::MaterialText, font_size_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::MaterialText, bold_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::MaterialText, font_color_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::MaterialText, back_color_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::MaterialText, text_alignment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::RemovedBuilding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::RemovedBuilding, model_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::RemovedBuilding, x_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::RemovedBuilding, y_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::RemovedBuilding, z_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::RemovedBuilding, radius_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectRequest, object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectResponse, object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::UpdateObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::UpdateObjectRequest, id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::UpdateObjectRequest, object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::UpdateObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::AddObjectMaterialRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::AddObjectMaterialRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::AddObjectMaterialRequest, index_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::AddObjectMaterialRequest, material_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::AddObjectMaterialResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialsRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialsResponse_MaterialsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialsResponse_MaterialsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialsResponse_MaterialsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialsResponse_MaterialsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialsResponse, materials_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectMaterialRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectMaterialRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectMaterialRequest, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectMaterialResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::AddObjectMaterialTextRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::AddObjectMaterialTextRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::AddObjectMaterialTextRequest, index_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::AddObjectMaterialTextRequest, material_text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::AddObjectMaterialTextResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialTextsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialTextsRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialTextsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectMaterialTextsResponse, material_texts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectMaterialTextRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectMaterialTextRequest, object_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectMaterialTextRequest, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectMaterialTextResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::AddRemoveBuildingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::AddRemoveBuildingRequest, removed_building_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::AddRemoveBuildingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::AddRemoveBuildingResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetRemovedBuildingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetRemovedBuildingsRequest, estate_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetRemovedBuildingsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetRemovedBuildingsResponse, removed_building_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteRemoveBuildingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteRemoveBuildingRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteRemoveBuildingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::FetchAllRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::FetchAllResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::FetchAllResponse, objects_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::mruv::objects::Object_MaterialsEntry_DoNotUse)},
  { 9, 16, sizeof(::mruv::objects::Object_MaterialTextsEntry_DoNotUse)},
  { 18, -1, sizeof(::mruv::objects::Object)},
  { 40, -1, sizeof(::mruv::objects::Material)},
  { 50, -1, sizeof(::mruv::objects::MaterialText)},
  { 63, -1, sizeof(::mruv::objects::RemovedBuilding)},
  { 73, -1, sizeof(::mruv::objects::CreateObjectRequest)},
  { 79, -1, sizeof(::mruv::objects::CreateObjectResponse)},
  { 85, -1, sizeof(::mruv::objects::GetObjectRequest)},
  { 91, -1, sizeof(::mruv::objects::GetObjectResponse)},
  { 97, -1, sizeof(::mruv::objects::UpdateObjectRequest)},
  { 104, -1, sizeof(::mruv::objects::UpdateObjectResponse)},
  { 109, -1, sizeof(::mruv::objects::DeleteObjectRequest)},
  { 115, -1, sizeof(::mruv::objects::DeleteObjectResponse)},
  { 120, -1, sizeof(::mruv::objects::AddObjectMaterialRequest)},
  { 128, -1, sizeof(::mruv::objects::AddObjectMaterialResponse)},
  { 133, -1, sizeof(::mruv::objects::GetObjectMaterialsRequest)},
  { 139, 146, sizeof(::mruv::objects::GetObjectMaterialsResponse_MaterialsEntry_DoNotUse)},
  { 148, -1, sizeof(::mruv::objects::GetObjectMaterialsResponse)},
  { 154, -1, sizeof(::mruv::objects::DeleteObjectMaterialRequest)},
  { 161, -1, sizeof(::mruv::objects::DeleteObjectMaterialResponse)},
  { 166, -1, sizeof(::mruv::objects::AddObjectMaterialTextRequest)},
  { 174, -1, sizeof(::mruv::objects::AddObjectMaterialTextResponse)},
  { 179, -1, sizeof(::mruv::objects::GetObjectMaterialTextsRequest)},
  { 185, 192, sizeof(::mruv::objects::GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse)},
  { 194, -1, sizeof(::mruv::objects::GetObjectMaterialTextsResponse)},
  { 200, -1, sizeof(::mruv::objects::DeleteObjectMaterialTextRequest)},
  { 207, -1, sizeof(::mruv::objects::DeleteObjectMaterialTextResponse)},
  { 212, -1, sizeof(::mruv::objects::AddRemoveBuildingRequest)},
  { 218, -1, sizeof(::mruv::objects::AddRemoveBuildingResponse)},
  { 224, -1, sizeof(::mruv::objects::GetRemovedBuildingsRequest)},
  { 230, -1, sizeof(::mruv::objects::GetRemovedBuildingsResponse)},
  { 236, -1, sizeof(::mruv::objects::DeleteRemoveBuildingRequest)},
  { 242, -1, sizeof(::mruv::objects::DeleteRemoveBuildingResponse)},
  { 247, -1, sizeof(::mruv::objects::FetchAllRequest)},
  { 252, -1, sizeof(::mruv::objects::FetchAllResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_Object_MaterialsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_Object_MaterialTextsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_Object_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_Material_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_MaterialText_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_RemovedBuilding_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_CreateObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_CreateObjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetObjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_UpdateObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_UpdateObjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_DeleteObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_DeleteObjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_AddObjectMaterialRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_AddObjectMaterialResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetObjectMaterialsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetObjectMaterialsResponse_MaterialsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetObjectMaterialsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_DeleteObjectMaterialRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_DeleteObjectMaterialResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_AddObjectMaterialTextRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_AddObjectMaterialTextResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetObjectMaterialTextsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetObjectMaterialTextsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_DeleteObjectMaterialTextRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_DeleteObjectMaterialTextResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_AddRemoveBuildingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_AddRemoveBuildingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetRemovedBuildingsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetRemovedBuildingsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_DeleteRemoveBuildingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_DeleteRemoveBuildingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_FetchAllRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_FetchAllResponse_default_instance_),
};

const char descriptor_table_protodef_objects_2fobjects_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025objects/objects.proto\022\014mruv.objects\032\034g"
  "oogle/api/annotations.proto\"\221\004\n\006Object\022\r"
  "\n\005model\030\001 \001(\r\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\t\n\001z"
  "\030\004 \001(\002\022\n\n\002rx\030\005 \001(\002\022\n\n\002ry\030\006 \001(\002\022\n\n\002rz\030\007 \001"
  "(\002\022\020\n\010world_id\030\010 \001(\005\022\023\n\013interior_id\030\t \001("
  "\005\022\021\n\tplayer_id\030\n \001(\005\022\017\n\007area_id\030\013 \001(\005\022\027\n"
  "\017stream_distance\030\014 \001(\002\022\025\n\rdraw_distance\030"
  "\r \001(\002\022\020\n\010priority\030\017 \001(\005\022\021\n\testate_id\030\020 \001"
  "(\r\0226\n\tmaterials\030\021 \003(\0132#.mruv.objects.Obj"
  "ect.MaterialsEntry\022\?\n\016material_texts\030\022 \003"
  "(\0132\'.mruv.objects.Object.MaterialTextsEn"
  "try\032H\n\016MaterialsEntry\022\013\n\003key\030\001 \001(\r\022%\n\005va"
  "lue\030\002 \001(\0132\026.mruv.objects.Material:\0028\001\032P\n"
  "\022MaterialTextsEntry\022\013\n\003key\030\001 \001(\r\022)\n\005valu"
  "e\030\002 \001(\0132\032.mruv.objects.MaterialText:\0028\001\""
  "o\n\010Material\022\020\n\010model_id\030\001 \001(\005\022\020\n\010txd_nam"
  "e\030\002 \001(\t\022\024\n\014texture_name\030\003 \001(\t\022\026\n\016materia"
  "l_color\030\004 \001(\005\022\021\n\testate_id\030\005 \001(\r\"\303\001\n\014Mat"
  "erialText\022\014\n\004text\030\001 \001(\t\0221\n\rmaterial_size"
  "\030\002 \001(\0162\032.mruv.objects.MaterialSize\022\021\n\tfo"
  "nt_face\030\003 \001(\t\022\021\n\tfont_size\030\004 \001(\r\022\014\n\004bold"
  "\030\005 \001(\010\022\022\n\nfont_color\030\006 \001(\005\022\022\n\nback_color"
  "\030\007 \001(\005\022\026\n\016text_alignment\030\010 \001(\005\"Q\n\017Remove"
  "dBuilding\022\r\n\005model\030\001 \001(\r\022\t\n\001x\030\002 \001(\002\022\t\n\001y"
  "\030\003 \001(\002\022\t\n\001z\030\004 \001(\002\022\016\n\006radius\030\005 \001(\002\";\n\023Cre"
  "ateObjectRequest\022$\n\006object\030\001 \001(\0132\024.mruv."
  "objects.Object\"\"\n\024CreateObjectResponse\022\n"
  "\n\002id\030\001 \001(\r\"\036\n\020GetObjectRequest\022\n\n\002id\030\001 \001"
  "(\r\"9\n\021GetObjectResponse\022$\n\006object\030\001 \001(\0132"
  "\024.mruv.objects.Object\"G\n\023UpdateObjectReq"
  "uest\022\n\n\002id\030\001 \001(\r\022$\n\006object\030\002 \001(\0132\024.mruv."
  "objects.Object\"\026\n\024UpdateObjectResponse\"!"
  "\n\023DeleteObjectRequest\022\n\n\002id\030\001 \001(\r\"\026\n\024Del"
  "eteObjectResponse\"f\n\030AddObjectMaterialRe"
  "quest\022\021\n\tobject_id\030\001 \001(\r\022\r\n\005index\030\002 \001(\r\022"
  "(\n\010material\030\003 \001(\0132\026.mruv.objects.Materia"
  "l\"\033\n\031AddObjectMaterialResponse\".\n\031GetObj"
  "ectMaterialsRequest\022\021\n\tobject_id\030\001 \001(\r\"\262"
  "\001\n\032GetObjectMaterialsResponse\022J\n\tmateria"
  "ls\030\001 \003(\01327.mruv.objects.GetObjectMateria"
  "lsResponse.MaterialsEntry\032H\n\016MaterialsEn"
  "try\022\013\n\003key\030\001 \001(\r\022%\n\005value\030\002 \001(\0132\026.mruv.o"
  "bjects.Material:\0028\001\"\?\n\033DeleteObjectMater"
  "ialRequest\022\021\n\tobject_id\030\001 \001(\r\022\r\n\005index\030\002"
  " \001(\r\"\036\n\034DeleteObjectMaterialResponse\"s\n\034"
  "AddObjectMaterialTextRequest\022\021\n\tobject_i"
  "d\030\001 \001(\r\022\r\n\005index\030\002 \001(\r\0221\n\rmaterial_text\030"
  "\003 \001(\0132\032.mruv.objects.MaterialText\"\037\n\035Add"
  "ObjectMaterialTextResponse\"2\n\035GetObjectM"
  "aterialTextsRequest\022\021\n\tobject_id\030\001 \001(\r\"\313"
  "\001\n\036GetObjectMaterialTextsResponse\022W\n\016mat"
  "erial_texts\030\001 \003(\0132\?.mruv.objects.GetObje"
  "ctMaterialTextsResponse.MaterialTextsEnt"
  "ry\032P\n\022MaterialTextsEntry\022\013\n\003key\030\001 \001(\r\022)\n"
  "\005value\030\002 \001(\0132\032.mruv.objects.MaterialText"
  ":\0028\001\"C\n\037DeleteObjectMaterialTextRequest\022"
  "\021\n\tobject_id\030\001 \001(\r\022\r\n\005index\030\002 \001(\r\"\"\n Del"
  "eteObjectMaterialTextResponse\"S\n\030AddRemo"
  "veBuildingRequest\0227\n\020removed_building\030\001 "
  "\001(\0132\035.mruv.objects.RemovedBuilding\"\'\n\031Ad"
  "dRemoveBuildingResponse\022\n\n\002id\030\001 \001(\r\"/\n\032G"
  "etRemovedBuildingsRequest\022\021\n\testate_id\030\001"
  " \001(\r\"V\n\033GetRemovedBuildingsResponse\0227\n\020r"
  "emoved_building\030\001 \003(\0132\035.mruv.objects.Rem"
  "ovedBuilding\")\n\033DeleteRemoveBuildingRequ"
  "est\022\n\n\002id\030\001 \001(\r\"\036\n\034DeleteRemoveBuildingR"
  "esponse\"\021\n\017FetchAllRequest\"9\n\020FetchAllRe"
  "sponse\022%\n\007objects\030\001 \003(\0132\024.mruv.objects.O"
  "bject*\375\003\n\014MaterialSize\022\032\n\026OBJECT_MATERIA"
  "L_SIZE_0\020\000\022\036\n\032OBJECT_MATERIAL_SIZE_32X32"
  "\020\n\022\036\n\032OBJECT_MATERIAL_SIZE_64X32\020\024\022\036\n\032OB"
  "JECT_MATERIAL_SIZE_64X64\020\036\022\037\n\033OBJECT_MAT"
  "ERIAL_SIZE_128X32\020(\022\037\n\033OBJECT_MATERIAL_S"
  "IZE_128X64\0202\022 \n\034OBJECT_MATERIAL_SIZE_128"
  "X128\020<\022\037\n\033OBJECT_MATERIAL_SIZE_256X32\020F\022"
  "\037\n\033OBJECT_MATERIAL_SIZE_256X64\020P\022 \n\034OBJE"
  "CT_MATERIAL_SIZE_256X128\020Z\022 \n\034OBJECT_MAT"
  "ERIAL_SIZE_256X256\020d\022\037\n\033OBJECT_MATERIAL_"
  "SIZE_512X64\020n\022 \n\034OBJECT_MATERIAL_SIZE_51"
  "2X128\020x\022!\n\034OBJECT_MATERIAL_SIZE_512X256\020"
  "\202\001\022!\n\034OBJECT_MATERIAL_SIZE_512X512\020\214\0012\206\017"
  "\n\022MruVObjectsService\022j\n\014CreateObject\022!.m"
  "ruv.objects.CreateObjectRequest\032\".mruv.o"
  "bjects.CreateObjectResponse\"\023\202\323\344\223\002\r\"\013/v1"
  "/objects\022f\n\tGetObject\022\036.mruv.objects.Get"
  "ObjectRequest\032\037.mruv.objects.GetObjectRe"
  "sponse\"\030\202\323\344\223\002\022\022\020/v1/objects/{id}\022o\n\014Upda"
  "teObject\022!.mruv.objects.UpdateObjectRequ"
  "est\032\".mruv.objects.UpdateObjectResponse\""
  "\030\202\323\344\223\002\0222\020/v1/objects/{id}\022o\n\014DeleteObjec"
  "t\022!.mruv.objects.DeleteObjectRequest\032\".m"
  "ruv.objects.DeleteObjectResponse\"\030\202\323\344\223\002\022"
  "*\020/v1/objects/{id}\022\217\001\n\021AddObjectMaterial"
  "\022&.mruv.objects.AddObjectMaterialRequest"
  "\032\'.mruv.objects.AddObjectMaterialRespons"
  "e\")\202\323\344\223\002#\032!/v1/objects/{object_id}/mater"
  "ials\022\222\001\n\022GetObjectMaterials\022\'.mruv.objec"
  "ts.GetObjectMaterialsRequest\032(.mruv.obje"
  "cts.GetObjectMaterialsResponse\")\202\323\344\223\002#\022!"
  "/v1/objects/{object_id}/materials\022\240\001\n\024De"
  "leteObjectMaterial\022).mruv.objects.Delete"
  "ObjectMaterialRequest\032*.mruv.objects.Del"
  "eteObjectMaterialResponse\"1\202\323\344\223\002+*)/v1/o"
  "bjects/{object_id}/materials/{index}\022\237\001\n"
  "\025AddObjectMaterialText\022*.mruv.objects.Ad"
  "dObjectMaterialTextRequest\032+.mruv.object"
  "s.AddObjectMaterialTextResponse\"-\202\323\344\223\002\'\032"
  "%/v1/objects/{object_id}/materialTexts\022\242"
  "\001\n\026GetObjectMaterialTexts\022+.mruv.objects"
  ".GetObjectMaterialTextsRequest\032,.mruv.ob"
  "jects.GetObjectMaterialTextsResponse\"-\202\323"
  "\344\223\002\'\022%/v1/objects/{object_id}/materialTe"
  "xts\022\250\001\n\030DeleteObjectMaterialText\022-.mruv."
  "objects.DeleteObjectMaterialTextRequest\032"
  "..mruv.objects.DeleteObjectMaterialTextR"
  "esponse\"-\202\323\344\223\002\'*%/v1/objects/{object_id}"
  "/materialTexts\022\201\001\n\021AddRemoveBuilding\022&.m"
  "ruv.objects.AddRemoveBuildingRequest\032\'.m"
  "ruv.objects.AddRemoveBuildingResponse\"\033\202"
  "\323\344\223\002\025\"\023/v1/objects/removed\022\207\001\n\023GetRemove"
  "dBuildings\022(.mruv.objects.GetRemovedBuil"
  "dingsRequest\032).mruv.objects.GetRemovedBu"
  "ildingsResponse\"\033\202\323\344\223\002\025\022\023/v1/objects/rem"
  "oved\022\217\001\n\024DeleteRemoveBuilding\022).mruv.obj"
  "ects.DeleteRemoveBuildingRequest\032*.mruv."
  "objects.DeleteRemoveBuildingResponse\" \202\323"
  "\344\223\002\032*\030/v1/objects/removed/{id}\022^\n\010FetchA"
  "ll\022\035.mruv.objects.FetchAllRequest\032\036.mruv"
  ".objects.FetchAllResponse\"\023\202\323\344\223\002\r\022\013/v1/o"
  "bjectsB\'Z%github.com/MruV-RP/mruv-pb-go/"
  "objectsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_objects_2fobjects_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_objects_2fobjects_2eproto_sccs[36] = {
  &scc_info_AddObjectMaterialRequest_objects_2fobjects_2eproto.base,
  &scc_info_AddObjectMaterialResponse_objects_2fobjects_2eproto.base,
  &scc_info_AddObjectMaterialTextRequest_objects_2fobjects_2eproto.base,
  &scc_info_AddObjectMaterialTextResponse_objects_2fobjects_2eproto.base,
  &scc_info_AddRemoveBuildingRequest_objects_2fobjects_2eproto.base,
  &scc_info_AddRemoveBuildingResponse_objects_2fobjects_2eproto.base,
  &scc_info_CreateObjectRequest_objects_2fobjects_2eproto.base,
  &scc_info_CreateObjectResponse_objects_2fobjects_2eproto.base,
  &scc_info_DeleteObjectMaterialRequest_objects_2fobjects_2eproto.base,
  &scc_info_DeleteObjectMaterialResponse_objects_2fobjects_2eproto.base,
  &scc_info_DeleteObjectMaterialTextRequest_objects_2fobjects_2eproto.base,
  &scc_info_DeleteObjectMaterialTextResponse_objects_2fobjects_2eproto.base,
  &scc_info_DeleteObjectRequest_objects_2fobjects_2eproto.base,
  &scc_info_DeleteObjectResponse_objects_2fobjects_2eproto.base,
  &scc_info_DeleteRemoveBuildingRequest_objects_2fobjects_2eproto.base,
  &scc_info_DeleteRemoveBuildingResponse_objects_2fobjects_2eproto.base,
  &scc_info_FetchAllRequest_objects_2fobjects_2eproto.base,
  &scc_info_FetchAllResponse_objects_2fobjects_2eproto.base,
  &scc_info_GetObjectMaterialTextsRequest_objects_2fobjects_2eproto.base,
  &scc_info_GetObjectMaterialTextsResponse_objects_2fobjects_2eproto.base,
  &scc_info_GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse_objects_2fobjects_2eproto.base,
  &scc_info_GetObjectMaterialsRequest_objects_2fobjects_2eproto.base,
  &scc_info_GetObjectMaterialsResponse_objects_2fobjects_2eproto.base,
  &scc_info_GetObjectMaterialsResponse_MaterialsEntry_DoNotUse_objects_2fobjects_2eproto.base,
  &scc_info_GetObjectRequest_objects_2fobjects_2eproto.base,
  &scc_info_GetObjectResponse_objects_2fobjects_2eproto.base,
  &scc_info_GetRemovedBuildingsRequest_objects_2fobjects_2eproto.base,
  &scc_info_GetRemovedBuildingsResponse_objects_2fobjects_2eproto.base,
  &scc_info_Material_objects_2fobjects_2eproto.base,
  &scc_info_MaterialText_objects_2fobjects_2eproto.base,
  &scc_info_Object_objects_2fobjects_2eproto.base,
  &scc_info_Object_MaterialTextsEntry_DoNotUse_objects_2fobjects_2eproto.base,
  &scc_info_Object_MaterialsEntry_DoNotUse_objects_2fobjects_2eproto.base,
  &scc_info_RemovedBuilding_objects_2fobjects_2eproto.base,
  &scc_info_UpdateObjectRequest_objects_2fobjects_2eproto.base,
  &scc_info_UpdateObjectResponse_objects_2fobjects_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_objects_2fobjects_2eproto_once;
static bool descriptor_table_objects_2fobjects_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_objects_2fobjects_2eproto = {
  &descriptor_table_objects_2fobjects_2eproto_initialized, descriptor_table_protodef_objects_2fobjects_2eproto, "objects/objects.proto", 5215,
  &descriptor_table_objects_2fobjects_2eproto_once, descriptor_table_objects_2fobjects_2eproto_sccs, descriptor_table_objects_2fobjects_2eproto_deps, 36, 1,
  schemas, file_default_instances, TableStruct_objects_2fobjects_2eproto::offsets,
  file_level_metadata_objects_2fobjects_2eproto, 36, file_level_enum_descriptors_objects_2fobjects_2eproto, file_level_service_descriptors_objects_2fobjects_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_objects_2fobjects_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_objects_2fobjects_2eproto), true);
namespace mruv {
namespace objects {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MaterialSize_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_objects_2fobjects_2eproto);
  return file_level_enum_descriptors_objects_2fobjects_2eproto[0];
}
bool MaterialSize_IsValid(int value) {
  switch (value) {
    case 0:
    case 10:
    case 20:
    case 30:
    case 40:
    case 50:
    case 60:
    case 70:
    case 80:
    case 90:
    case 100:
    case 110:
    case 120:
    case 130:
    case 140:
      return true;
    default:
      return false;
  }
}


// ===================================================================

Object_MaterialsEntry_DoNotUse::Object_MaterialsEntry_DoNotUse() {}
Object_MaterialsEntry_DoNotUse::Object_MaterialsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Object_MaterialsEntry_DoNotUse::MergeFrom(const Object_MaterialsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Object_MaterialsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Object_MaterialsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

Object_MaterialTextsEntry_DoNotUse::Object_MaterialTextsEntry_DoNotUse() {}
Object_MaterialTextsEntry_DoNotUse::Object_MaterialTextsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Object_MaterialTextsEntry_DoNotUse::MergeFrom(const Object_MaterialTextsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Object_MaterialTextsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Object_MaterialTextsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Object::InitAsDefaultInstance() {
}
class Object::_Internal {
 public:
};

Object::Object()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.Object)
}
Object::Object(const Object& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  materials_.MergeFrom(from.materials_);
  material_texts_.MergeFrom(from.material_texts_);
  ::memcpy(&model_, &from.model_,
    static_cast<size_t>(reinterpret_cast<char*>(&estate_id_) -
    reinterpret_cast<char*>(&model_)) + sizeof(estate_id_));
  // @@protoc_insertion_point(copy_constructor:mruv.objects.Object)
}

void Object::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Object_objects_2fobjects_2eproto.base);
  ::memset(&model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&estate_id_) -
      reinterpret_cast<char*>(&model_)) + sizeof(estate_id_));
}

Object::~Object() {
  // @@protoc_insertion_point(destructor:mruv.objects.Object)
  SharedDtor();
}

void Object::SharedDtor() {
}

void Object::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Object& Object::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Object_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void Object::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.Object)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  materials_.Clear();
  material_texts_.Clear();
  ::memset(&model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&estate_id_) -
      reinterpret_cast<char*>(&model_)) + sizeof(estate_id_));
  _internal_metadata_.Clear();
}

const char* Object::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 model = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          model_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float x = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float z = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float rx = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          rx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float ry = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          ry_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float rz = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          rz_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 world_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          world_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 interior_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          interior_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 player_id = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 area_id = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          area_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float stream_distance = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          stream_distance_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float draw_distance = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 109)) {
          draw_distance_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 priority = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 estate_id = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          estate_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<uint32, .mruv.objects.Material> materials = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&materials_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<138>(ptr));
        } else goto handle_unusual;
        continue;
      // map<uint32, .mruv.objects.MaterialText> material_texts = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&material_texts_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<146>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Object::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.Object)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 model = 1;
  if (this->model() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_model(), target);
  }

  // float x = 2;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_x(), target);
  }

  // float y = 3;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_y(), target);
  }

  // float z = 4;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_z(), target);
  }

  // float rx = 5;
  if (!(this->rx() <= 0 && this->rx() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_rx(), target);
  }

  // float ry = 6;
  if (!(this->ry() <= 0 && this->ry() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_ry(), target);
  }

  // float rz = 7;
  if (!(this->rz() <= 0 && this->rz() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_rz(), target);
  }

  // int32 world_id = 8;
  if (this->world_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_world_id(), target);
  }

  // int32 interior_id = 9;
  if (this->interior_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_interior_id(), target);
  }

  // int32 player_id = 10;
  if (this->player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_player_id(), target);
  }

  // int32 area_id = 11;
  if (this->area_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_area_id(), target);
  }

  // float stream_distance = 12;
  if (!(this->stream_distance() <= 0 && this->stream_distance() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(12, this->_internal_stream_distance(), target);
  }

  // float draw_distance = 13;
  if (!(this->draw_distance() <= 0 && this->draw_distance() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(13, this->_internal_draw_distance(), target);
  }

  // int32 priority = 15;
  if (this->priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(15, this->_internal_priority(), target);
  }

  // uint32 estate_id = 16;
  if (this->estate_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_estate_id(), target);
  }

  // map<uint32, .mruv.objects.Material> materials = 17;
  if (!this->_internal_materials().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::Material >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_materials().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_materials().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::Material >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::Material >::const_iterator
          it = this->_internal_materials().begin();
          it != this->_internal_materials().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Object_MaterialsEntry_DoNotUse::Funcs::InternalSerialize(17, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::Material >::const_iterator
          it = this->_internal_materials().begin();
          it != this->_internal_materials().end(); ++it) {
        target = Object_MaterialsEntry_DoNotUse::Funcs::InternalSerialize(17, it->first, it->second, target, stream);
      }
    }
  }

  // map<uint32, .mruv.objects.MaterialText> material_texts = 18;
  if (!this->_internal_material_texts().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::MaterialText >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_material_texts().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_material_texts().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::MaterialText >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::MaterialText >::const_iterator
          it = this->_internal_material_texts().begin();
          it != this->_internal_material_texts().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Object_MaterialTextsEntry_DoNotUse::Funcs::InternalSerialize(18, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::MaterialText >::const_iterator
          it = this->_internal_material_texts().begin();
          it != this->_internal_material_texts().end(); ++it) {
        target = Object_MaterialTextsEntry_DoNotUse::Funcs::InternalSerialize(18, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.Object)
  return target;
}

size_t Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.Object)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .mruv.objects.Material> materials = 17;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_materials_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::Material >::const_iterator
      it = this->_internal_materials().begin();
      it != this->_internal_materials().end(); ++it) {
    total_size += Object_MaterialsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<uint32, .mruv.objects.MaterialText> material_texts = 18;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_material_texts_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::MaterialText >::const_iterator
      it = this->_internal_material_texts().begin();
      it != this->_internal_material_texts().end(); ++it) {
    total_size += Object_MaterialTextsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // uint32 model = 1;
  if (this->model() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_model());
  }

  // float x = 2;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 3;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float z = 4;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  // float rx = 5;
  if (!(this->rx() <= 0 && this->rx() >= 0)) {
    total_size += 1 + 4;
  }

  // float ry = 6;
  if (!(this->ry() <= 0 && this->ry() >= 0)) {
    total_size += 1 + 4;
  }

  // float rz = 7;
  if (!(this->rz() <= 0 && this->rz() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 world_id = 8;
  if (this->world_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_world_id());
  }

  // int32 interior_id = 9;
  if (this->interior_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_interior_id());
  }

  // int32 player_id = 10;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_player_id());
  }

  // int32 area_id = 11;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_area_id());
  }

  // float stream_distance = 12;
  if (!(this->stream_distance() <= 0 && this->stream_distance() >= 0)) {
    total_size += 1 + 4;
  }

  // float draw_distance = 13;
  if (!(this->draw_distance() <= 0 && this->draw_distance() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 priority = 15;
  if (this->priority() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_priority());
  }

  // uint32 estate_id = 16;
  if (this->estate_id() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_estate_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Object::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.Object)
  GOOGLE_DCHECK_NE(&from, this);
  const Object* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Object>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.Object)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.Object)
    MergeFrom(*source);
  }
}

void Object::MergeFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.Object)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  materials_.MergeFrom(from.materials_);
  material_texts_.MergeFrom(from.material_texts_);
  if (from.model() != 0) {
    _internal_set_model(from._internal_model());
  }
  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
  if (!(from.rx() <= 0 && from.rx() >= 0)) {
    _internal_set_rx(from._internal_rx());
  }
  if (!(from.ry() <= 0 && from.ry() >= 0)) {
    _internal_set_ry(from._internal_ry());
  }
  if (!(from.rz() <= 0 && from.rz() >= 0)) {
    _internal_set_rz(from._internal_rz());
  }
  if (from.world_id() != 0) {
    _internal_set_world_id(from._internal_world_id());
  }
  if (from.interior_id() != 0) {
    _internal_set_interior_id(from._internal_interior_id());
  }
  if (from.player_id() != 0) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (from.area_id() != 0) {
    _internal_set_area_id(from._internal_area_id());
  }
  if (!(from.stream_distance() <= 0 && from.stream_distance() >= 0)) {
    _internal_set_stream_distance(from._internal_stream_distance());
  }
  if (!(from.draw_distance() <= 0 && from.draw_distance() >= 0)) {
    _internal_set_draw_distance(from._internal_draw_distance());
  }
  if (from.priority() != 0) {
    _internal_set_priority(from._internal_priority());
  }
  if (from.estate_id() != 0) {
    _internal_set_estate_id(from._internal_estate_id());
  }
}

void Object::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Object::CopyFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Object::IsInitialized() const {
  return true;
}

void Object::InternalSwap(Object* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  materials_.Swap(&other->materials_);
  material_texts_.Swap(&other->material_texts_);
  swap(model_, other->model_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(rx_, other->rx_);
  swap(ry_, other->ry_);
  swap(rz_, other->rz_);
  swap(world_id_, other->world_id_);
  swap(interior_id_, other->interior_id_);
  swap(player_id_, other->player_id_);
  swap(area_id_, other->area_id_);
  swap(stream_distance_, other->stream_distance_);
  swap(draw_distance_, other->draw_distance_);
  swap(priority_, other->priority_);
  swap(estate_id_, other->estate_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Object::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Material::InitAsDefaultInstance() {
}
class Material::_Internal {
 public:
};

Material::Material()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.Material)
}
Material::Material(const Material& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txd_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_txd_name().empty()) {
    txd_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.txd_name_);
  }
  texture_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_texture_name().empty()) {
    texture_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.texture_name_);
  }
  ::memcpy(&model_id_, &from.model_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&estate_id_) -
    reinterpret_cast<char*>(&model_id_)) + sizeof(estate_id_));
  // @@protoc_insertion_point(copy_constructor:mruv.objects.Material)
}

void Material::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Material_objects_2fobjects_2eproto.base);
  txd_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  texture_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&model_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&estate_id_) -
      reinterpret_cast<char*>(&model_id_)) + sizeof(estate_id_));
}

Material::~Material() {
  // @@protoc_insertion_point(destructor:mruv.objects.Material)
  SharedDtor();
}

void Material::SharedDtor() {
  txd_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  texture_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Material::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Material& Material::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Material_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void Material::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.Material)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txd_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  texture_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&model_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&estate_id_) -
      reinterpret_cast<char*>(&model_id_)) + sizeof(estate_id_));
  _internal_metadata_.Clear();
}

const char* Material::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 model_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          model_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string txd_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_txd_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.objects.Material.txd_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string texture_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_texture_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.objects.Material.texture_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 material_color = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          material_color_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 estate_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          estate_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Material::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.Material)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 model_id = 1;
  if (this->model_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_model_id(), target);
  }

  // string txd_name = 2;
  if (this->txd_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_txd_name().data(), static_cast<int>(this->_internal_txd_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.objects.Material.txd_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_txd_name(), target);
  }

  // string texture_name = 3;
  if (this->texture_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_texture_name().data(), static_cast<int>(this->_internal_texture_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.objects.Material.texture_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_texture_name(), target);
  }

  // int32 material_color = 4;
  if (this->material_color() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_material_color(), target);
  }

  // uint32 estate_id = 5;
  if (this->estate_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_estate_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.Material)
  return target;
}

size_t Material::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.Material)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string txd_name = 2;
  if (this->txd_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_txd_name());
  }

  // string texture_name = 3;
  if (this->texture_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_texture_name());
  }

  // int32 model_id = 1;
  if (this->model_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_model_id());
  }

  // int32 material_color = 4;
  if (this->material_color() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_material_color());
  }

  // uint32 estate_id = 5;
  if (this->estate_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_estate_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Material::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.Material)
  GOOGLE_DCHECK_NE(&from, this);
  const Material* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Material>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.Material)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.Material)
    MergeFrom(*source);
  }
}

void Material::MergeFrom(const Material& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.Material)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.txd_name().size() > 0) {

    txd_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.txd_name_);
  }
  if (from.texture_name().size() > 0) {

    texture_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.texture_name_);
  }
  if (from.model_id() != 0) {
    _internal_set_model_id(from._internal_model_id());
  }
  if (from.material_color() != 0) {
    _internal_set_material_color(from._internal_material_color());
  }
  if (from.estate_id() != 0) {
    _internal_set_estate_id(from._internal_estate_id());
  }
}

void Material::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.Material)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Material::CopyFrom(const Material& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.Material)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Material::IsInitialized() const {
  return true;
}

void Material::InternalSwap(Material* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  txd_name_.Swap(&other->txd_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  texture_name_.Swap(&other->texture_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(model_id_, other->model_id_);
  swap(material_color_, other->material_color_);
  swap(estate_id_, other->estate_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Material::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MaterialText::InitAsDefaultInstance() {
}
class MaterialText::_Internal {
 public:
};

MaterialText::MaterialText()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.MaterialText)
}
MaterialText::MaterialText(const MaterialText& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  font_face_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_font_face().empty()) {
    font_face_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.font_face_);
  }
  ::memcpy(&material_size_, &from.material_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&text_alignment_) -
    reinterpret_cast<char*>(&material_size_)) + sizeof(text_alignment_));
  // @@protoc_insertion_point(copy_constructor:mruv.objects.MaterialText)
}

void MaterialText::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MaterialText_objects_2fobjects_2eproto.base);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  font_face_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&material_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&text_alignment_) -
      reinterpret_cast<char*>(&material_size_)) + sizeof(text_alignment_));
}

MaterialText::~MaterialText() {
  // @@protoc_insertion_point(destructor:mruv.objects.MaterialText)
  SharedDtor();
}

void MaterialText::SharedDtor() {
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  font_face_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MaterialText::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MaterialText& MaterialText::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MaterialText_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void MaterialText::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.MaterialText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  font_face_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&material_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&text_alignment_) -
      reinterpret_cast<char*>(&material_size_)) + sizeof(text_alignment_));
  _internal_metadata_.Clear();
}

const char* MaterialText::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.objects.MaterialText.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mruv.objects.MaterialSize material_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_material_size(static_cast<::mruv::objects::MaterialSize>(val));
        } else goto handle_unusual;
        continue;
      // string font_face = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_font_face();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.objects.MaterialText.font_face"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 font_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          font_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool bold = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          bold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 font_color = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          font_color_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 back_color = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          back_color_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 text_alignment = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          text_alignment_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MaterialText::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.MaterialText)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.objects.MaterialText.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // .mruv.objects.MaterialSize material_size = 2;
  if (this->material_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_material_size(), target);
  }

  // string font_face = 3;
  if (this->font_face().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_font_face().data(), static_cast<int>(this->_internal_font_face().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.objects.MaterialText.font_face");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_font_face(), target);
  }

  // uint32 font_size = 4;
  if (this->font_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_font_size(), target);
  }

  // bool bold = 5;
  if (this->bold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_bold(), target);
  }

  // int32 font_color = 6;
  if (this->font_color() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_font_color(), target);
  }

  // int32 back_color = 7;
  if (this->back_color() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_back_color(), target);
  }

  // int32 text_alignment = 8;
  if (this->text_alignment() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_text_alignment(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.MaterialText)
  return target;
}

size_t MaterialText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.MaterialText)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // string font_face = 3;
  if (this->font_face().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_font_face());
  }

  // .mruv.objects.MaterialSize material_size = 2;
  if (this->material_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_material_size());
  }

  // uint32 font_size = 4;
  if (this->font_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_font_size());
  }

  // bool bold = 5;
  if (this->bold() != 0) {
    total_size += 1 + 1;
  }

  // int32 font_color = 6;
  if (this->font_color() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_font_color());
  }

  // int32 back_color = 7;
  if (this->back_color() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_back_color());
  }

  // int32 text_alignment = 8;
  if (this->text_alignment() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_text_alignment());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MaterialText::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.MaterialText)
  GOOGLE_DCHECK_NE(&from, this);
  const MaterialText* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MaterialText>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.MaterialText)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.MaterialText)
    MergeFrom(*source);
  }
}

void MaterialText::MergeFrom(const MaterialText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.MaterialText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.font_face().size() > 0) {

    font_face_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.font_face_);
  }
  if (from.material_size() != 0) {
    _internal_set_material_size(from._internal_material_size());
  }
  if (from.font_size() != 0) {
    _internal_set_font_size(from._internal_font_size());
  }
  if (from.bold() != 0) {
    _internal_set_bold(from._internal_bold());
  }
  if (from.font_color() != 0) {
    _internal_set_font_color(from._internal_font_color());
  }
  if (from.back_color() != 0) {
    _internal_set_back_color(from._internal_back_color());
  }
  if (from.text_alignment() != 0) {
    _internal_set_text_alignment(from._internal_text_alignment());
  }
}

void MaterialText::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.MaterialText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaterialText::CopyFrom(const MaterialText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.MaterialText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaterialText::IsInitialized() const {
  return true;
}

void MaterialText::InternalSwap(MaterialText* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  font_face_.Swap(&other->font_face_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(material_size_, other->material_size_);
  swap(font_size_, other->font_size_);
  swap(bold_, other->bold_);
  swap(font_color_, other->font_color_);
  swap(back_color_, other->back_color_);
  swap(text_alignment_, other->text_alignment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MaterialText::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemovedBuilding::InitAsDefaultInstance() {
}
class RemovedBuilding::_Internal {
 public:
};

RemovedBuilding::RemovedBuilding()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.RemovedBuilding)
}
RemovedBuilding::RemovedBuilding(const RemovedBuilding& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&model_, &from.model_,
    static_cast<size_t>(reinterpret_cast<char*>(&radius_) -
    reinterpret_cast<char*>(&model_)) + sizeof(radius_));
  // @@protoc_insertion_point(copy_constructor:mruv.objects.RemovedBuilding)
}

void RemovedBuilding::SharedCtor() {
  ::memset(&model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radius_) -
      reinterpret_cast<char*>(&model_)) + sizeof(radius_));
}

RemovedBuilding::~RemovedBuilding() {
  // @@protoc_insertion_point(destructor:mruv.objects.RemovedBuilding)
  SharedDtor();
}

void RemovedBuilding::SharedDtor() {
}

void RemovedBuilding::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemovedBuilding& RemovedBuilding::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemovedBuilding_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void RemovedBuilding::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.RemovedBuilding)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radius_) -
      reinterpret_cast<char*>(&model_)) + sizeof(radius_));
  _internal_metadata_.Clear();
}

const char* RemovedBuilding::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 model = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          model_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float x = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float z = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float radius = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          radius_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovedBuilding::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.RemovedBuilding)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 model = 1;
  if (this->model() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_model(), target);
  }

  // float x = 2;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_x(), target);
  }

  // float y = 3;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_y(), target);
  }

  // float z = 4;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_z(), target);
  }

  // float radius = 5;
  if (!(this->radius() <= 0 && this->radius() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_radius(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.RemovedBuilding)
  return target;
}

size_t RemovedBuilding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.RemovedBuilding)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 model = 1;
  if (this->model() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_model());
  }

  // float x = 2;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 3;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float z = 4;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  // float radius = 5;
  if (!(this->radius() <= 0 && this->radius() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovedBuilding::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.RemovedBuilding)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovedBuilding* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovedBuilding>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.RemovedBuilding)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.RemovedBuilding)
    MergeFrom(*source);
  }
}

void RemovedBuilding::MergeFrom(const RemovedBuilding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.RemovedBuilding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.model() != 0) {
    _internal_set_model(from._internal_model());
  }
  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
  if (!(from.radius() <= 0 && from.radius() >= 0)) {
    _internal_set_radius(from._internal_radius());
  }
}

void RemovedBuilding::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.RemovedBuilding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovedBuilding::CopyFrom(const RemovedBuilding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.RemovedBuilding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovedBuilding::IsInitialized() const {
  return true;
}

void RemovedBuilding::InternalSwap(RemovedBuilding* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(model_, other->model_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(radius_, other->radius_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovedBuilding::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateObjectRequest::InitAsDefaultInstance() {
  ::mruv::objects::_CreateObjectRequest_default_instance_._instance.get_mutable()->object_ = const_cast< ::mruv::objects::Object*>(
      ::mruv::objects::Object::internal_default_instance());
}
class CreateObjectRequest::_Internal {
 public:
  static const ::mruv::objects::Object& object(const CreateObjectRequest* msg);
};

const ::mruv::objects::Object&
CreateObjectRequest::_Internal::object(const CreateObjectRequest* msg) {
  return *msg->object_;
}
CreateObjectRequest::CreateObjectRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.CreateObjectRequest)
}
CreateObjectRequest::CreateObjectRequest(const CreateObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_object()) {
    object_ = new ::mruv::objects::Object(*from.object_);
  } else {
    object_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.objects.CreateObjectRequest)
}

void CreateObjectRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateObjectRequest_objects_2fobjects_2eproto.base);
  object_ = nullptr;
}

CreateObjectRequest::~CreateObjectRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.CreateObjectRequest)
  SharedDtor();
}

void CreateObjectRequest::SharedDtor() {
  if (this != internal_default_instance()) delete object_;
}

void CreateObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateObjectRequest& CreateObjectRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateObjectRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void CreateObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.CreateObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && object_ != nullptr) {
    delete object_;
  }
  object_ = nullptr;
  _internal_metadata_.Clear();
}

const char* CreateObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.objects.Object object = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_object(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateObjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.CreateObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.objects.Object object = 1;
  if (this->has_object()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::object(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.CreateObjectRequest)
  return target;
}

size_t CreateObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.CreateObjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.Object object = 1;
  if (this->has_object()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateObjectRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.CreateObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateObjectRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateObjectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.CreateObjectRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.CreateObjectRequest)
    MergeFrom(*source);
  }
}

void CreateObjectRequest::MergeFrom(const CreateObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.CreateObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object()) {
    _internal_mutable_object()->::mruv::objects::Object::MergeFrom(from._internal_object());
  }
}

void CreateObjectRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.CreateObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateObjectRequest::CopyFrom(const CreateObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.CreateObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateObjectRequest::IsInitialized() const {
  return true;
}

void CreateObjectRequest::InternalSwap(CreateObjectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_, other->object_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateObjectRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateObjectResponse::InitAsDefaultInstance() {
}
class CreateObjectResponse::_Internal {
 public:
};

CreateObjectResponse::CreateObjectResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.CreateObjectResponse)
}
CreateObjectResponse::CreateObjectResponse(const CreateObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.CreateObjectResponse)
}

void CreateObjectResponse::SharedCtor() {
  id_ = 0u;
}

CreateObjectResponse::~CreateObjectResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.CreateObjectResponse)
  SharedDtor();
}

void CreateObjectResponse::SharedDtor() {
}

void CreateObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateObjectResponse& CreateObjectResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateObjectResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void CreateObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.CreateObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* CreateObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateObjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.CreateObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.CreateObjectResponse)
  return target;
}

size_t CreateObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.CreateObjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateObjectResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.CreateObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateObjectResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateObjectResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.CreateObjectResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.CreateObjectResponse)
    MergeFrom(*source);
  }
}

void CreateObjectResponse::MergeFrom(const CreateObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.CreateObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void CreateObjectResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.CreateObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateObjectResponse::CopyFrom(const CreateObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.CreateObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateObjectResponse::IsInitialized() const {
  return true;
}

void CreateObjectResponse::InternalSwap(CreateObjectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateObjectResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetObjectRequest::InitAsDefaultInstance() {
}
class GetObjectRequest::_Internal {
 public:
};

GetObjectRequest::GetObjectRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.GetObjectRequest)
}
GetObjectRequest::GetObjectRequest(const GetObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.GetObjectRequest)
}

void GetObjectRequest::SharedCtor() {
  id_ = 0u;
}

GetObjectRequest::~GetObjectRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.GetObjectRequest)
  SharedDtor();
}

void GetObjectRequest::SharedDtor() {
}

void GetObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectRequest& GetObjectRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void GetObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.GetObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* GetObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.GetObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.GetObjectRequest)
  return target;
}

size_t GetObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.GetObjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.GetObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.GetObjectRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.GetObjectRequest)
    MergeFrom(*source);
  }
}

void GetObjectRequest::MergeFrom(const GetObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.GetObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetObjectRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.GetObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectRequest::CopyFrom(const GetObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.GetObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectRequest::IsInitialized() const {
  return true;
}

void GetObjectRequest::InternalSwap(GetObjectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetObjectResponse::InitAsDefaultInstance() {
  ::mruv::objects::_GetObjectResponse_default_instance_._instance.get_mutable()->object_ = const_cast< ::mruv::objects::Object*>(
      ::mruv::objects::Object::internal_default_instance());
}
class GetObjectResponse::_Internal {
 public:
  static const ::mruv::objects::Object& object(const GetObjectResponse* msg);
};

const ::mruv::objects::Object&
GetObjectResponse::_Internal::object(const GetObjectResponse* msg) {
  return *msg->object_;
}
GetObjectResponse::GetObjectResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.GetObjectResponse)
}
GetObjectResponse::GetObjectResponse(const GetObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_object()) {
    object_ = new ::mruv::objects::Object(*from.object_);
  } else {
    object_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.objects.GetObjectResponse)
}

void GetObjectResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetObjectResponse_objects_2fobjects_2eproto.base);
  object_ = nullptr;
}

GetObjectResponse::~GetObjectResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.GetObjectResponse)
  SharedDtor();
}

void GetObjectResponse::SharedDtor() {
  if (this != internal_default_instance()) delete object_;
}

void GetObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectResponse& GetObjectResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void GetObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.GetObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && object_ != nullptr) {
    delete object_;
  }
  object_ = nullptr;
  _internal_metadata_.Clear();
}

const char* GetObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.objects.Object object = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_object(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.GetObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.objects.Object object = 1;
  if (this->has_object()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::object(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.GetObjectResponse)
  return target;
}

size_t GetObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.GetObjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.Object object = 1;
  if (this->has_object()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.GetObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.GetObjectResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.GetObjectResponse)
    MergeFrom(*source);
  }
}

void GetObjectResponse::MergeFrom(const GetObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.GetObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object()) {
    _internal_mutable_object()->::mruv::objects::Object::MergeFrom(from._internal_object());
  }
}

void GetObjectResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.GetObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectResponse::CopyFrom(const GetObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.GetObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectResponse::IsInitialized() const {
  return true;
}

void GetObjectResponse::InternalSwap(GetObjectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_, other->object_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateObjectRequest::InitAsDefaultInstance() {
  ::mruv::objects::_UpdateObjectRequest_default_instance_._instance.get_mutable()->object_ = const_cast< ::mruv::objects::Object*>(
      ::mruv::objects::Object::internal_default_instance());
}
class UpdateObjectRequest::_Internal {
 public:
  static const ::mruv::objects::Object& object(const UpdateObjectRequest* msg);
};

const ::mruv::objects::Object&
UpdateObjectRequest::_Internal::object(const UpdateObjectRequest* msg) {
  return *msg->object_;
}
UpdateObjectRequest::UpdateObjectRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.UpdateObjectRequest)
}
UpdateObjectRequest::UpdateObjectRequest(const UpdateObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_object()) {
    object_ = new ::mruv::objects::Object(*from.object_);
  } else {
    object_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.UpdateObjectRequest)
}

void UpdateObjectRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateObjectRequest_objects_2fobjects_2eproto.base);
  ::memset(&object_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&object_)) + sizeof(id_));
}

UpdateObjectRequest::~UpdateObjectRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.UpdateObjectRequest)
  SharedDtor();
}

void UpdateObjectRequest::SharedDtor() {
  if (this != internal_default_instance()) delete object_;
}

void UpdateObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateObjectRequest& UpdateObjectRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateObjectRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void UpdateObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.UpdateObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && object_ != nullptr) {
    delete object_;
  }
  object_ = nullptr;
  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* UpdateObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mruv.objects.Object object = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_object(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateObjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.UpdateObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // .mruv.objects.Object object = 2;
  if (this->has_object()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::object(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.UpdateObjectRequest)
  return target;
}

size_t UpdateObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.UpdateObjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.Object object = 2;
  if (this->has_object()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateObjectRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.UpdateObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateObjectRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateObjectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.UpdateObjectRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.UpdateObjectRequest)
    MergeFrom(*source);
  }
}

void UpdateObjectRequest::MergeFrom(const UpdateObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.UpdateObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object()) {
    _internal_mutable_object()->::mruv::objects::Object::MergeFrom(from._internal_object());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void UpdateObjectRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.UpdateObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateObjectRequest::CopyFrom(const UpdateObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.UpdateObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateObjectRequest::IsInitialized() const {
  return true;
}

void UpdateObjectRequest::InternalSwap(UpdateObjectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_, other->object_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateObjectRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateObjectResponse::InitAsDefaultInstance() {
}
class UpdateObjectResponse::_Internal {
 public:
};

UpdateObjectResponse::UpdateObjectResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.UpdateObjectResponse)
}
UpdateObjectResponse::UpdateObjectResponse(const UpdateObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.UpdateObjectResponse)
}

void UpdateObjectResponse::SharedCtor() {
}

UpdateObjectResponse::~UpdateObjectResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.UpdateObjectResponse)
  SharedDtor();
}

void UpdateObjectResponse::SharedDtor() {
}

void UpdateObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateObjectResponse& UpdateObjectResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateObjectResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void UpdateObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.UpdateObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* UpdateObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateObjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.UpdateObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.UpdateObjectResponse)
  return target;
}

size_t UpdateObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.UpdateObjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateObjectResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.UpdateObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateObjectResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateObjectResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.UpdateObjectResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.UpdateObjectResponse)
    MergeFrom(*source);
  }
}

void UpdateObjectResponse::MergeFrom(const UpdateObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.UpdateObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateObjectResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.UpdateObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateObjectResponse::CopyFrom(const UpdateObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.UpdateObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateObjectResponse::IsInitialized() const {
  return true;
}

void UpdateObjectResponse::InternalSwap(UpdateObjectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateObjectResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteObjectRequest::InitAsDefaultInstance() {
}
class DeleteObjectRequest::_Internal {
 public:
};

DeleteObjectRequest::DeleteObjectRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.DeleteObjectRequest)
}
DeleteObjectRequest::DeleteObjectRequest(const DeleteObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.DeleteObjectRequest)
}

void DeleteObjectRequest::SharedCtor() {
  id_ = 0u;
}

DeleteObjectRequest::~DeleteObjectRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.DeleteObjectRequest)
  SharedDtor();
}

void DeleteObjectRequest::SharedDtor() {
}

void DeleteObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteObjectRequest& DeleteObjectRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteObjectRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void DeleteObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.DeleteObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* DeleteObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteObjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.DeleteObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.DeleteObjectRequest)
  return target;
}

size_t DeleteObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.DeleteObjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteObjectRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.DeleteObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteObjectRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteObjectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.DeleteObjectRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.DeleteObjectRequest)
    MergeFrom(*source);
  }
}

void DeleteObjectRequest::MergeFrom(const DeleteObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.DeleteObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteObjectRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.DeleteObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteObjectRequest::CopyFrom(const DeleteObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.DeleteObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteObjectRequest::IsInitialized() const {
  return true;
}

void DeleteObjectRequest::InternalSwap(DeleteObjectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteObjectRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteObjectResponse::InitAsDefaultInstance() {
}
class DeleteObjectResponse::_Internal {
 public:
};

DeleteObjectResponse::DeleteObjectResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.DeleteObjectResponse)
}
DeleteObjectResponse::DeleteObjectResponse(const DeleteObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.DeleteObjectResponse)
}

void DeleteObjectResponse::SharedCtor() {
}

DeleteObjectResponse::~DeleteObjectResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.DeleteObjectResponse)
  SharedDtor();
}

void DeleteObjectResponse::SharedDtor() {
}

void DeleteObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteObjectResponse& DeleteObjectResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteObjectResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void DeleteObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.DeleteObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* DeleteObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteObjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.DeleteObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.DeleteObjectResponse)
  return target;
}

size_t DeleteObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.DeleteObjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteObjectResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.DeleteObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteObjectResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteObjectResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.DeleteObjectResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.DeleteObjectResponse)
    MergeFrom(*source);
  }
}

void DeleteObjectResponse::MergeFrom(const DeleteObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.DeleteObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteObjectResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.DeleteObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteObjectResponse::CopyFrom(const DeleteObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.DeleteObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteObjectResponse::IsInitialized() const {
  return true;
}

void DeleteObjectResponse::InternalSwap(DeleteObjectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteObjectResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddObjectMaterialRequest::InitAsDefaultInstance() {
  ::mruv::objects::_AddObjectMaterialRequest_default_instance_._instance.get_mutable()->material_ = const_cast< ::mruv::objects::Material*>(
      ::mruv::objects::Material::internal_default_instance());
}
class AddObjectMaterialRequest::_Internal {
 public:
  static const ::mruv::objects::Material& material(const AddObjectMaterialRequest* msg);
};

const ::mruv::objects::Material&
AddObjectMaterialRequest::_Internal::material(const AddObjectMaterialRequest* msg) {
  return *msg->material_;
}
AddObjectMaterialRequest::AddObjectMaterialRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.AddObjectMaterialRequest)
}
AddObjectMaterialRequest::AddObjectMaterialRequest(const AddObjectMaterialRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_material()) {
    material_ = new ::mruv::objects::Material(*from.material_);
  } else {
    material_ = nullptr;
  }
  ::memcpy(&object_id_, &from.object_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&object_id_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:mruv.objects.AddObjectMaterialRequest)
}

void AddObjectMaterialRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddObjectMaterialRequest_objects_2fobjects_2eproto.base);
  ::memset(&material_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&material_)) + sizeof(index_));
}

AddObjectMaterialRequest::~AddObjectMaterialRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.AddObjectMaterialRequest)
  SharedDtor();
}

void AddObjectMaterialRequest::SharedDtor() {
  if (this != internal_default_instance()) delete material_;
}

void AddObjectMaterialRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddObjectMaterialRequest& AddObjectMaterialRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddObjectMaterialRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void AddObjectMaterialRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.AddObjectMaterialRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && material_ != nullptr) {
    delete material_;
  }
  material_ = nullptr;
  ::memset(&object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&object_id_)) + sizeof(index_));
  _internal_metadata_.Clear();
}

const char* AddObjectMaterialRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mruv.objects.Material material = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_material(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddObjectMaterialRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.AddObjectMaterialRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_object_id(), target);
  }

  // uint32 index = 2;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_index(), target);
  }

  // .mruv.objects.Material material = 3;
  if (this->has_material()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::material(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.AddObjectMaterialRequest)
  return target;
}

size_t AddObjectMaterialRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.AddObjectMaterialRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.Material material = 3;
  if (this->has_material()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *material_);
  }

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_object_id());
  }

  // uint32 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddObjectMaterialRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.AddObjectMaterialRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddObjectMaterialRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddObjectMaterialRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.AddObjectMaterialRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.AddObjectMaterialRequest)
    MergeFrom(*source);
  }
}

void AddObjectMaterialRequest::MergeFrom(const AddObjectMaterialRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.AddObjectMaterialRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_material()) {
    _internal_mutable_material()->::mruv::objects::Material::MergeFrom(from._internal_material());
  }
  if (from.object_id() != 0) {
    _internal_set_object_id(from._internal_object_id());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void AddObjectMaterialRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.AddObjectMaterialRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddObjectMaterialRequest::CopyFrom(const AddObjectMaterialRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.AddObjectMaterialRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddObjectMaterialRequest::IsInitialized() const {
  return true;
}

void AddObjectMaterialRequest::InternalSwap(AddObjectMaterialRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(material_, other->material_);
  swap(object_id_, other->object_id_);
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddObjectMaterialRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddObjectMaterialResponse::InitAsDefaultInstance() {
}
class AddObjectMaterialResponse::_Internal {
 public:
};

AddObjectMaterialResponse::AddObjectMaterialResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.AddObjectMaterialResponse)
}
AddObjectMaterialResponse::AddObjectMaterialResponse(const AddObjectMaterialResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.AddObjectMaterialResponse)
}

void AddObjectMaterialResponse::SharedCtor() {
}

AddObjectMaterialResponse::~AddObjectMaterialResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.AddObjectMaterialResponse)
  SharedDtor();
}

void AddObjectMaterialResponse::SharedDtor() {
}

void AddObjectMaterialResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddObjectMaterialResponse& AddObjectMaterialResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddObjectMaterialResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void AddObjectMaterialResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.AddObjectMaterialResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* AddObjectMaterialResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddObjectMaterialResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.AddObjectMaterialResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.AddObjectMaterialResponse)
  return target;
}

size_t AddObjectMaterialResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.AddObjectMaterialResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddObjectMaterialResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.AddObjectMaterialResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddObjectMaterialResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddObjectMaterialResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.AddObjectMaterialResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.AddObjectMaterialResponse)
    MergeFrom(*source);
  }
}

void AddObjectMaterialResponse::MergeFrom(const AddObjectMaterialResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.AddObjectMaterialResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AddObjectMaterialResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.AddObjectMaterialResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddObjectMaterialResponse::CopyFrom(const AddObjectMaterialResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.AddObjectMaterialResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddObjectMaterialResponse::IsInitialized() const {
  return true;
}

void AddObjectMaterialResponse::InternalSwap(AddObjectMaterialResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddObjectMaterialResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetObjectMaterialsRequest::InitAsDefaultInstance() {
}
class GetObjectMaterialsRequest::_Internal {
 public:
};

GetObjectMaterialsRequest::GetObjectMaterialsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.GetObjectMaterialsRequest)
}
GetObjectMaterialsRequest::GetObjectMaterialsRequest(const GetObjectMaterialsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_ = from.object_id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.GetObjectMaterialsRequest)
}

void GetObjectMaterialsRequest::SharedCtor() {
  object_id_ = 0u;
}

GetObjectMaterialsRequest::~GetObjectMaterialsRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.GetObjectMaterialsRequest)
  SharedDtor();
}

void GetObjectMaterialsRequest::SharedDtor() {
}

void GetObjectMaterialsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectMaterialsRequest& GetObjectMaterialsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectMaterialsRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void GetObjectMaterialsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.GetObjectMaterialsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_ = 0u;
  _internal_metadata_.Clear();
}

const char* GetObjectMaterialsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectMaterialsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.GetObjectMaterialsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_object_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.GetObjectMaterialsRequest)
  return target;
}

size_t GetObjectMaterialsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.GetObjectMaterialsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_object_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectMaterialsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.GetObjectMaterialsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectMaterialsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectMaterialsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.GetObjectMaterialsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.GetObjectMaterialsRequest)
    MergeFrom(*source);
  }
}

void GetObjectMaterialsRequest::MergeFrom(const GetObjectMaterialsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.GetObjectMaterialsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id() != 0) {
    _internal_set_object_id(from._internal_object_id());
  }
}

void GetObjectMaterialsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.GetObjectMaterialsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectMaterialsRequest::CopyFrom(const GetObjectMaterialsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.GetObjectMaterialsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectMaterialsRequest::IsInitialized() const {
  return true;
}

void GetObjectMaterialsRequest::InternalSwap(GetObjectMaterialsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_id_, other->object_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectMaterialsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetObjectMaterialsResponse_MaterialsEntry_DoNotUse::GetObjectMaterialsResponse_MaterialsEntry_DoNotUse() {}
GetObjectMaterialsResponse_MaterialsEntry_DoNotUse::GetObjectMaterialsResponse_MaterialsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetObjectMaterialsResponse_MaterialsEntry_DoNotUse::MergeFrom(const GetObjectMaterialsResponse_MaterialsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetObjectMaterialsResponse_MaterialsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetObjectMaterialsResponse_MaterialsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetObjectMaterialsResponse::InitAsDefaultInstance() {
}
class GetObjectMaterialsResponse::_Internal {
 public:
};

GetObjectMaterialsResponse::GetObjectMaterialsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.GetObjectMaterialsResponse)
}
GetObjectMaterialsResponse::GetObjectMaterialsResponse(const GetObjectMaterialsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  materials_.MergeFrom(from.materials_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.GetObjectMaterialsResponse)
}

void GetObjectMaterialsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetObjectMaterialsResponse_objects_2fobjects_2eproto.base);
}

GetObjectMaterialsResponse::~GetObjectMaterialsResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.GetObjectMaterialsResponse)
  SharedDtor();
}

void GetObjectMaterialsResponse::SharedDtor() {
}

void GetObjectMaterialsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectMaterialsResponse& GetObjectMaterialsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectMaterialsResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void GetObjectMaterialsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.GetObjectMaterialsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  materials_.Clear();
  _internal_metadata_.Clear();
}

const char* GetObjectMaterialsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<uint32, .mruv.objects.Material> materials = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&materials_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectMaterialsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.GetObjectMaterialsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .mruv.objects.Material> materials = 1;
  if (!this->_internal_materials().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::Material >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_materials().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_materials().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::Material >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::Material >::const_iterator
          it = this->_internal_materials().begin();
          it != this->_internal_materials().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetObjectMaterialsResponse_MaterialsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::Material >::const_iterator
          it = this->_internal_materials().begin();
          it != this->_internal_materials().end(); ++it) {
        target = GetObjectMaterialsResponse_MaterialsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.GetObjectMaterialsResponse)
  return target;
}

size_t GetObjectMaterialsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.GetObjectMaterialsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .mruv.objects.Material> materials = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_materials_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::Material >::const_iterator
      it = this->_internal_materials().begin();
      it != this->_internal_materials().end(); ++it) {
    total_size += GetObjectMaterialsResponse_MaterialsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectMaterialsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.GetObjectMaterialsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectMaterialsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectMaterialsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.GetObjectMaterialsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.GetObjectMaterialsResponse)
    MergeFrom(*source);
  }
}

void GetObjectMaterialsResponse::MergeFrom(const GetObjectMaterialsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.GetObjectMaterialsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  materials_.MergeFrom(from.materials_);
}

void GetObjectMaterialsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.GetObjectMaterialsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectMaterialsResponse::CopyFrom(const GetObjectMaterialsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.GetObjectMaterialsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectMaterialsResponse::IsInitialized() const {
  return true;
}

void GetObjectMaterialsResponse::InternalSwap(GetObjectMaterialsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  materials_.Swap(&other->materials_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectMaterialsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteObjectMaterialRequest::InitAsDefaultInstance() {
}
class DeleteObjectMaterialRequest::_Internal {
 public:
};

DeleteObjectMaterialRequest::DeleteObjectMaterialRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.DeleteObjectMaterialRequest)
}
DeleteObjectMaterialRequest::DeleteObjectMaterialRequest(const DeleteObjectMaterialRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&object_id_, &from.object_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&object_id_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:mruv.objects.DeleteObjectMaterialRequest)
}

void DeleteObjectMaterialRequest::SharedCtor() {
  ::memset(&object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&object_id_)) + sizeof(index_));
}

DeleteObjectMaterialRequest::~DeleteObjectMaterialRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.DeleteObjectMaterialRequest)
  SharedDtor();
}

void DeleteObjectMaterialRequest::SharedDtor() {
}

void DeleteObjectMaterialRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteObjectMaterialRequest& DeleteObjectMaterialRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteObjectMaterialRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void DeleteObjectMaterialRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.DeleteObjectMaterialRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&object_id_)) + sizeof(index_));
  _internal_metadata_.Clear();
}

const char* DeleteObjectMaterialRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteObjectMaterialRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.DeleteObjectMaterialRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_object_id(), target);
  }

  // uint32 index = 2;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.DeleteObjectMaterialRequest)
  return target;
}

size_t DeleteObjectMaterialRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.DeleteObjectMaterialRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_object_id());
  }

  // uint32 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteObjectMaterialRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.DeleteObjectMaterialRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteObjectMaterialRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteObjectMaterialRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.DeleteObjectMaterialRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.DeleteObjectMaterialRequest)
    MergeFrom(*source);
  }
}

void DeleteObjectMaterialRequest::MergeFrom(const DeleteObjectMaterialRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.DeleteObjectMaterialRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id() != 0) {
    _internal_set_object_id(from._internal_object_id());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void DeleteObjectMaterialRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.DeleteObjectMaterialRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteObjectMaterialRequest::CopyFrom(const DeleteObjectMaterialRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.DeleteObjectMaterialRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteObjectMaterialRequest::IsInitialized() const {
  return true;
}

void DeleteObjectMaterialRequest::InternalSwap(DeleteObjectMaterialRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_id_, other->object_id_);
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteObjectMaterialRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteObjectMaterialResponse::InitAsDefaultInstance() {
}
class DeleteObjectMaterialResponse::_Internal {
 public:
};

DeleteObjectMaterialResponse::DeleteObjectMaterialResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.DeleteObjectMaterialResponse)
}
DeleteObjectMaterialResponse::DeleteObjectMaterialResponse(const DeleteObjectMaterialResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.DeleteObjectMaterialResponse)
}

void DeleteObjectMaterialResponse::SharedCtor() {
}

DeleteObjectMaterialResponse::~DeleteObjectMaterialResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.DeleteObjectMaterialResponse)
  SharedDtor();
}

void DeleteObjectMaterialResponse::SharedDtor() {
}

void DeleteObjectMaterialResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteObjectMaterialResponse& DeleteObjectMaterialResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteObjectMaterialResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void DeleteObjectMaterialResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.DeleteObjectMaterialResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* DeleteObjectMaterialResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteObjectMaterialResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.DeleteObjectMaterialResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.DeleteObjectMaterialResponse)
  return target;
}

size_t DeleteObjectMaterialResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.DeleteObjectMaterialResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteObjectMaterialResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.DeleteObjectMaterialResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteObjectMaterialResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteObjectMaterialResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.DeleteObjectMaterialResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.DeleteObjectMaterialResponse)
    MergeFrom(*source);
  }
}

void DeleteObjectMaterialResponse::MergeFrom(const DeleteObjectMaterialResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.DeleteObjectMaterialResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteObjectMaterialResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.DeleteObjectMaterialResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteObjectMaterialResponse::CopyFrom(const DeleteObjectMaterialResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.DeleteObjectMaterialResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteObjectMaterialResponse::IsInitialized() const {
  return true;
}

void DeleteObjectMaterialResponse::InternalSwap(DeleteObjectMaterialResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteObjectMaterialResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddObjectMaterialTextRequest::InitAsDefaultInstance() {
  ::mruv::objects::_AddObjectMaterialTextRequest_default_instance_._instance.get_mutable()->material_text_ = const_cast< ::mruv::objects::MaterialText*>(
      ::mruv::objects::MaterialText::internal_default_instance());
}
class AddObjectMaterialTextRequest::_Internal {
 public:
  static const ::mruv::objects::MaterialText& material_text(const AddObjectMaterialTextRequest* msg);
};

const ::mruv::objects::MaterialText&
AddObjectMaterialTextRequest::_Internal::material_text(const AddObjectMaterialTextRequest* msg) {
  return *msg->material_text_;
}
AddObjectMaterialTextRequest::AddObjectMaterialTextRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.AddObjectMaterialTextRequest)
}
AddObjectMaterialTextRequest::AddObjectMaterialTextRequest(const AddObjectMaterialTextRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_material_text()) {
    material_text_ = new ::mruv::objects::MaterialText(*from.material_text_);
  } else {
    material_text_ = nullptr;
  }
  ::memcpy(&object_id_, &from.object_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&object_id_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:mruv.objects.AddObjectMaterialTextRequest)
}

void AddObjectMaterialTextRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddObjectMaterialTextRequest_objects_2fobjects_2eproto.base);
  ::memset(&material_text_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&material_text_)) + sizeof(index_));
}

AddObjectMaterialTextRequest::~AddObjectMaterialTextRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.AddObjectMaterialTextRequest)
  SharedDtor();
}

void AddObjectMaterialTextRequest::SharedDtor() {
  if (this != internal_default_instance()) delete material_text_;
}

void AddObjectMaterialTextRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddObjectMaterialTextRequest& AddObjectMaterialTextRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddObjectMaterialTextRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void AddObjectMaterialTextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.AddObjectMaterialTextRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && material_text_ != nullptr) {
    delete material_text_;
  }
  material_text_ = nullptr;
  ::memset(&object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&object_id_)) + sizeof(index_));
  _internal_metadata_.Clear();
}

const char* AddObjectMaterialTextRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mruv.objects.MaterialText material_text = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_material_text(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddObjectMaterialTextRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.AddObjectMaterialTextRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_object_id(), target);
  }

  // uint32 index = 2;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_index(), target);
  }

  // .mruv.objects.MaterialText material_text = 3;
  if (this->has_material_text()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::material_text(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.AddObjectMaterialTextRequest)
  return target;
}

size_t AddObjectMaterialTextRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.AddObjectMaterialTextRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.MaterialText material_text = 3;
  if (this->has_material_text()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *material_text_);
  }

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_object_id());
  }

  // uint32 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddObjectMaterialTextRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.AddObjectMaterialTextRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddObjectMaterialTextRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddObjectMaterialTextRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.AddObjectMaterialTextRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.AddObjectMaterialTextRequest)
    MergeFrom(*source);
  }
}

void AddObjectMaterialTextRequest::MergeFrom(const AddObjectMaterialTextRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.AddObjectMaterialTextRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_material_text()) {
    _internal_mutable_material_text()->::mruv::objects::MaterialText::MergeFrom(from._internal_material_text());
  }
  if (from.object_id() != 0) {
    _internal_set_object_id(from._internal_object_id());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void AddObjectMaterialTextRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.AddObjectMaterialTextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddObjectMaterialTextRequest::CopyFrom(const AddObjectMaterialTextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.AddObjectMaterialTextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddObjectMaterialTextRequest::IsInitialized() const {
  return true;
}

void AddObjectMaterialTextRequest::InternalSwap(AddObjectMaterialTextRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(material_text_, other->material_text_);
  swap(object_id_, other->object_id_);
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddObjectMaterialTextRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddObjectMaterialTextResponse::InitAsDefaultInstance() {
}
class AddObjectMaterialTextResponse::_Internal {
 public:
};

AddObjectMaterialTextResponse::AddObjectMaterialTextResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.AddObjectMaterialTextResponse)
}
AddObjectMaterialTextResponse::AddObjectMaterialTextResponse(const AddObjectMaterialTextResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.AddObjectMaterialTextResponse)
}

void AddObjectMaterialTextResponse::SharedCtor() {
}

AddObjectMaterialTextResponse::~AddObjectMaterialTextResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.AddObjectMaterialTextResponse)
  SharedDtor();
}

void AddObjectMaterialTextResponse::SharedDtor() {
}

void AddObjectMaterialTextResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddObjectMaterialTextResponse& AddObjectMaterialTextResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddObjectMaterialTextResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void AddObjectMaterialTextResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.AddObjectMaterialTextResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* AddObjectMaterialTextResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddObjectMaterialTextResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.AddObjectMaterialTextResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.AddObjectMaterialTextResponse)
  return target;
}

size_t AddObjectMaterialTextResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.AddObjectMaterialTextResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddObjectMaterialTextResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.AddObjectMaterialTextResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddObjectMaterialTextResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddObjectMaterialTextResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.AddObjectMaterialTextResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.AddObjectMaterialTextResponse)
    MergeFrom(*source);
  }
}

void AddObjectMaterialTextResponse::MergeFrom(const AddObjectMaterialTextResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.AddObjectMaterialTextResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AddObjectMaterialTextResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.AddObjectMaterialTextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddObjectMaterialTextResponse::CopyFrom(const AddObjectMaterialTextResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.AddObjectMaterialTextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddObjectMaterialTextResponse::IsInitialized() const {
  return true;
}

void AddObjectMaterialTextResponse::InternalSwap(AddObjectMaterialTextResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddObjectMaterialTextResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetObjectMaterialTextsRequest::InitAsDefaultInstance() {
}
class GetObjectMaterialTextsRequest::_Internal {
 public:
};

GetObjectMaterialTextsRequest::GetObjectMaterialTextsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.GetObjectMaterialTextsRequest)
}
GetObjectMaterialTextsRequest::GetObjectMaterialTextsRequest(const GetObjectMaterialTextsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_id_ = from.object_id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.GetObjectMaterialTextsRequest)
}

void GetObjectMaterialTextsRequest::SharedCtor() {
  object_id_ = 0u;
}

GetObjectMaterialTextsRequest::~GetObjectMaterialTextsRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.GetObjectMaterialTextsRequest)
  SharedDtor();
}

void GetObjectMaterialTextsRequest::SharedDtor() {
}

void GetObjectMaterialTextsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectMaterialTextsRequest& GetObjectMaterialTextsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectMaterialTextsRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void GetObjectMaterialTextsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.GetObjectMaterialTextsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_ = 0u;
  _internal_metadata_.Clear();
}

const char* GetObjectMaterialTextsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectMaterialTextsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.GetObjectMaterialTextsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_object_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.GetObjectMaterialTextsRequest)
  return target;
}

size_t GetObjectMaterialTextsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.GetObjectMaterialTextsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_object_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectMaterialTextsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.GetObjectMaterialTextsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectMaterialTextsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectMaterialTextsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.GetObjectMaterialTextsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.GetObjectMaterialTextsRequest)
    MergeFrom(*source);
  }
}

void GetObjectMaterialTextsRequest::MergeFrom(const GetObjectMaterialTextsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.GetObjectMaterialTextsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id() != 0) {
    _internal_set_object_id(from._internal_object_id());
  }
}

void GetObjectMaterialTextsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.GetObjectMaterialTextsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectMaterialTextsRequest::CopyFrom(const GetObjectMaterialTextsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.GetObjectMaterialTextsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectMaterialTextsRequest::IsInitialized() const {
  return true;
}

void GetObjectMaterialTextsRequest::InternalSwap(GetObjectMaterialTextsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_id_, other->object_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectMaterialTextsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse::GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse() {}
GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse::GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse::MergeFrom(const GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetObjectMaterialTextsResponse::InitAsDefaultInstance() {
}
class GetObjectMaterialTextsResponse::_Internal {
 public:
};

GetObjectMaterialTextsResponse::GetObjectMaterialTextsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.GetObjectMaterialTextsResponse)
}
GetObjectMaterialTextsResponse::GetObjectMaterialTextsResponse(const GetObjectMaterialTextsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  material_texts_.MergeFrom(from.material_texts_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.GetObjectMaterialTextsResponse)
}

void GetObjectMaterialTextsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetObjectMaterialTextsResponse_objects_2fobjects_2eproto.base);
}

GetObjectMaterialTextsResponse::~GetObjectMaterialTextsResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.GetObjectMaterialTextsResponse)
  SharedDtor();
}

void GetObjectMaterialTextsResponse::SharedDtor() {
}

void GetObjectMaterialTextsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectMaterialTextsResponse& GetObjectMaterialTextsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectMaterialTextsResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void GetObjectMaterialTextsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.GetObjectMaterialTextsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  material_texts_.Clear();
  _internal_metadata_.Clear();
}

const char* GetObjectMaterialTextsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<uint32, .mruv.objects.MaterialText> material_texts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&material_texts_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectMaterialTextsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.GetObjectMaterialTextsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .mruv.objects.MaterialText> material_texts = 1;
  if (!this->_internal_material_texts().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::MaterialText >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_material_texts().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_material_texts().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::MaterialText >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::MaterialText >::const_iterator
          it = this->_internal_material_texts().begin();
          it != this->_internal_material_texts().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::MaterialText >::const_iterator
          it = this->_internal_material_texts().begin();
          it != this->_internal_material_texts().end(); ++it) {
        target = GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.GetObjectMaterialTextsResponse)
  return target;
}

size_t GetObjectMaterialTextsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.GetObjectMaterialTextsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .mruv.objects.MaterialText> material_texts = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_material_texts_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::objects::MaterialText >::const_iterator
      it = this->_internal_material_texts().begin();
      it != this->_internal_material_texts().end(); ++it) {
    total_size += GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectMaterialTextsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.GetObjectMaterialTextsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectMaterialTextsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectMaterialTextsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.GetObjectMaterialTextsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.GetObjectMaterialTextsResponse)
    MergeFrom(*source);
  }
}

void GetObjectMaterialTextsResponse::MergeFrom(const GetObjectMaterialTextsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.GetObjectMaterialTextsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  material_texts_.MergeFrom(from.material_texts_);
}

void GetObjectMaterialTextsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.GetObjectMaterialTextsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectMaterialTextsResponse::CopyFrom(const GetObjectMaterialTextsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.GetObjectMaterialTextsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectMaterialTextsResponse::IsInitialized() const {
  return true;
}

void GetObjectMaterialTextsResponse::InternalSwap(GetObjectMaterialTextsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  material_texts_.Swap(&other->material_texts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectMaterialTextsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteObjectMaterialTextRequest::InitAsDefaultInstance() {
}
class DeleteObjectMaterialTextRequest::_Internal {
 public:
};

DeleteObjectMaterialTextRequest::DeleteObjectMaterialTextRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.DeleteObjectMaterialTextRequest)
}
DeleteObjectMaterialTextRequest::DeleteObjectMaterialTextRequest(const DeleteObjectMaterialTextRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&object_id_, &from.object_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&object_id_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:mruv.objects.DeleteObjectMaterialTextRequest)
}

void DeleteObjectMaterialTextRequest::SharedCtor() {
  ::memset(&object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&object_id_)) + sizeof(index_));
}

DeleteObjectMaterialTextRequest::~DeleteObjectMaterialTextRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.DeleteObjectMaterialTextRequest)
  SharedDtor();
}

void DeleteObjectMaterialTextRequest::SharedDtor() {
}

void DeleteObjectMaterialTextRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteObjectMaterialTextRequest& DeleteObjectMaterialTextRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteObjectMaterialTextRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void DeleteObjectMaterialTextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.DeleteObjectMaterialTextRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&object_id_)) + sizeof(index_));
  _internal_metadata_.Clear();
}

const char* DeleteObjectMaterialTextRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteObjectMaterialTextRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.DeleteObjectMaterialTextRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_object_id(), target);
  }

  // uint32 index = 2;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.DeleteObjectMaterialTextRequest)
  return target;
}

size_t DeleteObjectMaterialTextRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.DeleteObjectMaterialTextRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_object_id());
  }

  // uint32 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteObjectMaterialTextRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.DeleteObjectMaterialTextRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteObjectMaterialTextRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteObjectMaterialTextRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.DeleteObjectMaterialTextRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.DeleteObjectMaterialTextRequest)
    MergeFrom(*source);
  }
}

void DeleteObjectMaterialTextRequest::MergeFrom(const DeleteObjectMaterialTextRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.DeleteObjectMaterialTextRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object_id() != 0) {
    _internal_set_object_id(from._internal_object_id());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void DeleteObjectMaterialTextRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.DeleteObjectMaterialTextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteObjectMaterialTextRequest::CopyFrom(const DeleteObjectMaterialTextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.DeleteObjectMaterialTextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteObjectMaterialTextRequest::IsInitialized() const {
  return true;
}

void DeleteObjectMaterialTextRequest::InternalSwap(DeleteObjectMaterialTextRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_id_, other->object_id_);
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteObjectMaterialTextRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteObjectMaterialTextResponse::InitAsDefaultInstance() {
}
class DeleteObjectMaterialTextResponse::_Internal {
 public:
};

DeleteObjectMaterialTextResponse::DeleteObjectMaterialTextResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.DeleteObjectMaterialTextResponse)
}
DeleteObjectMaterialTextResponse::DeleteObjectMaterialTextResponse(const DeleteObjectMaterialTextResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.DeleteObjectMaterialTextResponse)
}

void DeleteObjectMaterialTextResponse::SharedCtor() {
}

DeleteObjectMaterialTextResponse::~DeleteObjectMaterialTextResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.DeleteObjectMaterialTextResponse)
  SharedDtor();
}

void DeleteObjectMaterialTextResponse::SharedDtor() {
}

void DeleteObjectMaterialTextResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteObjectMaterialTextResponse& DeleteObjectMaterialTextResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteObjectMaterialTextResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void DeleteObjectMaterialTextResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.DeleteObjectMaterialTextResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* DeleteObjectMaterialTextResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteObjectMaterialTextResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.DeleteObjectMaterialTextResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.DeleteObjectMaterialTextResponse)
  return target;
}

size_t DeleteObjectMaterialTextResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.DeleteObjectMaterialTextResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteObjectMaterialTextResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.DeleteObjectMaterialTextResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteObjectMaterialTextResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteObjectMaterialTextResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.DeleteObjectMaterialTextResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.DeleteObjectMaterialTextResponse)
    MergeFrom(*source);
  }
}

void DeleteObjectMaterialTextResponse::MergeFrom(const DeleteObjectMaterialTextResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.DeleteObjectMaterialTextResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteObjectMaterialTextResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.DeleteObjectMaterialTextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteObjectMaterialTextResponse::CopyFrom(const DeleteObjectMaterialTextResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.DeleteObjectMaterialTextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteObjectMaterialTextResponse::IsInitialized() const {
  return true;
}

void DeleteObjectMaterialTextResponse::InternalSwap(DeleteObjectMaterialTextResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteObjectMaterialTextResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddRemoveBuildingRequest::InitAsDefaultInstance() {
  ::mruv::objects::_AddRemoveBuildingRequest_default_instance_._instance.get_mutable()->removed_building_ = const_cast< ::mruv::objects::RemovedBuilding*>(
      ::mruv::objects::RemovedBuilding::internal_default_instance());
}
class AddRemoveBuildingRequest::_Internal {
 public:
  static const ::mruv::objects::RemovedBuilding& removed_building(const AddRemoveBuildingRequest* msg);
};

const ::mruv::objects::RemovedBuilding&
AddRemoveBuildingRequest::_Internal::removed_building(const AddRemoveBuildingRequest* msg) {
  return *msg->removed_building_;
}
AddRemoveBuildingRequest::AddRemoveBuildingRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.AddRemoveBuildingRequest)
}
AddRemoveBuildingRequest::AddRemoveBuildingRequest(const AddRemoveBuildingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_removed_building()) {
    removed_building_ = new ::mruv::objects::RemovedBuilding(*from.removed_building_);
  } else {
    removed_building_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.objects.AddRemoveBuildingRequest)
}

void AddRemoveBuildingRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddRemoveBuildingRequest_objects_2fobjects_2eproto.base);
  removed_building_ = nullptr;
}

AddRemoveBuildingRequest::~AddRemoveBuildingRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.AddRemoveBuildingRequest)
  SharedDtor();
}

void AddRemoveBuildingRequest::SharedDtor() {
  if (this != internal_default_instance()) delete removed_building_;
}

void AddRemoveBuildingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddRemoveBuildingRequest& AddRemoveBuildingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddRemoveBuildingRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void AddRemoveBuildingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.AddRemoveBuildingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && removed_building_ != nullptr) {
    delete removed_building_;
  }
  removed_building_ = nullptr;
  _internal_metadata_.Clear();
}

const char* AddRemoveBuildingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.objects.RemovedBuilding removed_building = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_removed_building(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddRemoveBuildingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.AddRemoveBuildingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.objects.RemovedBuilding removed_building = 1;
  if (this->has_removed_building()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::removed_building(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.AddRemoveBuildingRequest)
  return target;
}

size_t AddRemoveBuildingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.AddRemoveBuildingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.RemovedBuilding removed_building = 1;
  if (this->has_removed_building()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *removed_building_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRemoveBuildingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.AddRemoveBuildingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRemoveBuildingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddRemoveBuildingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.AddRemoveBuildingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.AddRemoveBuildingRequest)
    MergeFrom(*source);
  }
}

void AddRemoveBuildingRequest::MergeFrom(const AddRemoveBuildingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.AddRemoveBuildingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_removed_building()) {
    _internal_mutable_removed_building()->::mruv::objects::RemovedBuilding::MergeFrom(from._internal_removed_building());
  }
}

void AddRemoveBuildingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.AddRemoveBuildingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRemoveBuildingRequest::CopyFrom(const AddRemoveBuildingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.AddRemoveBuildingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRemoveBuildingRequest::IsInitialized() const {
  return true;
}

void AddRemoveBuildingRequest::InternalSwap(AddRemoveBuildingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(removed_building_, other->removed_building_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRemoveBuildingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddRemoveBuildingResponse::InitAsDefaultInstance() {
}
class AddRemoveBuildingResponse::_Internal {
 public:
};

AddRemoveBuildingResponse::AddRemoveBuildingResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.AddRemoveBuildingResponse)
}
AddRemoveBuildingResponse::AddRemoveBuildingResponse(const AddRemoveBuildingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.AddRemoveBuildingResponse)
}

void AddRemoveBuildingResponse::SharedCtor() {
  id_ = 0u;
}

AddRemoveBuildingResponse::~AddRemoveBuildingResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.AddRemoveBuildingResponse)
  SharedDtor();
}

void AddRemoveBuildingResponse::SharedDtor() {
}

void AddRemoveBuildingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddRemoveBuildingResponse& AddRemoveBuildingResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddRemoveBuildingResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void AddRemoveBuildingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.AddRemoveBuildingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* AddRemoveBuildingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddRemoveBuildingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.AddRemoveBuildingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.AddRemoveBuildingResponse)
  return target;
}

size_t AddRemoveBuildingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.AddRemoveBuildingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRemoveBuildingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.AddRemoveBuildingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRemoveBuildingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddRemoveBuildingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.AddRemoveBuildingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.AddRemoveBuildingResponse)
    MergeFrom(*source);
  }
}

void AddRemoveBuildingResponse::MergeFrom(const AddRemoveBuildingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.AddRemoveBuildingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void AddRemoveBuildingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.AddRemoveBuildingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRemoveBuildingResponse::CopyFrom(const AddRemoveBuildingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.AddRemoveBuildingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRemoveBuildingResponse::IsInitialized() const {
  return true;
}

void AddRemoveBuildingResponse::InternalSwap(AddRemoveBuildingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRemoveBuildingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRemovedBuildingsRequest::InitAsDefaultInstance() {
}
class GetRemovedBuildingsRequest::_Internal {
 public:
};

GetRemovedBuildingsRequest::GetRemovedBuildingsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.GetRemovedBuildingsRequest)
}
GetRemovedBuildingsRequest::GetRemovedBuildingsRequest(const GetRemovedBuildingsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  estate_id_ = from.estate_id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.GetRemovedBuildingsRequest)
}

void GetRemovedBuildingsRequest::SharedCtor() {
  estate_id_ = 0u;
}

GetRemovedBuildingsRequest::~GetRemovedBuildingsRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.GetRemovedBuildingsRequest)
  SharedDtor();
}

void GetRemovedBuildingsRequest::SharedDtor() {
}

void GetRemovedBuildingsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRemovedBuildingsRequest& GetRemovedBuildingsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRemovedBuildingsRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void GetRemovedBuildingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.GetRemovedBuildingsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  estate_id_ = 0u;
  _internal_metadata_.Clear();
}

const char* GetRemovedBuildingsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 estate_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          estate_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRemovedBuildingsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.GetRemovedBuildingsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 estate_id = 1;
  if (this->estate_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_estate_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.GetRemovedBuildingsRequest)
  return target;
}

size_t GetRemovedBuildingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.GetRemovedBuildingsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 estate_id = 1;
  if (this->estate_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_estate_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRemovedBuildingsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.GetRemovedBuildingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRemovedBuildingsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRemovedBuildingsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.GetRemovedBuildingsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.GetRemovedBuildingsRequest)
    MergeFrom(*source);
  }
}

void GetRemovedBuildingsRequest::MergeFrom(const GetRemovedBuildingsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.GetRemovedBuildingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.estate_id() != 0) {
    _internal_set_estate_id(from._internal_estate_id());
  }
}

void GetRemovedBuildingsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.GetRemovedBuildingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRemovedBuildingsRequest::CopyFrom(const GetRemovedBuildingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.GetRemovedBuildingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRemovedBuildingsRequest::IsInitialized() const {
  return true;
}

void GetRemovedBuildingsRequest::InternalSwap(GetRemovedBuildingsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(estate_id_, other->estate_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRemovedBuildingsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRemovedBuildingsResponse::InitAsDefaultInstance() {
}
class GetRemovedBuildingsResponse::_Internal {
 public:
};

GetRemovedBuildingsResponse::GetRemovedBuildingsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.GetRemovedBuildingsResponse)
}
GetRemovedBuildingsResponse::GetRemovedBuildingsResponse(const GetRemovedBuildingsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      removed_building_(from.removed_building_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.GetRemovedBuildingsResponse)
}

void GetRemovedBuildingsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRemovedBuildingsResponse_objects_2fobjects_2eproto.base);
}

GetRemovedBuildingsResponse::~GetRemovedBuildingsResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.GetRemovedBuildingsResponse)
  SharedDtor();
}

void GetRemovedBuildingsResponse::SharedDtor() {
}

void GetRemovedBuildingsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRemovedBuildingsResponse& GetRemovedBuildingsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRemovedBuildingsResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void GetRemovedBuildingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.GetRemovedBuildingsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  removed_building_.Clear();
  _internal_metadata_.Clear();
}

const char* GetRemovedBuildingsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .mruv.objects.RemovedBuilding removed_building = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_removed_building(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRemovedBuildingsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.GetRemovedBuildingsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mruv.objects.RemovedBuilding removed_building = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_removed_building_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_removed_building(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.GetRemovedBuildingsResponse)
  return target;
}

size_t GetRemovedBuildingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.GetRemovedBuildingsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mruv.objects.RemovedBuilding removed_building = 1;
  total_size += 1UL * this->_internal_removed_building_size();
  for (const auto& msg : this->removed_building_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRemovedBuildingsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.GetRemovedBuildingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRemovedBuildingsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRemovedBuildingsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.GetRemovedBuildingsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.GetRemovedBuildingsResponse)
    MergeFrom(*source);
  }
}

void GetRemovedBuildingsResponse::MergeFrom(const GetRemovedBuildingsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.GetRemovedBuildingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  removed_building_.MergeFrom(from.removed_building_);
}

void GetRemovedBuildingsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.GetRemovedBuildingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRemovedBuildingsResponse::CopyFrom(const GetRemovedBuildingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.GetRemovedBuildingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRemovedBuildingsResponse::IsInitialized() const {
  return true;
}

void GetRemovedBuildingsResponse::InternalSwap(GetRemovedBuildingsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  removed_building_.InternalSwap(&other->removed_building_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRemovedBuildingsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRemoveBuildingRequest::InitAsDefaultInstance() {
}
class DeleteRemoveBuildingRequest::_Internal {
 public:
};

DeleteRemoveBuildingRequest::DeleteRemoveBuildingRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.DeleteRemoveBuildingRequest)
}
DeleteRemoveBuildingRequest::DeleteRemoveBuildingRequest(const DeleteRemoveBuildingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.DeleteRemoveBuildingRequest)
}

void DeleteRemoveBuildingRequest::SharedCtor() {
  id_ = 0u;
}

DeleteRemoveBuildingRequest::~DeleteRemoveBuildingRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.DeleteRemoveBuildingRequest)
  SharedDtor();
}

void DeleteRemoveBuildingRequest::SharedDtor() {
}

void DeleteRemoveBuildingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRemoveBuildingRequest& DeleteRemoveBuildingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRemoveBuildingRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void DeleteRemoveBuildingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.DeleteRemoveBuildingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* DeleteRemoveBuildingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRemoveBuildingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.DeleteRemoveBuildingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.DeleteRemoveBuildingRequest)
  return target;
}

size_t DeleteRemoveBuildingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.DeleteRemoveBuildingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRemoveBuildingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.DeleteRemoveBuildingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRemoveBuildingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRemoveBuildingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.DeleteRemoveBuildingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.DeleteRemoveBuildingRequest)
    MergeFrom(*source);
  }
}

void DeleteRemoveBuildingRequest::MergeFrom(const DeleteRemoveBuildingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.DeleteRemoveBuildingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteRemoveBuildingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.DeleteRemoveBuildingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRemoveBuildingRequest::CopyFrom(const DeleteRemoveBuildingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.DeleteRemoveBuildingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRemoveBuildingRequest::IsInitialized() const {
  return true;
}

void DeleteRemoveBuildingRequest::InternalSwap(DeleteRemoveBuildingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRemoveBuildingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRemoveBuildingResponse::InitAsDefaultInstance() {
}
class DeleteRemoveBuildingResponse::_Internal {
 public:
};

DeleteRemoveBuildingResponse::DeleteRemoveBuildingResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.DeleteRemoveBuildingResponse)
}
DeleteRemoveBuildingResponse::DeleteRemoveBuildingResponse(const DeleteRemoveBuildingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.DeleteRemoveBuildingResponse)
}

void DeleteRemoveBuildingResponse::SharedCtor() {
}

DeleteRemoveBuildingResponse::~DeleteRemoveBuildingResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.DeleteRemoveBuildingResponse)
  SharedDtor();
}

void DeleteRemoveBuildingResponse::SharedDtor() {
}

void DeleteRemoveBuildingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRemoveBuildingResponse& DeleteRemoveBuildingResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRemoveBuildingResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void DeleteRemoveBuildingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.DeleteRemoveBuildingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* DeleteRemoveBuildingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRemoveBuildingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.DeleteRemoveBuildingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.DeleteRemoveBuildingResponse)
  return target;
}

size_t DeleteRemoveBuildingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.DeleteRemoveBuildingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRemoveBuildingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.DeleteRemoveBuildingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRemoveBuildingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRemoveBuildingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.DeleteRemoveBuildingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.DeleteRemoveBuildingResponse)
    MergeFrom(*source);
  }
}

void DeleteRemoveBuildingResponse::MergeFrom(const DeleteRemoveBuildingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.DeleteRemoveBuildingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteRemoveBuildingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.DeleteRemoveBuildingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRemoveBuildingResponse::CopyFrom(const DeleteRemoveBuildingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.DeleteRemoveBuildingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRemoveBuildingResponse::IsInitialized() const {
  return true;
}

void DeleteRemoveBuildingResponse::InternalSwap(DeleteRemoveBuildingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRemoveBuildingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FetchAllRequest::InitAsDefaultInstance() {
}
class FetchAllRequest::_Internal {
 public:
};

FetchAllRequest::FetchAllRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.FetchAllRequest)
}
FetchAllRequest::FetchAllRequest(const FetchAllRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.FetchAllRequest)
}

void FetchAllRequest::SharedCtor() {
}

FetchAllRequest::~FetchAllRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.FetchAllRequest)
  SharedDtor();
}

void FetchAllRequest::SharedDtor() {
}

void FetchAllRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FetchAllRequest& FetchAllRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FetchAllRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void FetchAllRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.FetchAllRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* FetchAllRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FetchAllRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.FetchAllRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.FetchAllRequest)
  return target;
}

size_t FetchAllRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.FetchAllRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FetchAllRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.FetchAllRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FetchAllRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FetchAllRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.FetchAllRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.FetchAllRequest)
    MergeFrom(*source);
  }
}

void FetchAllRequest::MergeFrom(const FetchAllRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.FetchAllRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FetchAllRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.FetchAllRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchAllRequest::CopyFrom(const FetchAllRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.FetchAllRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchAllRequest::IsInitialized() const {
  return true;
}

void FetchAllRequest::InternalSwap(FetchAllRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchAllRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FetchAllResponse::InitAsDefaultInstance() {
}
class FetchAllResponse::_Internal {
 public:
};

FetchAllResponse::FetchAllResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.FetchAllResponse)
}
FetchAllResponse::FetchAllResponse(const FetchAllResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      objects_(from.objects_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.FetchAllResponse)
}

void FetchAllResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FetchAllResponse_objects_2fobjects_2eproto.base);
}

FetchAllResponse::~FetchAllResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.FetchAllResponse)
  SharedDtor();
}

void FetchAllResponse::SharedDtor() {
}

void FetchAllResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FetchAllResponse& FetchAllResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FetchAllResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void FetchAllResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.FetchAllResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objects_.Clear();
  _internal_metadata_.Clear();
}

const char* FetchAllResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .mruv.objects.Object objects = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FetchAllResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.FetchAllResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mruv.objects.Object objects = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_objects_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_objects(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.FetchAllResponse)
  return target;
}

size_t FetchAllResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.FetchAllResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mruv.objects.Object objects = 1;
  total_size += 1UL * this->_internal_objects_size();
  for (const auto& msg : this->objects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FetchAllResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.FetchAllResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FetchAllResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FetchAllResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.FetchAllResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.FetchAllResponse)
    MergeFrom(*source);
  }
}

void FetchAllResponse::MergeFrom(const FetchAllResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.FetchAllResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objects_.MergeFrom(from.objects_);
}

void FetchAllResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.FetchAllResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchAllResponse::CopyFrom(const FetchAllResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.FetchAllResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchAllResponse::IsInitialized() const {
  return true;
}

void FetchAllResponse::InternalSwap(FetchAllResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  objects_.InternalSwap(&other->objects_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchAllResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace objects
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mruv::objects::Object_MaterialsEntry_DoNotUse* Arena::CreateMaybeMessage< ::mruv::objects::Object_MaterialsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::Object_MaterialsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::Object_MaterialTextsEntry_DoNotUse* Arena::CreateMaybeMessage< ::mruv::objects::Object_MaterialTextsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::Object_MaterialTextsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::Object* Arena::CreateMaybeMessage< ::mruv::objects::Object >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::Object >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::Material* Arena::CreateMaybeMessage< ::mruv::objects::Material >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::Material >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::MaterialText* Arena::CreateMaybeMessage< ::mruv::objects::MaterialText >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::MaterialText >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::RemovedBuilding* Arena::CreateMaybeMessage< ::mruv::objects::RemovedBuilding >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::RemovedBuilding >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::CreateObjectRequest* Arena::CreateMaybeMessage< ::mruv::objects::CreateObjectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::CreateObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::CreateObjectResponse* Arena::CreateMaybeMessage< ::mruv::objects::CreateObjectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::CreateObjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetObjectRequest* Arena::CreateMaybeMessage< ::mruv::objects::GetObjectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetObjectResponse* Arena::CreateMaybeMessage< ::mruv::objects::GetObjectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetObjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::UpdateObjectRequest* Arena::CreateMaybeMessage< ::mruv::objects::UpdateObjectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::UpdateObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::UpdateObjectResponse* Arena::CreateMaybeMessage< ::mruv::objects::UpdateObjectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::UpdateObjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::DeleteObjectRequest* Arena::CreateMaybeMessage< ::mruv::objects::DeleteObjectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::DeleteObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::DeleteObjectResponse* Arena::CreateMaybeMessage< ::mruv::objects::DeleteObjectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::DeleteObjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::AddObjectMaterialRequest* Arena::CreateMaybeMessage< ::mruv::objects::AddObjectMaterialRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::AddObjectMaterialRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::AddObjectMaterialResponse* Arena::CreateMaybeMessage< ::mruv::objects::AddObjectMaterialResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::AddObjectMaterialResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetObjectMaterialsRequest* Arena::CreateMaybeMessage< ::mruv::objects::GetObjectMaterialsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetObjectMaterialsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetObjectMaterialsResponse_MaterialsEntry_DoNotUse* Arena::CreateMaybeMessage< ::mruv::objects::GetObjectMaterialsResponse_MaterialsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetObjectMaterialsResponse_MaterialsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetObjectMaterialsResponse* Arena::CreateMaybeMessage< ::mruv::objects::GetObjectMaterialsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetObjectMaterialsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::DeleteObjectMaterialRequest* Arena::CreateMaybeMessage< ::mruv::objects::DeleteObjectMaterialRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::DeleteObjectMaterialRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::DeleteObjectMaterialResponse* Arena::CreateMaybeMessage< ::mruv::objects::DeleteObjectMaterialResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::DeleteObjectMaterialResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::AddObjectMaterialTextRequest* Arena::CreateMaybeMessage< ::mruv::objects::AddObjectMaterialTextRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::AddObjectMaterialTextRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::AddObjectMaterialTextResponse* Arena::CreateMaybeMessage< ::mruv::objects::AddObjectMaterialTextResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::AddObjectMaterialTextResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetObjectMaterialTextsRequest* Arena::CreateMaybeMessage< ::mruv::objects::GetObjectMaterialTextsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetObjectMaterialTextsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse* Arena::CreateMaybeMessage< ::mruv::objects::GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetObjectMaterialTextsResponse_MaterialTextsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetObjectMaterialTextsResponse* Arena::CreateMaybeMessage< ::mruv::objects::GetObjectMaterialTextsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetObjectMaterialTextsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::DeleteObjectMaterialTextRequest* Arena::CreateMaybeMessage< ::mruv::objects::DeleteObjectMaterialTextRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::DeleteObjectMaterialTextRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::DeleteObjectMaterialTextResponse* Arena::CreateMaybeMessage< ::mruv::objects::DeleteObjectMaterialTextResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::DeleteObjectMaterialTextResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::AddRemoveBuildingRequest* Arena::CreateMaybeMessage< ::mruv::objects::AddRemoveBuildingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::AddRemoveBuildingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::AddRemoveBuildingResponse* Arena::CreateMaybeMessage< ::mruv::objects::AddRemoveBuildingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::AddRemoveBuildingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetRemovedBuildingsRequest* Arena::CreateMaybeMessage< ::mruv::objects::GetRemovedBuildingsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetRemovedBuildingsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetRemovedBuildingsResponse* Arena::CreateMaybeMessage< ::mruv::objects::GetRemovedBuildingsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetRemovedBuildingsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::DeleteRemoveBuildingRequest* Arena::CreateMaybeMessage< ::mruv::objects::DeleteRemoveBuildingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::DeleteRemoveBuildingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::DeleteRemoveBuildingResponse* Arena::CreateMaybeMessage< ::mruv::objects::DeleteRemoveBuildingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::DeleteRemoveBuildingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::FetchAllRequest* Arena::CreateMaybeMessage< ::mruv::objects::FetchAllRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::FetchAllRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::FetchAllResponse* Arena::CreateMaybeMessage< ::mruv::objects::FetchAllResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::FetchAllResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
