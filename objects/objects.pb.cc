// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: objects/objects.proto

#include "objects/objects.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_objects_2fobjects_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Object_objects_2fobjects_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_objects_2fobjects_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectModel_objects_2fobjects_2eproto;
namespace mruv {
namespace objects {
class ObjectModelDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectModel> _instance;
} _ObjectModel_default_instance_;
class ObjectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Object> _instance;
} _Object_default_instance_;
class CreateObjectModelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateObjectModelRequest> _instance;
} _CreateObjectModelRequest_default_instance_;
class CreateObjectModelResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateObjectModelResponse> _instance;
} _CreateObjectModelResponse_default_instance_;
class GetObjectModelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectModelRequest> _instance;
} _GetObjectModelRequest_default_instance_;
class GetObjectModelResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectModelResponse> _instance;
} _GetObjectModelResponse_default_instance_;
class UpdateObjectModelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateObjectModelRequest> _instance;
} _UpdateObjectModelRequest_default_instance_;
class UpdateObjectModelResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateObjectModelResponse> _instance;
} _UpdateObjectModelResponse_default_instance_;
class DeleteObjectModelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteObjectModelRequest> _instance;
} _DeleteObjectModelRequest_default_instance_;
class DeleteObjectModelResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteObjectModelResponse> _instance;
} _DeleteObjectModelResponse_default_instance_;
class CreateObjectRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateObjectRequest> _instance;
} _CreateObjectRequest_default_instance_;
class CreateObjectResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateObjectResponse> _instance;
} _CreateObjectResponse_default_instance_;
class GetObjectRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectRequest> _instance;
} _GetObjectRequest_default_instance_;
class GetObjectResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectResponse> _instance;
} _GetObjectResponse_default_instance_;
class UpdateObjectRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateObjectRequest> _instance;
} _UpdateObjectRequest_default_instance_;
class UpdateObjectResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateObjectResponse> _instance;
} _UpdateObjectResponse_default_instance_;
class DeleteObjectRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteObjectRequest> _instance;
} _DeleteObjectRequest_default_instance_;
class DeleteObjectResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteObjectResponse> _instance;
} _DeleteObjectResponse_default_instance_;
}  // namespace objects
}  // namespace mruv
static void InitDefaultsscc_info_CreateObjectModelRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_CreateObjectModelRequest_default_instance_;
    new (ptr) ::mruv::objects::CreateObjectModelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::CreateObjectModelRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateObjectModelRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateObjectModelRequest_objects_2fobjects_2eproto}, {
      &scc_info_ObjectModel_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_CreateObjectModelResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_CreateObjectModelResponse_default_instance_;
    new (ptr) ::mruv::objects::CreateObjectModelResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::CreateObjectModelResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateObjectModelResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateObjectModelResponse_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_CreateObjectRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_CreateObjectRequest_default_instance_;
    new (ptr) ::mruv::objects::CreateObjectRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::CreateObjectRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateObjectRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateObjectRequest_objects_2fobjects_2eproto}, {
      &scc_info_Object_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_CreateObjectResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_CreateObjectResponse_default_instance_;
    new (ptr) ::mruv::objects::CreateObjectResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::CreateObjectResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateObjectResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateObjectResponse_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_DeleteObjectModelRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_DeleteObjectModelRequest_default_instance_;
    new (ptr) ::mruv::objects::DeleteObjectModelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::DeleteObjectModelRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteObjectModelRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteObjectModelRequest_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_DeleteObjectModelResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_DeleteObjectModelResponse_default_instance_;
    new (ptr) ::mruv::objects::DeleteObjectModelResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::DeleteObjectModelResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteObjectModelResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteObjectModelResponse_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_DeleteObjectRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_DeleteObjectRequest_default_instance_;
    new (ptr) ::mruv::objects::DeleteObjectRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::DeleteObjectRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteObjectRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteObjectRequest_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_DeleteObjectResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_DeleteObjectResponse_default_instance_;
    new (ptr) ::mruv::objects::DeleteObjectResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::DeleteObjectResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteObjectResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteObjectResponse_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_GetObjectModelRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetObjectModelRequest_default_instance_;
    new (ptr) ::mruv::objects::GetObjectModelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::GetObjectModelRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetObjectModelRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetObjectModelRequest_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_GetObjectModelResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetObjectModelResponse_default_instance_;
    new (ptr) ::mruv::objects::GetObjectModelResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::GetObjectModelResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetObjectModelResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetObjectModelResponse_objects_2fobjects_2eproto}, {
      &scc_info_ObjectModel_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_GetObjectRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetObjectRequest_default_instance_;
    new (ptr) ::mruv::objects::GetObjectRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::GetObjectRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetObjectRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetObjectRequest_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_GetObjectResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetObjectResponse_default_instance_;
    new (ptr) ::mruv::objects::GetObjectResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::GetObjectResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetObjectResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetObjectResponse_objects_2fobjects_2eproto}, {
      &scc_info_Object_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_Object_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_Object_default_instance_;
    new (ptr) ::mruv::objects::Object();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::Object::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Object_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Object_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_ObjectModel_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_ObjectModel_default_instance_;
    new (ptr) ::mruv::objects::ObjectModel();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::ObjectModel::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectModel_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjectModel_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_UpdateObjectModelRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_UpdateObjectModelRequest_default_instance_;
    new (ptr) ::mruv::objects::UpdateObjectModelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::UpdateObjectModelRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateObjectModelRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateObjectModelRequest_objects_2fobjects_2eproto}, {
      &scc_info_ObjectModel_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_UpdateObjectModelResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_UpdateObjectModelResponse_default_instance_;
    new (ptr) ::mruv::objects::UpdateObjectModelResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::UpdateObjectModelResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateObjectModelResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateObjectModelResponse_objects_2fobjects_2eproto}, {}};

static void InitDefaultsscc_info_UpdateObjectRequest_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_UpdateObjectRequest_default_instance_;
    new (ptr) ::mruv::objects::UpdateObjectRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::UpdateObjectRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateObjectRequest_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateObjectRequest_objects_2fobjects_2eproto}, {
      &scc_info_Object_objects_2fobjects_2eproto.base,}};

static void InitDefaultsscc_info_UpdateObjectResponse_objects_2fobjects_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_UpdateObjectResponse_default_instance_;
    new (ptr) ::mruv::objects::UpdateObjectResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::UpdateObjectResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateObjectResponse_objects_2fobjects_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateObjectResponse_objects_2fobjects_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_objects_2fobjects_2eproto[18];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_objects_2fobjects_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_objects_2fobjects_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_objects_2fobjects_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, model_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, model_name_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, name_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, category_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, product_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, length_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, width_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, height_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, size_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, tags_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, has_collision_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, breaks_on_hit_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, has_animation_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, visible_by_time_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, visible_from_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, visible_to_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, model_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, estate_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, x_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, y_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, z_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, rx_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, ry_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, rz_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, world_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, interior_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, player_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, area_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, stream_distance_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, draw_distance_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::Object, priority_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectModelRequest, object_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectModelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectModelResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectModelRequest, model_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectModelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectModelResponse, object_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::UpdateObjectModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::UpdateObjectModelRequest, object_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::UpdateObjectModelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectModelRequest, model_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectModelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectRequest, object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectResponse, object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::UpdateObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::UpdateObjectRequest, id_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::UpdateObjectRequest, object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::UpdateObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mruv::objects::ObjectModel)},
  { 21, -1, sizeof(::mruv::objects::Object)},
  { 41, -1, sizeof(::mruv::objects::CreateObjectModelRequest)},
  { 47, -1, sizeof(::mruv::objects::CreateObjectModelResponse)},
  { 53, -1, sizeof(::mruv::objects::GetObjectModelRequest)},
  { 59, -1, sizeof(::mruv::objects::GetObjectModelResponse)},
  { 65, -1, sizeof(::mruv::objects::UpdateObjectModelRequest)},
  { 71, -1, sizeof(::mruv::objects::UpdateObjectModelResponse)},
  { 76, -1, sizeof(::mruv::objects::DeleteObjectModelRequest)},
  { 82, -1, sizeof(::mruv::objects::DeleteObjectModelResponse)},
  { 87, -1, sizeof(::mruv::objects::CreateObjectRequest)},
  { 93, -1, sizeof(::mruv::objects::CreateObjectResponse)},
  { 99, -1, sizeof(::mruv::objects::GetObjectRequest)},
  { 105, -1, sizeof(::mruv::objects::GetObjectResponse)},
  { 111, -1, sizeof(::mruv::objects::UpdateObjectRequest)},
  { 118, -1, sizeof(::mruv::objects::UpdateObjectResponse)},
  { 123, -1, sizeof(::mruv::objects::DeleteObjectRequest)},
  { 129, -1, sizeof(::mruv::objects::DeleteObjectResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_ObjectModel_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_Object_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_CreateObjectModelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_CreateObjectModelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetObjectModelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetObjectModelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_UpdateObjectModelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_UpdateObjectModelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_DeleteObjectModelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_DeleteObjectModelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_CreateObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_CreateObjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetObjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_UpdateObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_UpdateObjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_DeleteObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_DeleteObjectResponse_default_instance_),
};

const char descriptor_table_protodef_objects_2fobjects_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025objects/objects.proto\022\014mruv.objects\032\034g"
  "oogle/api/annotations.proto\"\267\002\n\013ObjectMo"
  "del\022\r\n\005model\030\001 \001(\r\022\022\n\nmodel_name\030\002 \001(\t\022\014"
  "\n\004name\030\003 \001(\t\022\020\n\010category\030\r \001(\t\022\022\n\nproduc"
  "t_id\030\004 \001(\r\022\016\n\006length\030\005 \001(\001\022\r\n\005width\030\006 \001("
  "\001\022\016\n\006height\030\007 \001(\001\022\014\n\004size\030\010 \001(\001\022\014\n\004tags\030"
  "\t \003(\t\022\025\n\rhas_collision\030\n \001(\010\022\025\n\rbreaks_o"
  "n_hit\030\013 \001(\010\022\025\n\rhas_animation\030\014 \001(\010\022\027\n\017vi"
  "sible_by_time\030\020 \001(\010\022\024\n\014visible_from\030\021 \001("
  "\r\022\022\n\nvisible_to\030\022 \001(\r\"\374\001\n\006Object\022\r\n\005mode"
  "l\030\001 \001(\r\022\021\n\testate_id\030\002 \001(\r\022\t\n\001x\030\003 \001(\002\022\t\n"
  "\001y\030\004 \001(\002\022\t\n\001z\030\005 \001(\002\022\n\n\002rx\030\006 \001(\002\022\n\n\002ry\030\007 "
  "\001(\002\022\n\n\002rz\030\010 \001(\002\022\020\n\010world_id\030\t \001(\005\022\023\n\013int"
  "erior_id\030\n \001(\005\022\021\n\tplayer_id\030\013 \001(\005\022\017\n\007are"
  "a_id\030\014 \001(\005\022\027\n\017stream_distance\030\r \001(\002\022\025\n\rd"
  "raw_distance\030\016 \001(\002\022\020\n\010priority\030\017 \001(\005\"J\n\030"
  "CreateObjectModelRequest\022.\n\013object_type\030"
  "\001 \001(\0132\031.mruv.objects.ObjectModel\"\'\n\031Crea"
  "teObjectModelResponse\022\n\n\002id\030\001 \001(\r\"&\n\025Get"
  "ObjectModelRequest\022\r\n\005model\030\001 \001(\r\"H\n\026Get"
  "ObjectModelResponse\022.\n\013object_type\030\001 \001(\013"
  "2\031.mruv.objects.ObjectModel\"J\n\030UpdateObj"
  "ectModelRequest\022.\n\013object_type\030\001 \001(\0132\031.m"
  "ruv.objects.ObjectModel\"\033\n\031UpdateObjectM"
  "odelResponse\")\n\030DeleteObjectModelRequest"
  "\022\r\n\005model\030\001 \001(\r\"\033\n\031DeleteObjectModelResp"
  "onse\";\n\023CreateObjectRequest\022$\n\006object\030\001 "
  "\001(\0132\024.mruv.objects.Object\"\"\n\024CreateObjec"
  "tResponse\022\n\n\002id\030\001 \001(\r\"\036\n\020GetObjectReques"
  "t\022\n\n\002id\030\001 \001(\r\"9\n\021GetObjectResponse\022$\n\006ob"
  "ject\030\001 \001(\0132\024.mruv.objects.Object\"G\n\023Upda"
  "teObjectRequest\022\n\n\002id\030\001 \001(\r\022$\n\006object\030\002 "
  "\001(\0132\024.mruv.objects.Object\"\026\n\024UpdateObjec"
  "tResponse\"!\n\023DeleteObjectRequest\022\n\n\002id\030\001"
  " \001(\r\"\026\n\024DeleteObjectResponse2\341\007\n\022MruVObj"
  "ectsService\022}\n\021CreateObjectModel\022&.mruv."
  "objects.CreateObjectModelRequest\032\'.mruv."
  "objects.CreateObjectModelResponse\"\027\202\323\344\223\002"
  "\021\"\017/v1/objectTypes\022|\n\016GetObjectModel\022#.m"
  "ruv.objects.GetObjectModelRequest\032$.mruv"
  ".objects.GetObjectModelResponse\"\037\202\323\344\223\002\031\022"
  "\027/v1/objectTypes/{model}\022\221\001\n\021UpdateObjec"
  "tModel\022&.mruv.objects.UpdateObjectModelR"
  "equest\032\'.mruv.objects.UpdateObjectModelR"
  "esponse\"+\202\323\344\223\002%2#/v1/objectTypes/{object"
  "_type.model}\022\205\001\n\021DeleteObjectModel\022&.mru"
  "v.objects.DeleteObjectModelRequest\032\'.mru"
  "v.objects.DeleteObjectModelResponse\"\037\202\323\344"
  "\223\002\031*\027/v1/objectTypes/{model}\022i\n\014CreateOb"
  "ject\022!.mruv.objects.CreateObjectRequest\032"
  "\".mruv.objects.CreateObjectResponse\"\022\202\323\344"
  "\223\002\014\"\n/v1/object\022e\n\tGetObject\022\036.mruv.obje"
  "cts.GetObjectRequest\032\037.mruv.objects.GetO"
  "bjectResponse\"\027\202\323\344\223\002\021\022\017/v1/object/{id}\022o"
  "\n\014UpdateObject\022!.mruv.objects.UpdateObje"
  "ctRequest\032\".mruv.objects.UpdateObjectRes"
  "ponse\"\030\202\323\344\223\002\0222\020/v1/objects/{id}\022o\n\014Delet"
  "eObject\022!.mruv.objects.DeleteObjectReque"
  "st\032\".mruv.objects.DeleteObjectResponse\"\030"
  "\202\323\344\223\002\022*\020/v1/objects/{id}B\'Z%github.com/M"
  "ruV-RP/mruv-pb-go/objectsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_objects_2fobjects_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_objects_2fobjects_2eproto_sccs[18] = {
  &scc_info_CreateObjectModelRequest_objects_2fobjects_2eproto.base,
  &scc_info_CreateObjectModelResponse_objects_2fobjects_2eproto.base,
  &scc_info_CreateObjectRequest_objects_2fobjects_2eproto.base,
  &scc_info_CreateObjectResponse_objects_2fobjects_2eproto.base,
  &scc_info_DeleteObjectModelRequest_objects_2fobjects_2eproto.base,
  &scc_info_DeleteObjectModelResponse_objects_2fobjects_2eproto.base,
  &scc_info_DeleteObjectRequest_objects_2fobjects_2eproto.base,
  &scc_info_DeleteObjectResponse_objects_2fobjects_2eproto.base,
  &scc_info_GetObjectModelRequest_objects_2fobjects_2eproto.base,
  &scc_info_GetObjectModelResponse_objects_2fobjects_2eproto.base,
  &scc_info_GetObjectRequest_objects_2fobjects_2eproto.base,
  &scc_info_GetObjectResponse_objects_2fobjects_2eproto.base,
  &scc_info_Object_objects_2fobjects_2eproto.base,
  &scc_info_ObjectModel_objects_2fobjects_2eproto.base,
  &scc_info_UpdateObjectModelRequest_objects_2fobjects_2eproto.base,
  &scc_info_UpdateObjectModelResponse_objects_2fobjects_2eproto.base,
  &scc_info_UpdateObjectRequest_objects_2fobjects_2eproto.base,
  &scc_info_UpdateObjectResponse_objects_2fobjects_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_objects_2fobjects_2eproto_once;
static bool descriptor_table_objects_2fobjects_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_objects_2fobjects_2eproto = {
  &descriptor_table_objects_2fobjects_2eproto_initialized, descriptor_table_protodef_objects_2fobjects_2eproto, "objects/objects.proto", 2433,
  &descriptor_table_objects_2fobjects_2eproto_once, descriptor_table_objects_2fobjects_2eproto_sccs, descriptor_table_objects_2fobjects_2eproto_deps, 18, 1,
  schemas, file_default_instances, TableStruct_objects_2fobjects_2eproto::offsets,
  file_level_metadata_objects_2fobjects_2eproto, 18, file_level_enum_descriptors_objects_2fobjects_2eproto, file_level_service_descriptors_objects_2fobjects_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_objects_2fobjects_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_objects_2fobjects_2eproto), true);
namespace mruv {
namespace objects {

// ===================================================================

void ObjectModel::InitAsDefaultInstance() {
}
class ObjectModel::_Internal {
 public:
};

ObjectModel::ObjectModel()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.ObjectModel)
}
ObjectModel::ObjectModel(const ObjectModel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_name().empty()) {
    model_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.model_name_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_category().empty()) {
    category_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  ::memcpy(&model_, &from.model_,
    static_cast<size_t>(reinterpret_cast<char*>(&visible_to_) -
    reinterpret_cast<char*>(&model_)) + sizeof(visible_to_));
  // @@protoc_insertion_point(copy_constructor:mruv.objects.ObjectModel)
}

void ObjectModel::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectModel_objects_2fobjects_2eproto.base);
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visible_to_) -
      reinterpret_cast<char*>(&model_)) + sizeof(visible_to_));
}

ObjectModel::~ObjectModel() {
  // @@protoc_insertion_point(destructor:mruv.objects.ObjectModel)
  SharedDtor();
}

void ObjectModel::SharedDtor() {
  model_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ObjectModel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectModel& ObjectModel::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectModel_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void ObjectModel::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.ObjectModel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  model_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visible_to_) -
      reinterpret_cast<char*>(&model_)) + sizeof(visible_to_));
  _internal_metadata_.Clear();
}

const char* ObjectModel::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 model = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          model_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string model_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.objects.ObjectModel.model_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.objects.ObjectModel.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 product_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          product_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double length = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          length_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double width = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double height = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double size = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated string tags = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tags();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.objects.ObjectModel.tags"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // bool has_collision = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          has_collision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool breaks_on_hit = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          breaks_on_hit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool has_animation = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          has_animation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string category = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_category();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.objects.ObjectModel.category"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool visible_by_time = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          visible_by_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 visible_from = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          visible_from_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 visible_to = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          visible_to_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectModel::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.ObjectModel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 model = 1;
  if (this->model() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_model(), target);
  }

  // string model_name = 2;
  if (this->model_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.objects.ObjectModel.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.objects.ObjectModel.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // uint32 product_id = 4;
  if (this->product_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_product_id(), target);
  }

  // double length = 5;
  if (!(this->length() <= 0 && this->length() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_length(), target);
  }

  // double width = 6;
  if (!(this->width() <= 0 && this->width() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_width(), target);
  }

  // double height = 7;
  if (!(this->height() <= 0 && this->height() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_height(), target);
  }

  // double size = 8;
  if (!(this->size() <= 0 && this->size() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_size(), target);
  }

  // repeated string tags = 9;
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.objects.ObjectModel.tags");
    target = stream->WriteString(9, s, target);
  }

  // bool has_collision = 10;
  if (this->has_collision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_has_collision(), target);
  }

  // bool breaks_on_hit = 11;
  if (this->breaks_on_hit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_breaks_on_hit(), target);
  }

  // bool has_animation = 12;
  if (this->has_animation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_has_animation(), target);
  }

  // string category = 13;
  if (this->category().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_category().data(), static_cast<int>(this->_internal_category().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.objects.ObjectModel.category");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_category(), target);
  }

  // bool visible_by_time = 16;
  if (this->visible_by_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_visible_by_time(), target);
  }

  // uint32 visible_from = 17;
  if (this->visible_from() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_visible_from(), target);
  }

  // uint32 visible_to = 18;
  if (this->visible_to() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(18, this->_internal_visible_to(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.ObjectModel)
  return target;
}

size_t ObjectModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.ObjectModel)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(tags_.size());
  for (int i = 0, n = tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      tags_.Get(i));
  }

  // string model_name = 2;
  if (this->model_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string category = 13;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_category());
  }

  // uint32 model = 1;
  if (this->model() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_model());
  }

  // uint32 product_id = 4;
  if (this->product_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_product_id());
  }

  // double length = 5;
  if (!(this->length() <= 0 && this->length() >= 0)) {
    total_size += 1 + 8;
  }

  // double width = 6;
  if (!(this->width() <= 0 && this->width() >= 0)) {
    total_size += 1 + 8;
  }

  // double height = 7;
  if (!(this->height() <= 0 && this->height() >= 0)) {
    total_size += 1 + 8;
  }

  // double size = 8;
  if (!(this->size() <= 0 && this->size() >= 0)) {
    total_size += 1 + 8;
  }

  // bool has_collision = 10;
  if (this->has_collision() != 0) {
    total_size += 1 + 1;
  }

  // bool breaks_on_hit = 11;
  if (this->breaks_on_hit() != 0) {
    total_size += 1 + 1;
  }

  // bool has_animation = 12;
  if (this->has_animation() != 0) {
    total_size += 1 + 1;
  }

  // bool visible_by_time = 16;
  if (this->visible_by_time() != 0) {
    total_size += 2 + 1;
  }

  // uint32 visible_from = 17;
  if (this->visible_from() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_visible_from());
  }

  // uint32 visible_to = 18;
  if (this->visible_to() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_visible_to());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectModel::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.ObjectModel)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectModel* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectModel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.ObjectModel)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.ObjectModel)
    MergeFrom(*source);
  }
}

void ObjectModel::MergeFrom(const ObjectModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.ObjectModel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  if (from.model_name().size() > 0) {

    model_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.model_name_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.category().size() > 0) {

    category_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from.model() != 0) {
    _internal_set_model(from._internal_model());
  }
  if (from.product_id() != 0) {
    _internal_set_product_id(from._internal_product_id());
  }
  if (!(from.length() <= 0 && from.length() >= 0)) {
    _internal_set_length(from._internal_length());
  }
  if (!(from.width() <= 0 && from.width() >= 0)) {
    _internal_set_width(from._internal_width());
  }
  if (!(from.height() <= 0 && from.height() >= 0)) {
    _internal_set_height(from._internal_height());
  }
  if (!(from.size() <= 0 && from.size() >= 0)) {
    _internal_set_size(from._internal_size());
  }
  if (from.has_collision() != 0) {
    _internal_set_has_collision(from._internal_has_collision());
  }
  if (from.breaks_on_hit() != 0) {
    _internal_set_breaks_on_hit(from._internal_breaks_on_hit());
  }
  if (from.has_animation() != 0) {
    _internal_set_has_animation(from._internal_has_animation());
  }
  if (from.visible_by_time() != 0) {
    _internal_set_visible_by_time(from._internal_visible_by_time());
  }
  if (from.visible_from() != 0) {
    _internal_set_visible_from(from._internal_visible_from());
  }
  if (from.visible_to() != 0) {
    _internal_set_visible_to(from._internal_visible_to());
  }
}

void ObjectModel::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.ObjectModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectModel::CopyFrom(const ObjectModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.ObjectModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectModel::IsInitialized() const {
  return true;
}

void ObjectModel::InternalSwap(ObjectModel* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tags_.InternalSwap(&other->tags_);
  model_name_.Swap(&other->model_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  category_.Swap(&other->category_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(model_, other->model_);
  swap(product_id_, other->product_id_);
  swap(length_, other->length_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(size_, other->size_);
  swap(has_collision_, other->has_collision_);
  swap(breaks_on_hit_, other->breaks_on_hit_);
  swap(has_animation_, other->has_animation_);
  swap(visible_by_time_, other->visible_by_time_);
  swap(visible_from_, other->visible_from_);
  swap(visible_to_, other->visible_to_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectModel::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Object::InitAsDefaultInstance() {
}
class Object::_Internal {
 public:
};

Object::Object()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.Object)
}
Object::Object(const Object& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&model_, &from.model_,
    static_cast<size_t>(reinterpret_cast<char*>(&priority_) -
    reinterpret_cast<char*>(&model_)) + sizeof(priority_));
  // @@protoc_insertion_point(copy_constructor:mruv.objects.Object)
}

void Object::SharedCtor() {
  ::memset(&model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&priority_) -
      reinterpret_cast<char*>(&model_)) + sizeof(priority_));
}

Object::~Object() {
  // @@protoc_insertion_point(destructor:mruv.objects.Object)
  SharedDtor();
}

void Object::SharedDtor() {
}

void Object::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Object& Object::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Object_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void Object::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.Object)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&priority_) -
      reinterpret_cast<char*>(&model_)) + sizeof(priority_));
  _internal_metadata_.Clear();
}

const char* Object::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 model = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          model_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 estate_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          estate_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float x = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float z = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float rx = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          rx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float ry = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          ry_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float rz = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          rz_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 world_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          world_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 interior_id = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          interior_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 player_id = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 area_id = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          area_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float stream_distance = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 109)) {
          stream_distance_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float draw_distance = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 117)) {
          draw_distance_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 priority = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Object::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.Object)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 model = 1;
  if (this->model() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_model(), target);
  }

  // uint32 estate_id = 2;
  if (this->estate_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_estate_id(), target);
  }

  // float x = 3;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_x(), target);
  }

  // float y = 4;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_y(), target);
  }

  // float z = 5;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_z(), target);
  }

  // float rx = 6;
  if (!(this->rx() <= 0 && this->rx() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_rx(), target);
  }

  // float ry = 7;
  if (!(this->ry() <= 0 && this->ry() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_ry(), target);
  }

  // float rz = 8;
  if (!(this->rz() <= 0 && this->rz() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->_internal_rz(), target);
  }

  // int32 world_id = 9;
  if (this->world_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_world_id(), target);
  }

  // int32 interior_id = 10;
  if (this->interior_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_interior_id(), target);
  }

  // int32 player_id = 11;
  if (this->player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_player_id(), target);
  }

  // int32 area_id = 12;
  if (this->area_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_area_id(), target);
  }

  // float stream_distance = 13;
  if (!(this->stream_distance() <= 0 && this->stream_distance() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(13, this->_internal_stream_distance(), target);
  }

  // float draw_distance = 14;
  if (!(this->draw_distance() <= 0 && this->draw_distance() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(14, this->_internal_draw_distance(), target);
  }

  // int32 priority = 15;
  if (this->priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(15, this->_internal_priority(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.Object)
  return target;
}

size_t Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.Object)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 model = 1;
  if (this->model() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_model());
  }

  // uint32 estate_id = 2;
  if (this->estate_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_estate_id());
  }

  // float x = 3;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 4;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float z = 5;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  // float rx = 6;
  if (!(this->rx() <= 0 && this->rx() >= 0)) {
    total_size += 1 + 4;
  }

  // float ry = 7;
  if (!(this->ry() <= 0 && this->ry() >= 0)) {
    total_size += 1 + 4;
  }

  // float rz = 8;
  if (!(this->rz() <= 0 && this->rz() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 world_id = 9;
  if (this->world_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_world_id());
  }

  // int32 interior_id = 10;
  if (this->interior_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_interior_id());
  }

  // int32 player_id = 11;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_player_id());
  }

  // int32 area_id = 12;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_area_id());
  }

  // float stream_distance = 13;
  if (!(this->stream_distance() <= 0 && this->stream_distance() >= 0)) {
    total_size += 1 + 4;
  }

  // float draw_distance = 14;
  if (!(this->draw_distance() <= 0 && this->draw_distance() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 priority = 15;
  if (this->priority() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_priority());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Object::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.Object)
  GOOGLE_DCHECK_NE(&from, this);
  const Object* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Object>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.Object)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.Object)
    MergeFrom(*source);
  }
}

void Object::MergeFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.Object)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.model() != 0) {
    _internal_set_model(from._internal_model());
  }
  if (from.estate_id() != 0) {
    _internal_set_estate_id(from._internal_estate_id());
  }
  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
  if (!(from.rx() <= 0 && from.rx() >= 0)) {
    _internal_set_rx(from._internal_rx());
  }
  if (!(from.ry() <= 0 && from.ry() >= 0)) {
    _internal_set_ry(from._internal_ry());
  }
  if (!(from.rz() <= 0 && from.rz() >= 0)) {
    _internal_set_rz(from._internal_rz());
  }
  if (from.world_id() != 0) {
    _internal_set_world_id(from._internal_world_id());
  }
  if (from.interior_id() != 0) {
    _internal_set_interior_id(from._internal_interior_id());
  }
  if (from.player_id() != 0) {
    _internal_set_player_id(from._internal_player_id());
  }
  if (from.area_id() != 0) {
    _internal_set_area_id(from._internal_area_id());
  }
  if (!(from.stream_distance() <= 0 && from.stream_distance() >= 0)) {
    _internal_set_stream_distance(from._internal_stream_distance());
  }
  if (!(from.draw_distance() <= 0 && from.draw_distance() >= 0)) {
    _internal_set_draw_distance(from._internal_draw_distance());
  }
  if (from.priority() != 0) {
    _internal_set_priority(from._internal_priority());
  }
}

void Object::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Object::CopyFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Object::IsInitialized() const {
  return true;
}

void Object::InternalSwap(Object* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(model_, other->model_);
  swap(estate_id_, other->estate_id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(rx_, other->rx_);
  swap(ry_, other->ry_);
  swap(rz_, other->rz_);
  swap(world_id_, other->world_id_);
  swap(interior_id_, other->interior_id_);
  swap(player_id_, other->player_id_);
  swap(area_id_, other->area_id_);
  swap(stream_distance_, other->stream_distance_);
  swap(draw_distance_, other->draw_distance_);
  swap(priority_, other->priority_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Object::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateObjectModelRequest::InitAsDefaultInstance() {
  ::mruv::objects::_CreateObjectModelRequest_default_instance_._instance.get_mutable()->object_type_ = const_cast< ::mruv::objects::ObjectModel*>(
      ::mruv::objects::ObjectModel::internal_default_instance());
}
class CreateObjectModelRequest::_Internal {
 public:
  static const ::mruv::objects::ObjectModel& object_type(const CreateObjectModelRequest* msg);
};

const ::mruv::objects::ObjectModel&
CreateObjectModelRequest::_Internal::object_type(const CreateObjectModelRequest* msg) {
  return *msg->object_type_;
}
CreateObjectModelRequest::CreateObjectModelRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.CreateObjectModelRequest)
}
CreateObjectModelRequest::CreateObjectModelRequest(const CreateObjectModelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_object_type()) {
    object_type_ = new ::mruv::objects::ObjectModel(*from.object_type_);
  } else {
    object_type_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.objects.CreateObjectModelRequest)
}

void CreateObjectModelRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateObjectModelRequest_objects_2fobjects_2eproto.base);
  object_type_ = nullptr;
}

CreateObjectModelRequest::~CreateObjectModelRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.CreateObjectModelRequest)
  SharedDtor();
}

void CreateObjectModelRequest::SharedDtor() {
  if (this != internal_default_instance()) delete object_type_;
}

void CreateObjectModelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateObjectModelRequest& CreateObjectModelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateObjectModelRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void CreateObjectModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.CreateObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && object_type_ != nullptr) {
    delete object_type_;
  }
  object_type_ = nullptr;
  _internal_metadata_.Clear();
}

const char* CreateObjectModelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.objects.ObjectModel object_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_object_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateObjectModelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.CreateObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.objects.ObjectModel object_type = 1;
  if (this->has_object_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::object_type(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.CreateObjectModelRequest)
  return target;
}

size_t CreateObjectModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.CreateObjectModelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.ObjectModel object_type = 1;
  if (this->has_object_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_type_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateObjectModelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.CreateObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateObjectModelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateObjectModelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.CreateObjectModelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.CreateObjectModelRequest)
    MergeFrom(*source);
  }
}

void CreateObjectModelRequest::MergeFrom(const CreateObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.CreateObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object_type()) {
    _internal_mutable_object_type()->::mruv::objects::ObjectModel::MergeFrom(from._internal_object_type());
  }
}

void CreateObjectModelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.CreateObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateObjectModelRequest::CopyFrom(const CreateObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.CreateObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateObjectModelRequest::IsInitialized() const {
  return true;
}

void CreateObjectModelRequest::InternalSwap(CreateObjectModelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_type_, other->object_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateObjectModelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateObjectModelResponse::InitAsDefaultInstance() {
}
class CreateObjectModelResponse::_Internal {
 public:
};

CreateObjectModelResponse::CreateObjectModelResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.CreateObjectModelResponse)
}
CreateObjectModelResponse::CreateObjectModelResponse(const CreateObjectModelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.CreateObjectModelResponse)
}

void CreateObjectModelResponse::SharedCtor() {
  id_ = 0u;
}

CreateObjectModelResponse::~CreateObjectModelResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.CreateObjectModelResponse)
  SharedDtor();
}

void CreateObjectModelResponse::SharedDtor() {
}

void CreateObjectModelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateObjectModelResponse& CreateObjectModelResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateObjectModelResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void CreateObjectModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.CreateObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* CreateObjectModelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateObjectModelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.CreateObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.CreateObjectModelResponse)
  return target;
}

size_t CreateObjectModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.CreateObjectModelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateObjectModelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.CreateObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateObjectModelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateObjectModelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.CreateObjectModelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.CreateObjectModelResponse)
    MergeFrom(*source);
  }
}

void CreateObjectModelResponse::MergeFrom(const CreateObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.CreateObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void CreateObjectModelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.CreateObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateObjectModelResponse::CopyFrom(const CreateObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.CreateObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateObjectModelResponse::IsInitialized() const {
  return true;
}

void CreateObjectModelResponse::InternalSwap(CreateObjectModelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateObjectModelResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetObjectModelRequest::InitAsDefaultInstance() {
}
class GetObjectModelRequest::_Internal {
 public:
};

GetObjectModelRequest::GetObjectModelRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.GetObjectModelRequest)
}
GetObjectModelRequest::GetObjectModelRequest(const GetObjectModelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_ = from.model_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.GetObjectModelRequest)
}

void GetObjectModelRequest::SharedCtor() {
  model_ = 0u;
}

GetObjectModelRequest::~GetObjectModelRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.GetObjectModelRequest)
  SharedDtor();
}

void GetObjectModelRequest::SharedDtor() {
}

void GetObjectModelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectModelRequest& GetObjectModelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectModelRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void GetObjectModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.GetObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_ = 0u;
  _internal_metadata_.Clear();
}

const char* GetObjectModelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 model = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          model_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectModelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.GetObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 model = 1;
  if (this->model() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_model(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.GetObjectModelRequest)
  return target;
}

size_t GetObjectModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.GetObjectModelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 model = 1;
  if (this->model() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_model());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectModelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.GetObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectModelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectModelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.GetObjectModelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.GetObjectModelRequest)
    MergeFrom(*source);
  }
}

void GetObjectModelRequest::MergeFrom(const GetObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.GetObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.model() != 0) {
    _internal_set_model(from._internal_model());
  }
}

void GetObjectModelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.GetObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectModelRequest::CopyFrom(const GetObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.GetObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectModelRequest::IsInitialized() const {
  return true;
}

void GetObjectModelRequest::InternalSwap(GetObjectModelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(model_, other->model_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectModelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetObjectModelResponse::InitAsDefaultInstance() {
  ::mruv::objects::_GetObjectModelResponse_default_instance_._instance.get_mutable()->object_type_ = const_cast< ::mruv::objects::ObjectModel*>(
      ::mruv::objects::ObjectModel::internal_default_instance());
}
class GetObjectModelResponse::_Internal {
 public:
  static const ::mruv::objects::ObjectModel& object_type(const GetObjectModelResponse* msg);
};

const ::mruv::objects::ObjectModel&
GetObjectModelResponse::_Internal::object_type(const GetObjectModelResponse* msg) {
  return *msg->object_type_;
}
GetObjectModelResponse::GetObjectModelResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.GetObjectModelResponse)
}
GetObjectModelResponse::GetObjectModelResponse(const GetObjectModelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_object_type()) {
    object_type_ = new ::mruv::objects::ObjectModel(*from.object_type_);
  } else {
    object_type_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.objects.GetObjectModelResponse)
}

void GetObjectModelResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetObjectModelResponse_objects_2fobjects_2eproto.base);
  object_type_ = nullptr;
}

GetObjectModelResponse::~GetObjectModelResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.GetObjectModelResponse)
  SharedDtor();
}

void GetObjectModelResponse::SharedDtor() {
  if (this != internal_default_instance()) delete object_type_;
}

void GetObjectModelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectModelResponse& GetObjectModelResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectModelResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void GetObjectModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.GetObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && object_type_ != nullptr) {
    delete object_type_;
  }
  object_type_ = nullptr;
  _internal_metadata_.Clear();
}

const char* GetObjectModelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.objects.ObjectModel object_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_object_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectModelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.GetObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.objects.ObjectModel object_type = 1;
  if (this->has_object_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::object_type(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.GetObjectModelResponse)
  return target;
}

size_t GetObjectModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.GetObjectModelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.ObjectModel object_type = 1;
  if (this->has_object_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_type_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectModelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.GetObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectModelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectModelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.GetObjectModelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.GetObjectModelResponse)
    MergeFrom(*source);
  }
}

void GetObjectModelResponse::MergeFrom(const GetObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.GetObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object_type()) {
    _internal_mutable_object_type()->::mruv::objects::ObjectModel::MergeFrom(from._internal_object_type());
  }
}

void GetObjectModelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.GetObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectModelResponse::CopyFrom(const GetObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.GetObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectModelResponse::IsInitialized() const {
  return true;
}

void GetObjectModelResponse::InternalSwap(GetObjectModelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_type_, other->object_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectModelResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateObjectModelRequest::InitAsDefaultInstance() {
  ::mruv::objects::_UpdateObjectModelRequest_default_instance_._instance.get_mutable()->object_type_ = const_cast< ::mruv::objects::ObjectModel*>(
      ::mruv::objects::ObjectModel::internal_default_instance());
}
class UpdateObjectModelRequest::_Internal {
 public:
  static const ::mruv::objects::ObjectModel& object_type(const UpdateObjectModelRequest* msg);
};

const ::mruv::objects::ObjectModel&
UpdateObjectModelRequest::_Internal::object_type(const UpdateObjectModelRequest* msg) {
  return *msg->object_type_;
}
UpdateObjectModelRequest::UpdateObjectModelRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.UpdateObjectModelRequest)
}
UpdateObjectModelRequest::UpdateObjectModelRequest(const UpdateObjectModelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_object_type()) {
    object_type_ = new ::mruv::objects::ObjectModel(*from.object_type_);
  } else {
    object_type_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.objects.UpdateObjectModelRequest)
}

void UpdateObjectModelRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateObjectModelRequest_objects_2fobjects_2eproto.base);
  object_type_ = nullptr;
}

UpdateObjectModelRequest::~UpdateObjectModelRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.UpdateObjectModelRequest)
  SharedDtor();
}

void UpdateObjectModelRequest::SharedDtor() {
  if (this != internal_default_instance()) delete object_type_;
}

void UpdateObjectModelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateObjectModelRequest& UpdateObjectModelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateObjectModelRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void UpdateObjectModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.UpdateObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && object_type_ != nullptr) {
    delete object_type_;
  }
  object_type_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UpdateObjectModelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.objects.ObjectModel object_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_object_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateObjectModelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.UpdateObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.objects.ObjectModel object_type = 1;
  if (this->has_object_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::object_type(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.UpdateObjectModelRequest)
  return target;
}

size_t UpdateObjectModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.UpdateObjectModelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.ObjectModel object_type = 1;
  if (this->has_object_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_type_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateObjectModelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.UpdateObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateObjectModelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateObjectModelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.UpdateObjectModelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.UpdateObjectModelRequest)
    MergeFrom(*source);
  }
}

void UpdateObjectModelRequest::MergeFrom(const UpdateObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.UpdateObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object_type()) {
    _internal_mutable_object_type()->::mruv::objects::ObjectModel::MergeFrom(from._internal_object_type());
  }
}

void UpdateObjectModelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.UpdateObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateObjectModelRequest::CopyFrom(const UpdateObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.UpdateObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateObjectModelRequest::IsInitialized() const {
  return true;
}

void UpdateObjectModelRequest::InternalSwap(UpdateObjectModelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_type_, other->object_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateObjectModelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateObjectModelResponse::InitAsDefaultInstance() {
}
class UpdateObjectModelResponse::_Internal {
 public:
};

UpdateObjectModelResponse::UpdateObjectModelResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.UpdateObjectModelResponse)
}
UpdateObjectModelResponse::UpdateObjectModelResponse(const UpdateObjectModelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.UpdateObjectModelResponse)
}

void UpdateObjectModelResponse::SharedCtor() {
}

UpdateObjectModelResponse::~UpdateObjectModelResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.UpdateObjectModelResponse)
  SharedDtor();
}

void UpdateObjectModelResponse::SharedDtor() {
}

void UpdateObjectModelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateObjectModelResponse& UpdateObjectModelResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateObjectModelResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void UpdateObjectModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.UpdateObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* UpdateObjectModelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateObjectModelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.UpdateObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.UpdateObjectModelResponse)
  return target;
}

size_t UpdateObjectModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.UpdateObjectModelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateObjectModelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.UpdateObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateObjectModelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateObjectModelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.UpdateObjectModelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.UpdateObjectModelResponse)
    MergeFrom(*source);
  }
}

void UpdateObjectModelResponse::MergeFrom(const UpdateObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.UpdateObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateObjectModelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.UpdateObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateObjectModelResponse::CopyFrom(const UpdateObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.UpdateObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateObjectModelResponse::IsInitialized() const {
  return true;
}

void UpdateObjectModelResponse::InternalSwap(UpdateObjectModelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateObjectModelResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteObjectModelRequest::InitAsDefaultInstance() {
}
class DeleteObjectModelRequest::_Internal {
 public:
};

DeleteObjectModelRequest::DeleteObjectModelRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.DeleteObjectModelRequest)
}
DeleteObjectModelRequest::DeleteObjectModelRequest(const DeleteObjectModelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_ = from.model_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.DeleteObjectModelRequest)
}

void DeleteObjectModelRequest::SharedCtor() {
  model_ = 0u;
}

DeleteObjectModelRequest::~DeleteObjectModelRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.DeleteObjectModelRequest)
  SharedDtor();
}

void DeleteObjectModelRequest::SharedDtor() {
}

void DeleteObjectModelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteObjectModelRequest& DeleteObjectModelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteObjectModelRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void DeleteObjectModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.DeleteObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_ = 0u;
  _internal_metadata_.Clear();
}

const char* DeleteObjectModelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 model = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          model_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteObjectModelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.DeleteObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 model = 1;
  if (this->model() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_model(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.DeleteObjectModelRequest)
  return target;
}

size_t DeleteObjectModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.DeleteObjectModelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 model = 1;
  if (this->model() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_model());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteObjectModelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.DeleteObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteObjectModelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteObjectModelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.DeleteObjectModelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.DeleteObjectModelRequest)
    MergeFrom(*source);
  }
}

void DeleteObjectModelRequest::MergeFrom(const DeleteObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.DeleteObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.model() != 0) {
    _internal_set_model(from._internal_model());
  }
}

void DeleteObjectModelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.DeleteObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteObjectModelRequest::CopyFrom(const DeleteObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.DeleteObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteObjectModelRequest::IsInitialized() const {
  return true;
}

void DeleteObjectModelRequest::InternalSwap(DeleteObjectModelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(model_, other->model_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteObjectModelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteObjectModelResponse::InitAsDefaultInstance() {
}
class DeleteObjectModelResponse::_Internal {
 public:
};

DeleteObjectModelResponse::DeleteObjectModelResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.DeleteObjectModelResponse)
}
DeleteObjectModelResponse::DeleteObjectModelResponse(const DeleteObjectModelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.DeleteObjectModelResponse)
}

void DeleteObjectModelResponse::SharedCtor() {
}

DeleteObjectModelResponse::~DeleteObjectModelResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.DeleteObjectModelResponse)
  SharedDtor();
}

void DeleteObjectModelResponse::SharedDtor() {
}

void DeleteObjectModelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteObjectModelResponse& DeleteObjectModelResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteObjectModelResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void DeleteObjectModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.DeleteObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* DeleteObjectModelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteObjectModelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.DeleteObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.DeleteObjectModelResponse)
  return target;
}

size_t DeleteObjectModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.DeleteObjectModelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteObjectModelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.DeleteObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteObjectModelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteObjectModelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.DeleteObjectModelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.DeleteObjectModelResponse)
    MergeFrom(*source);
  }
}

void DeleteObjectModelResponse::MergeFrom(const DeleteObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.DeleteObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteObjectModelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.DeleteObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteObjectModelResponse::CopyFrom(const DeleteObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.DeleteObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteObjectModelResponse::IsInitialized() const {
  return true;
}

void DeleteObjectModelResponse::InternalSwap(DeleteObjectModelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteObjectModelResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateObjectRequest::InitAsDefaultInstance() {
  ::mruv::objects::_CreateObjectRequest_default_instance_._instance.get_mutable()->object_ = const_cast< ::mruv::objects::Object*>(
      ::mruv::objects::Object::internal_default_instance());
}
class CreateObjectRequest::_Internal {
 public:
  static const ::mruv::objects::Object& object(const CreateObjectRequest* msg);
};

const ::mruv::objects::Object&
CreateObjectRequest::_Internal::object(const CreateObjectRequest* msg) {
  return *msg->object_;
}
CreateObjectRequest::CreateObjectRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.CreateObjectRequest)
}
CreateObjectRequest::CreateObjectRequest(const CreateObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_object()) {
    object_ = new ::mruv::objects::Object(*from.object_);
  } else {
    object_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.objects.CreateObjectRequest)
}

void CreateObjectRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateObjectRequest_objects_2fobjects_2eproto.base);
  object_ = nullptr;
}

CreateObjectRequest::~CreateObjectRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.CreateObjectRequest)
  SharedDtor();
}

void CreateObjectRequest::SharedDtor() {
  if (this != internal_default_instance()) delete object_;
}

void CreateObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateObjectRequest& CreateObjectRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateObjectRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void CreateObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.CreateObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && object_ != nullptr) {
    delete object_;
  }
  object_ = nullptr;
  _internal_metadata_.Clear();
}

const char* CreateObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.objects.Object object = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_object(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateObjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.CreateObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.objects.Object object = 1;
  if (this->has_object()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::object(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.CreateObjectRequest)
  return target;
}

size_t CreateObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.CreateObjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.Object object = 1;
  if (this->has_object()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateObjectRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.CreateObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateObjectRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateObjectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.CreateObjectRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.CreateObjectRequest)
    MergeFrom(*source);
  }
}

void CreateObjectRequest::MergeFrom(const CreateObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.CreateObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object()) {
    _internal_mutable_object()->::mruv::objects::Object::MergeFrom(from._internal_object());
  }
}

void CreateObjectRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.CreateObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateObjectRequest::CopyFrom(const CreateObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.CreateObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateObjectRequest::IsInitialized() const {
  return true;
}

void CreateObjectRequest::InternalSwap(CreateObjectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_, other->object_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateObjectRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateObjectResponse::InitAsDefaultInstance() {
}
class CreateObjectResponse::_Internal {
 public:
};

CreateObjectResponse::CreateObjectResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.CreateObjectResponse)
}
CreateObjectResponse::CreateObjectResponse(const CreateObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.CreateObjectResponse)
}

void CreateObjectResponse::SharedCtor() {
  id_ = 0u;
}

CreateObjectResponse::~CreateObjectResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.CreateObjectResponse)
  SharedDtor();
}

void CreateObjectResponse::SharedDtor() {
}

void CreateObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateObjectResponse& CreateObjectResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateObjectResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void CreateObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.CreateObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* CreateObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateObjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.CreateObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.CreateObjectResponse)
  return target;
}

size_t CreateObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.CreateObjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateObjectResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.CreateObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateObjectResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateObjectResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.CreateObjectResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.CreateObjectResponse)
    MergeFrom(*source);
  }
}

void CreateObjectResponse::MergeFrom(const CreateObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.CreateObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void CreateObjectResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.CreateObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateObjectResponse::CopyFrom(const CreateObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.CreateObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateObjectResponse::IsInitialized() const {
  return true;
}

void CreateObjectResponse::InternalSwap(CreateObjectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateObjectResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetObjectRequest::InitAsDefaultInstance() {
}
class GetObjectRequest::_Internal {
 public:
};

GetObjectRequest::GetObjectRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.GetObjectRequest)
}
GetObjectRequest::GetObjectRequest(const GetObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.GetObjectRequest)
}

void GetObjectRequest::SharedCtor() {
  id_ = 0u;
}

GetObjectRequest::~GetObjectRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.GetObjectRequest)
  SharedDtor();
}

void GetObjectRequest::SharedDtor() {
}

void GetObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectRequest& GetObjectRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void GetObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.GetObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* GetObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.GetObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.GetObjectRequest)
  return target;
}

size_t GetObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.GetObjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.GetObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.GetObjectRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.GetObjectRequest)
    MergeFrom(*source);
  }
}

void GetObjectRequest::MergeFrom(const GetObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.GetObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetObjectRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.GetObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectRequest::CopyFrom(const GetObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.GetObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectRequest::IsInitialized() const {
  return true;
}

void GetObjectRequest::InternalSwap(GetObjectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetObjectResponse::InitAsDefaultInstance() {
  ::mruv::objects::_GetObjectResponse_default_instance_._instance.get_mutable()->object_ = const_cast< ::mruv::objects::Object*>(
      ::mruv::objects::Object::internal_default_instance());
}
class GetObjectResponse::_Internal {
 public:
  static const ::mruv::objects::Object& object(const GetObjectResponse* msg);
};

const ::mruv::objects::Object&
GetObjectResponse::_Internal::object(const GetObjectResponse* msg) {
  return *msg->object_;
}
GetObjectResponse::GetObjectResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.GetObjectResponse)
}
GetObjectResponse::GetObjectResponse(const GetObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_object()) {
    object_ = new ::mruv::objects::Object(*from.object_);
  } else {
    object_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.objects.GetObjectResponse)
}

void GetObjectResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetObjectResponse_objects_2fobjects_2eproto.base);
  object_ = nullptr;
}

GetObjectResponse::~GetObjectResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.GetObjectResponse)
  SharedDtor();
}

void GetObjectResponse::SharedDtor() {
  if (this != internal_default_instance()) delete object_;
}

void GetObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectResponse& GetObjectResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void GetObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.GetObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && object_ != nullptr) {
    delete object_;
  }
  object_ = nullptr;
  _internal_metadata_.Clear();
}

const char* GetObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.objects.Object object = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_object(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.GetObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.objects.Object object = 1;
  if (this->has_object()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::object(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.GetObjectResponse)
  return target;
}

size_t GetObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.GetObjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.Object object = 1;
  if (this->has_object()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.GetObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.GetObjectResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.GetObjectResponse)
    MergeFrom(*source);
  }
}

void GetObjectResponse::MergeFrom(const GetObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.GetObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object()) {
    _internal_mutable_object()->::mruv::objects::Object::MergeFrom(from._internal_object());
  }
}

void GetObjectResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.GetObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectResponse::CopyFrom(const GetObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.GetObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectResponse::IsInitialized() const {
  return true;
}

void GetObjectResponse::InternalSwap(GetObjectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_, other->object_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateObjectRequest::InitAsDefaultInstance() {
  ::mruv::objects::_UpdateObjectRequest_default_instance_._instance.get_mutable()->object_ = const_cast< ::mruv::objects::Object*>(
      ::mruv::objects::Object::internal_default_instance());
}
class UpdateObjectRequest::_Internal {
 public:
  static const ::mruv::objects::Object& object(const UpdateObjectRequest* msg);
};

const ::mruv::objects::Object&
UpdateObjectRequest::_Internal::object(const UpdateObjectRequest* msg) {
  return *msg->object_;
}
UpdateObjectRequest::UpdateObjectRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.UpdateObjectRequest)
}
UpdateObjectRequest::UpdateObjectRequest(const UpdateObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_object()) {
    object_ = new ::mruv::objects::Object(*from.object_);
  } else {
    object_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.UpdateObjectRequest)
}

void UpdateObjectRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateObjectRequest_objects_2fobjects_2eproto.base);
  ::memset(&object_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&object_)) + sizeof(id_));
}

UpdateObjectRequest::~UpdateObjectRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.UpdateObjectRequest)
  SharedDtor();
}

void UpdateObjectRequest::SharedDtor() {
  if (this != internal_default_instance()) delete object_;
}

void UpdateObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateObjectRequest& UpdateObjectRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateObjectRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void UpdateObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.UpdateObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && object_ != nullptr) {
    delete object_;
  }
  object_ = nullptr;
  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* UpdateObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mruv.objects.Object object = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_object(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateObjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.UpdateObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // .mruv.objects.Object object = 2;
  if (this->has_object()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::object(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.UpdateObjectRequest)
  return target;
}

size_t UpdateObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.UpdateObjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.Object object = 2;
  if (this->has_object()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateObjectRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.UpdateObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateObjectRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateObjectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.UpdateObjectRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.UpdateObjectRequest)
    MergeFrom(*source);
  }
}

void UpdateObjectRequest::MergeFrom(const UpdateObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.UpdateObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object()) {
    _internal_mutable_object()->::mruv::objects::Object::MergeFrom(from._internal_object());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void UpdateObjectRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.UpdateObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateObjectRequest::CopyFrom(const UpdateObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.UpdateObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateObjectRequest::IsInitialized() const {
  return true;
}

void UpdateObjectRequest::InternalSwap(UpdateObjectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_, other->object_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateObjectRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateObjectResponse::InitAsDefaultInstance() {
}
class UpdateObjectResponse::_Internal {
 public:
};

UpdateObjectResponse::UpdateObjectResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.UpdateObjectResponse)
}
UpdateObjectResponse::UpdateObjectResponse(const UpdateObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.UpdateObjectResponse)
}

void UpdateObjectResponse::SharedCtor() {
}

UpdateObjectResponse::~UpdateObjectResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.UpdateObjectResponse)
  SharedDtor();
}

void UpdateObjectResponse::SharedDtor() {
}

void UpdateObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateObjectResponse& UpdateObjectResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateObjectResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void UpdateObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.UpdateObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* UpdateObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateObjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.UpdateObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.UpdateObjectResponse)
  return target;
}

size_t UpdateObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.UpdateObjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateObjectResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.UpdateObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateObjectResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateObjectResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.UpdateObjectResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.UpdateObjectResponse)
    MergeFrom(*source);
  }
}

void UpdateObjectResponse::MergeFrom(const UpdateObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.UpdateObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateObjectResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.UpdateObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateObjectResponse::CopyFrom(const UpdateObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.UpdateObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateObjectResponse::IsInitialized() const {
  return true;
}

void UpdateObjectResponse::InternalSwap(UpdateObjectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateObjectResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteObjectRequest::InitAsDefaultInstance() {
}
class DeleteObjectRequest::_Internal {
 public:
};

DeleteObjectRequest::DeleteObjectRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.DeleteObjectRequest)
}
DeleteObjectRequest::DeleteObjectRequest(const DeleteObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.DeleteObjectRequest)
}

void DeleteObjectRequest::SharedCtor() {
  id_ = 0u;
}

DeleteObjectRequest::~DeleteObjectRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.DeleteObjectRequest)
  SharedDtor();
}

void DeleteObjectRequest::SharedDtor() {
}

void DeleteObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteObjectRequest& DeleteObjectRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteObjectRequest_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void DeleteObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.DeleteObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* DeleteObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteObjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.DeleteObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.DeleteObjectRequest)
  return target;
}

size_t DeleteObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.DeleteObjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteObjectRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.DeleteObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteObjectRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteObjectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.DeleteObjectRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.DeleteObjectRequest)
    MergeFrom(*source);
  }
}

void DeleteObjectRequest::MergeFrom(const DeleteObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.DeleteObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteObjectRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.DeleteObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteObjectRequest::CopyFrom(const DeleteObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.DeleteObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteObjectRequest::IsInitialized() const {
  return true;
}

void DeleteObjectRequest::InternalSwap(DeleteObjectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteObjectRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteObjectResponse::InitAsDefaultInstance() {
}
class DeleteObjectResponse::_Internal {
 public:
};

DeleteObjectResponse::DeleteObjectResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.DeleteObjectResponse)
}
DeleteObjectResponse::DeleteObjectResponse(const DeleteObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.DeleteObjectResponse)
}

void DeleteObjectResponse::SharedCtor() {
}

DeleteObjectResponse::~DeleteObjectResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.DeleteObjectResponse)
  SharedDtor();
}

void DeleteObjectResponse::SharedDtor() {
}

void DeleteObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteObjectResponse& DeleteObjectResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteObjectResponse_objects_2fobjects_2eproto.base);
  return *internal_default_instance();
}


void DeleteObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.DeleteObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* DeleteObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteObjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.DeleteObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.DeleteObjectResponse)
  return target;
}

size_t DeleteObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.DeleteObjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteObjectResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.DeleteObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteObjectResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteObjectResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.DeleteObjectResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.DeleteObjectResponse)
    MergeFrom(*source);
  }
}

void DeleteObjectResponse::MergeFrom(const DeleteObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.DeleteObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteObjectResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.DeleteObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteObjectResponse::CopyFrom(const DeleteObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.DeleteObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteObjectResponse::IsInitialized() const {
  return true;
}

void DeleteObjectResponse::InternalSwap(DeleteObjectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteObjectResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace objects
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mruv::objects::ObjectModel* Arena::CreateMaybeMessage< ::mruv::objects::ObjectModel >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::ObjectModel >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::Object* Arena::CreateMaybeMessage< ::mruv::objects::Object >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::Object >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::CreateObjectModelRequest* Arena::CreateMaybeMessage< ::mruv::objects::CreateObjectModelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::CreateObjectModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::CreateObjectModelResponse* Arena::CreateMaybeMessage< ::mruv::objects::CreateObjectModelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::CreateObjectModelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetObjectModelRequest* Arena::CreateMaybeMessage< ::mruv::objects::GetObjectModelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetObjectModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetObjectModelResponse* Arena::CreateMaybeMessage< ::mruv::objects::GetObjectModelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetObjectModelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::UpdateObjectModelRequest* Arena::CreateMaybeMessage< ::mruv::objects::UpdateObjectModelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::UpdateObjectModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::UpdateObjectModelResponse* Arena::CreateMaybeMessage< ::mruv::objects::UpdateObjectModelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::UpdateObjectModelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::DeleteObjectModelRequest* Arena::CreateMaybeMessage< ::mruv::objects::DeleteObjectModelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::DeleteObjectModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::DeleteObjectModelResponse* Arena::CreateMaybeMessage< ::mruv::objects::DeleteObjectModelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::DeleteObjectModelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::CreateObjectRequest* Arena::CreateMaybeMessage< ::mruv::objects::CreateObjectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::CreateObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::CreateObjectResponse* Arena::CreateMaybeMessage< ::mruv::objects::CreateObjectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::CreateObjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetObjectRequest* Arena::CreateMaybeMessage< ::mruv::objects::GetObjectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetObjectResponse* Arena::CreateMaybeMessage< ::mruv::objects::GetObjectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetObjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::UpdateObjectRequest* Arena::CreateMaybeMessage< ::mruv::objects::UpdateObjectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::UpdateObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::UpdateObjectResponse* Arena::CreateMaybeMessage< ::mruv::objects::UpdateObjectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::UpdateObjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::DeleteObjectRequest* Arena::CreateMaybeMessage< ::mruv::objects::DeleteObjectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::DeleteObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::DeleteObjectResponse* Arena::CreateMaybeMessage< ::mruv::objects::DeleteObjectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::DeleteObjectResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
