// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: objects/models.proto

#include "objects/models.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_objects_2fmodels_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FetchAllModelsResponse_ModelsEntry_DoNotUse_objects_2fmodels_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_objects_2fmodels_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectModel_objects_2fmodels_2eproto;
namespace mruv {
namespace objects {
class ObjectModelDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectModel> _instance;
} _ObjectModel_default_instance_;
class CreateObjectModelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateObjectModelRequest> _instance;
} _CreateObjectModelRequest_default_instance_;
class CreateObjectModelResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateObjectModelResponse> _instance;
} _CreateObjectModelResponse_default_instance_;
class GetObjectModelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectModelRequest> _instance;
} _GetObjectModelRequest_default_instance_;
class GetObjectModelResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectModelResponse> _instance;
} _GetObjectModelResponse_default_instance_;
class UpdateObjectModelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateObjectModelRequest> _instance;
} _UpdateObjectModelRequest_default_instance_;
class UpdateObjectModelResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateObjectModelResponse> _instance;
} _UpdateObjectModelResponse_default_instance_;
class DeleteObjectModelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteObjectModelRequest> _instance;
} _DeleteObjectModelRequest_default_instance_;
class DeleteObjectModelResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteObjectModelResponse> _instance;
} _DeleteObjectModelResponse_default_instance_;
class FetchAllModelsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FetchAllModelsRequest> _instance;
} _FetchAllModelsRequest_default_instance_;
class FetchAllModelsResponse_ModelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FetchAllModelsResponse_ModelsEntry_DoNotUse> _instance;
} _FetchAllModelsResponse_ModelsEntry_DoNotUse_default_instance_;
class FetchAllModelsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FetchAllModelsResponse> _instance;
} _FetchAllModelsResponse_default_instance_;
}  // namespace objects
}  // namespace mruv
static void InitDefaultsscc_info_CreateObjectModelRequest_objects_2fmodels_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_CreateObjectModelRequest_default_instance_;
    new (ptr) ::mruv::objects::CreateObjectModelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::CreateObjectModelRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateObjectModelRequest_objects_2fmodels_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateObjectModelRequest_objects_2fmodels_2eproto}, {
      &scc_info_ObjectModel_objects_2fmodels_2eproto.base,}};

static void InitDefaultsscc_info_CreateObjectModelResponse_objects_2fmodels_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_CreateObjectModelResponse_default_instance_;
    new (ptr) ::mruv::objects::CreateObjectModelResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::CreateObjectModelResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateObjectModelResponse_objects_2fmodels_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateObjectModelResponse_objects_2fmodels_2eproto}, {}};

static void InitDefaultsscc_info_DeleteObjectModelRequest_objects_2fmodels_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_DeleteObjectModelRequest_default_instance_;
    new (ptr) ::mruv::objects::DeleteObjectModelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::DeleteObjectModelRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteObjectModelRequest_objects_2fmodels_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteObjectModelRequest_objects_2fmodels_2eproto}, {}};

static void InitDefaultsscc_info_DeleteObjectModelResponse_objects_2fmodels_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_DeleteObjectModelResponse_default_instance_;
    new (ptr) ::mruv::objects::DeleteObjectModelResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::DeleteObjectModelResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteObjectModelResponse_objects_2fmodels_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteObjectModelResponse_objects_2fmodels_2eproto}, {}};

static void InitDefaultsscc_info_FetchAllModelsRequest_objects_2fmodels_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_FetchAllModelsRequest_default_instance_;
    new (ptr) ::mruv::objects::FetchAllModelsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::FetchAllModelsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FetchAllModelsRequest_objects_2fmodels_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FetchAllModelsRequest_objects_2fmodels_2eproto}, {}};

static void InitDefaultsscc_info_FetchAllModelsResponse_objects_2fmodels_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_FetchAllModelsResponse_default_instance_;
    new (ptr) ::mruv::objects::FetchAllModelsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::FetchAllModelsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FetchAllModelsResponse_objects_2fmodels_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FetchAllModelsResponse_objects_2fmodels_2eproto}, {
      &scc_info_FetchAllModelsResponse_ModelsEntry_DoNotUse_objects_2fmodels_2eproto.base,}};

static void InitDefaultsscc_info_FetchAllModelsResponse_ModelsEntry_DoNotUse_objects_2fmodels_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_FetchAllModelsResponse_ModelsEntry_DoNotUse_default_instance_;
    new (ptr) ::mruv::objects::FetchAllModelsResponse_ModelsEntry_DoNotUse();
  }
  ::mruv::objects::FetchAllModelsResponse_ModelsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FetchAllModelsResponse_ModelsEntry_DoNotUse_objects_2fmodels_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FetchAllModelsResponse_ModelsEntry_DoNotUse_objects_2fmodels_2eproto}, {
      &scc_info_ObjectModel_objects_2fmodels_2eproto.base,}};

static void InitDefaultsscc_info_GetObjectModelRequest_objects_2fmodels_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetObjectModelRequest_default_instance_;
    new (ptr) ::mruv::objects::GetObjectModelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::GetObjectModelRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetObjectModelRequest_objects_2fmodels_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetObjectModelRequest_objects_2fmodels_2eproto}, {}};

static void InitDefaultsscc_info_GetObjectModelResponse_objects_2fmodels_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_GetObjectModelResponse_default_instance_;
    new (ptr) ::mruv::objects::GetObjectModelResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::GetObjectModelResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetObjectModelResponse_objects_2fmodels_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetObjectModelResponse_objects_2fmodels_2eproto}, {
      &scc_info_ObjectModel_objects_2fmodels_2eproto.base,}};

static void InitDefaultsscc_info_ObjectModel_objects_2fmodels_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_ObjectModel_default_instance_;
    new (ptr) ::mruv::objects::ObjectModel();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::ObjectModel::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectModel_objects_2fmodels_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjectModel_objects_2fmodels_2eproto}, {}};

static void InitDefaultsscc_info_UpdateObjectModelRequest_objects_2fmodels_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_UpdateObjectModelRequest_default_instance_;
    new (ptr) ::mruv::objects::UpdateObjectModelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::UpdateObjectModelRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateObjectModelRequest_objects_2fmodels_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateObjectModelRequest_objects_2fmodels_2eproto}, {
      &scc_info_ObjectModel_objects_2fmodels_2eproto.base,}};

static void InitDefaultsscc_info_UpdateObjectModelResponse_objects_2fmodels_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::objects::_UpdateObjectModelResponse_default_instance_;
    new (ptr) ::mruv::objects::UpdateObjectModelResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::objects::UpdateObjectModelResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateObjectModelResponse_objects_2fmodels_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateObjectModelResponse_objects_2fmodels_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_objects_2fmodels_2eproto[12];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_objects_2fmodels_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_objects_2fmodels_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_objects_2fmodels_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, model_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, model_name_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, name_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, category_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, length_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, width_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, height_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, size_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, tags_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, has_collision_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, breaks_on_hit_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, has_animation_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, visible_by_time_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, visible_from_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::ObjectModel, visible_to_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectModelRequest, object_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectModelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::CreateObjectModelResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectModelRequest, model_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectModelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::GetObjectModelResponse, object_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::UpdateObjectModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::UpdateObjectModelRequest, object_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::UpdateObjectModelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectModelRequest, model_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::DeleteObjectModelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::FetchAllModelsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::FetchAllModelsRequest, chunk_size_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::FetchAllModelsResponse_ModelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::FetchAllModelsResponse_ModelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::FetchAllModelsResponse_ModelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::mruv::objects::FetchAllModelsResponse_ModelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::FetchAllModelsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::objects::FetchAllModelsResponse, models_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mruv::objects::ObjectModel)},
  { 20, -1, sizeof(::mruv::objects::CreateObjectModelRequest)},
  { 26, -1, sizeof(::mruv::objects::CreateObjectModelResponse)},
  { 32, -1, sizeof(::mruv::objects::GetObjectModelRequest)},
  { 38, -1, sizeof(::mruv::objects::GetObjectModelResponse)},
  { 44, -1, sizeof(::mruv::objects::UpdateObjectModelRequest)},
  { 50, -1, sizeof(::mruv::objects::UpdateObjectModelResponse)},
  { 55, -1, sizeof(::mruv::objects::DeleteObjectModelRequest)},
  { 61, -1, sizeof(::mruv::objects::DeleteObjectModelResponse)},
  { 66, -1, sizeof(::mruv::objects::FetchAllModelsRequest)},
  { 72, 79, sizeof(::mruv::objects::FetchAllModelsResponse_ModelsEntry_DoNotUse)},
  { 81, -1, sizeof(::mruv::objects::FetchAllModelsResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_ObjectModel_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_CreateObjectModelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_CreateObjectModelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetObjectModelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_GetObjectModelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_UpdateObjectModelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_UpdateObjectModelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_DeleteObjectModelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_DeleteObjectModelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_FetchAllModelsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_FetchAllModelsResponse_ModelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::objects::_FetchAllModelsResponse_default_instance_),
};

const char descriptor_table_protodef_objects_2fmodels_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024objects/models.proto\022\014mruv.objects\032\034go"
  "ogle/api/annotations.proto\"\243\002\n\013ObjectMod"
  "el\022\r\n\005model\030\001 \001(\005\022\022\n\nmodel_name\030\002 \001(\t\022\014\n"
  "\004name\030\003 \001(\t\022\020\n\010category\030\004 \001(\t\022\016\n\006length\030"
  "\005 \001(\001\022\r\n\005width\030\006 \001(\001\022\016\n\006height\030\007 \001(\001\022\014\n\004"
  "size\030\010 \001(\001\022\014\n\004tags\030\t \003(\t\022\025\n\rhas_collisio"
  "n\030\n \001(\010\022\025\n\rbreaks_on_hit\030\013 \001(\010\022\025\n\rhas_an"
  "imation\030\014 \001(\010\022\027\n\017visible_by_time\030\020 \001(\010\022\024"
  "\n\014visible_from\030\021 \001(\r\022\022\n\nvisible_to\030\022 \001(\r"
  "\"J\n\030CreateObjectModelRequest\022.\n\013object_t"
  "ype\030\001 \001(\0132\031.mruv.objects.ObjectModel\"\'\n\031"
  "CreateObjectModelResponse\022\n\n\002id\030\001 \001(\r\"&\n"
  "\025GetObjectModelRequest\022\r\n\005model\030\001 \001(\005\"H\n"
  "\026GetObjectModelResponse\022.\n\013object_type\030\001"
  " \001(\0132\031.mruv.objects.ObjectModel\"J\n\030Updat"
  "eObjectModelRequest\022.\n\013object_type\030\001 \001(\013"
  "2\031.mruv.objects.ObjectModel\"\033\n\031UpdateObj"
  "ectModelResponse\")\n\030DeleteObjectModelReq"
  "uest\022\r\n\005model\030\001 \001(\005\"\033\n\031DeleteObjectModel"
  "Response\"+\n\025FetchAllModelsRequest\022\022\n\nchu"
  "nk_size\030\001 \001(\r\"\244\001\n\026FetchAllModelsResponse"
  "\022@\n\006models\030\001 \003(\01320.mruv.objects.FetchAll"
  "ModelsResponse.ModelsEntry\032H\n\013ModelsEntr"
  "y\022\013\n\003key\030\001 \001(\005\022(\n\005value\030\002 \001(\0132\031.mruv.obj"
  "ects.ObjectModel:\0028\0012\252\005\n\027MruVObjectModel"
  "sService\022}\n\021CreateObjectModel\022&.mruv.obj"
  "ects.CreateObjectModelRequest\032\'.mruv.obj"
  "ects.CreateObjectModelResponse\"\027\202\323\344\223\002\021\"\017"
  "/v1/objectTypes\022|\n\016GetObjectModel\022#.mruv"
  ".objects.GetObjectModelRequest\032$.mruv.ob"
  "jects.GetObjectModelResponse\"\037\202\323\344\223\002\031\022\027/v"
  "1/objectTypes/{model}\022\221\001\n\021UpdateObjectMo"
  "del\022&.mruv.objects.UpdateObjectModelRequ"
  "est\032\'.mruv.objects.UpdateObjectModelResp"
  "onse\"+\202\323\344\223\002%2#/v1/objectTypes/{object_ty"
  "pe.model}\022\205\001\n\021DeleteObjectModel\022&.mruv.o"
  "bjects.DeleteObjectModelRequest\032\'.mruv.o"
  "bjects.DeleteObjectModelResponse\"\037\202\323\344\223\002\031"
  "*\027/v1/objectTypes/{model}\022v\n\016FetchAllMod"
  "els\022#.mruv.objects.FetchAllModelsRequest"
  "\032$.mruv.objects.FetchAllModelsResponse\"\027"
  "\202\323\344\223\002\021\022\017/v1/objectTypes0\001B\'Z%github.com/"
  "MruV-RP/mruv-pb-go/objectsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_objects_2fmodels_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_objects_2fmodels_2eproto_sccs[12] = {
  &scc_info_CreateObjectModelRequest_objects_2fmodels_2eproto.base,
  &scc_info_CreateObjectModelResponse_objects_2fmodels_2eproto.base,
  &scc_info_DeleteObjectModelRequest_objects_2fmodels_2eproto.base,
  &scc_info_DeleteObjectModelResponse_objects_2fmodels_2eproto.base,
  &scc_info_FetchAllModelsRequest_objects_2fmodels_2eproto.base,
  &scc_info_FetchAllModelsResponse_objects_2fmodels_2eproto.base,
  &scc_info_FetchAllModelsResponse_ModelsEntry_DoNotUse_objects_2fmodels_2eproto.base,
  &scc_info_GetObjectModelRequest_objects_2fmodels_2eproto.base,
  &scc_info_GetObjectModelResponse_objects_2fmodels_2eproto.base,
  &scc_info_ObjectModel_objects_2fmodels_2eproto.base,
  &scc_info_UpdateObjectModelRequest_objects_2fmodels_2eproto.base,
  &scc_info_UpdateObjectModelResponse_objects_2fmodels_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_objects_2fmodels_2eproto_once;
static bool descriptor_table_objects_2fmodels_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_objects_2fmodels_2eproto = {
  &descriptor_table_objects_2fmodels_2eproto_initialized, descriptor_table_protodef_objects_2fmodels_2eproto, "objects/models.proto", 1714,
  &descriptor_table_objects_2fmodels_2eproto_once, descriptor_table_objects_2fmodels_2eproto_sccs, descriptor_table_objects_2fmodels_2eproto_deps, 12, 1,
  schemas, file_default_instances, TableStruct_objects_2fmodels_2eproto::offsets,
  file_level_metadata_objects_2fmodels_2eproto, 12, file_level_enum_descriptors_objects_2fmodels_2eproto, file_level_service_descriptors_objects_2fmodels_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_objects_2fmodels_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_objects_2fmodels_2eproto), true);
namespace mruv {
namespace objects {

// ===================================================================

void ObjectModel::InitAsDefaultInstance() {
}
class ObjectModel::_Internal {
 public:
};

ObjectModel::ObjectModel()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.ObjectModel)
}
ObjectModel::ObjectModel(const ObjectModel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_name().empty()) {
    model_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.model_name_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_category().empty()) {
    category_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&visible_to_) -
    reinterpret_cast<char*>(&length_)) + sizeof(visible_to_));
  // @@protoc_insertion_point(copy_constructor:mruv.objects.ObjectModel)
}

void ObjectModel::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectModel_objects_2fmodels_2eproto.base);
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visible_to_) -
      reinterpret_cast<char*>(&length_)) + sizeof(visible_to_));
}

ObjectModel::~ObjectModel() {
  // @@protoc_insertion_point(destructor:mruv.objects.ObjectModel)
  SharedDtor();
}

void ObjectModel::SharedDtor() {
  model_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ObjectModel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectModel& ObjectModel::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectModel_objects_2fmodels_2eproto.base);
  return *internal_default_instance();
}


void ObjectModel::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.ObjectModel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  model_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visible_to_) -
      reinterpret_cast<char*>(&length_)) + sizeof(visible_to_));
  _internal_metadata_.Clear();
}

const char* ObjectModel::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 model = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          model_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string model_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.objects.ObjectModel.model_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.objects.ObjectModel.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string category = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_category();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.objects.ObjectModel.category"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double length = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          length_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double width = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double height = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double size = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated string tags = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tags();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.objects.ObjectModel.tags"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // bool has_collision = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          has_collision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool breaks_on_hit = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          breaks_on_hit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool has_animation = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          has_animation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool visible_by_time = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          visible_by_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 visible_from = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          visible_from_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 visible_to = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          visible_to_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectModel::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.ObjectModel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 model = 1;
  if (this->model() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_model(), target);
  }

  // string model_name = 2;
  if (this->model_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.objects.ObjectModel.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.objects.ObjectModel.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string category = 4;
  if (this->category().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_category().data(), static_cast<int>(this->_internal_category().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.objects.ObjectModel.category");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_category(), target);
  }

  // double length = 5;
  if (!(this->length() <= 0 && this->length() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_length(), target);
  }

  // double width = 6;
  if (!(this->width() <= 0 && this->width() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_width(), target);
  }

  // double height = 7;
  if (!(this->height() <= 0 && this->height() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_height(), target);
  }

  // double size = 8;
  if (!(this->size() <= 0 && this->size() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_size(), target);
  }

  // repeated string tags = 9;
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.objects.ObjectModel.tags");
    target = stream->WriteString(9, s, target);
  }

  // bool has_collision = 10;
  if (this->has_collision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_has_collision(), target);
  }

  // bool breaks_on_hit = 11;
  if (this->breaks_on_hit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_breaks_on_hit(), target);
  }

  // bool has_animation = 12;
  if (this->has_animation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_has_animation(), target);
  }

  // bool visible_by_time = 16;
  if (this->visible_by_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_visible_by_time(), target);
  }

  // uint32 visible_from = 17;
  if (this->visible_from() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_visible_from(), target);
  }

  // uint32 visible_to = 18;
  if (this->visible_to() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(18, this->_internal_visible_to(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.ObjectModel)
  return target;
}

size_t ObjectModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.ObjectModel)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(tags_.size());
  for (int i = 0, n = tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      tags_.Get(i));
  }

  // string model_name = 2;
  if (this->model_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string category = 4;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_category());
  }

  // double length = 5;
  if (!(this->length() <= 0 && this->length() >= 0)) {
    total_size += 1 + 8;
  }

  // double width = 6;
  if (!(this->width() <= 0 && this->width() >= 0)) {
    total_size += 1 + 8;
  }

  // double height = 7;
  if (!(this->height() <= 0 && this->height() >= 0)) {
    total_size += 1 + 8;
  }

  // double size = 8;
  if (!(this->size() <= 0 && this->size() >= 0)) {
    total_size += 1 + 8;
  }

  // int32 model = 1;
  if (this->model() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_model());
  }

  // bool has_collision = 10;
  if (this->has_collision() != 0) {
    total_size += 1 + 1;
  }

  // bool breaks_on_hit = 11;
  if (this->breaks_on_hit() != 0) {
    total_size += 1 + 1;
  }

  // bool has_animation = 12;
  if (this->has_animation() != 0) {
    total_size += 1 + 1;
  }

  // bool visible_by_time = 16;
  if (this->visible_by_time() != 0) {
    total_size += 2 + 1;
  }

  // uint32 visible_from = 17;
  if (this->visible_from() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_visible_from());
  }

  // uint32 visible_to = 18;
  if (this->visible_to() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_visible_to());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectModel::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.ObjectModel)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectModel* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectModel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.ObjectModel)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.ObjectModel)
    MergeFrom(*source);
  }
}

void ObjectModel::MergeFrom(const ObjectModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.ObjectModel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  if (from.model_name().size() > 0) {

    model_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.model_name_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.category().size() > 0) {

    category_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (!(from.length() <= 0 && from.length() >= 0)) {
    _internal_set_length(from._internal_length());
  }
  if (!(from.width() <= 0 && from.width() >= 0)) {
    _internal_set_width(from._internal_width());
  }
  if (!(from.height() <= 0 && from.height() >= 0)) {
    _internal_set_height(from._internal_height());
  }
  if (!(from.size() <= 0 && from.size() >= 0)) {
    _internal_set_size(from._internal_size());
  }
  if (from.model() != 0) {
    _internal_set_model(from._internal_model());
  }
  if (from.has_collision() != 0) {
    _internal_set_has_collision(from._internal_has_collision());
  }
  if (from.breaks_on_hit() != 0) {
    _internal_set_breaks_on_hit(from._internal_breaks_on_hit());
  }
  if (from.has_animation() != 0) {
    _internal_set_has_animation(from._internal_has_animation());
  }
  if (from.visible_by_time() != 0) {
    _internal_set_visible_by_time(from._internal_visible_by_time());
  }
  if (from.visible_from() != 0) {
    _internal_set_visible_from(from._internal_visible_from());
  }
  if (from.visible_to() != 0) {
    _internal_set_visible_to(from._internal_visible_to());
  }
}

void ObjectModel::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.ObjectModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectModel::CopyFrom(const ObjectModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.ObjectModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectModel::IsInitialized() const {
  return true;
}

void ObjectModel::InternalSwap(ObjectModel* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tags_.InternalSwap(&other->tags_);
  model_name_.Swap(&other->model_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  category_.Swap(&other->category_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(length_, other->length_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(size_, other->size_);
  swap(model_, other->model_);
  swap(has_collision_, other->has_collision_);
  swap(breaks_on_hit_, other->breaks_on_hit_);
  swap(has_animation_, other->has_animation_);
  swap(visible_by_time_, other->visible_by_time_);
  swap(visible_from_, other->visible_from_);
  swap(visible_to_, other->visible_to_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectModel::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateObjectModelRequest::InitAsDefaultInstance() {
  ::mruv::objects::_CreateObjectModelRequest_default_instance_._instance.get_mutable()->object_type_ = const_cast< ::mruv::objects::ObjectModel*>(
      ::mruv::objects::ObjectModel::internal_default_instance());
}
class CreateObjectModelRequest::_Internal {
 public:
  static const ::mruv::objects::ObjectModel& object_type(const CreateObjectModelRequest* msg);
};

const ::mruv::objects::ObjectModel&
CreateObjectModelRequest::_Internal::object_type(const CreateObjectModelRequest* msg) {
  return *msg->object_type_;
}
CreateObjectModelRequest::CreateObjectModelRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.CreateObjectModelRequest)
}
CreateObjectModelRequest::CreateObjectModelRequest(const CreateObjectModelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_object_type()) {
    object_type_ = new ::mruv::objects::ObjectModel(*from.object_type_);
  } else {
    object_type_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.objects.CreateObjectModelRequest)
}

void CreateObjectModelRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateObjectModelRequest_objects_2fmodels_2eproto.base);
  object_type_ = nullptr;
}

CreateObjectModelRequest::~CreateObjectModelRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.CreateObjectModelRequest)
  SharedDtor();
}

void CreateObjectModelRequest::SharedDtor() {
  if (this != internal_default_instance()) delete object_type_;
}

void CreateObjectModelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateObjectModelRequest& CreateObjectModelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateObjectModelRequest_objects_2fmodels_2eproto.base);
  return *internal_default_instance();
}


void CreateObjectModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.CreateObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && object_type_ != nullptr) {
    delete object_type_;
  }
  object_type_ = nullptr;
  _internal_metadata_.Clear();
}

const char* CreateObjectModelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.objects.ObjectModel object_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_object_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateObjectModelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.CreateObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.objects.ObjectModel object_type = 1;
  if (this->has_object_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::object_type(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.CreateObjectModelRequest)
  return target;
}

size_t CreateObjectModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.CreateObjectModelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.ObjectModel object_type = 1;
  if (this->has_object_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_type_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateObjectModelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.CreateObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateObjectModelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateObjectModelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.CreateObjectModelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.CreateObjectModelRequest)
    MergeFrom(*source);
  }
}

void CreateObjectModelRequest::MergeFrom(const CreateObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.CreateObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object_type()) {
    _internal_mutable_object_type()->::mruv::objects::ObjectModel::MergeFrom(from._internal_object_type());
  }
}

void CreateObjectModelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.CreateObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateObjectModelRequest::CopyFrom(const CreateObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.CreateObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateObjectModelRequest::IsInitialized() const {
  return true;
}

void CreateObjectModelRequest::InternalSwap(CreateObjectModelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_type_, other->object_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateObjectModelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateObjectModelResponse::InitAsDefaultInstance() {
}
class CreateObjectModelResponse::_Internal {
 public:
};

CreateObjectModelResponse::CreateObjectModelResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.CreateObjectModelResponse)
}
CreateObjectModelResponse::CreateObjectModelResponse(const CreateObjectModelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.CreateObjectModelResponse)
}

void CreateObjectModelResponse::SharedCtor() {
  id_ = 0u;
}

CreateObjectModelResponse::~CreateObjectModelResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.CreateObjectModelResponse)
  SharedDtor();
}

void CreateObjectModelResponse::SharedDtor() {
}

void CreateObjectModelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateObjectModelResponse& CreateObjectModelResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateObjectModelResponse_objects_2fmodels_2eproto.base);
  return *internal_default_instance();
}


void CreateObjectModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.CreateObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* CreateObjectModelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateObjectModelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.CreateObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.CreateObjectModelResponse)
  return target;
}

size_t CreateObjectModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.CreateObjectModelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateObjectModelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.CreateObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateObjectModelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateObjectModelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.CreateObjectModelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.CreateObjectModelResponse)
    MergeFrom(*source);
  }
}

void CreateObjectModelResponse::MergeFrom(const CreateObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.CreateObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void CreateObjectModelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.CreateObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateObjectModelResponse::CopyFrom(const CreateObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.CreateObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateObjectModelResponse::IsInitialized() const {
  return true;
}

void CreateObjectModelResponse::InternalSwap(CreateObjectModelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateObjectModelResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetObjectModelRequest::InitAsDefaultInstance() {
}
class GetObjectModelRequest::_Internal {
 public:
};

GetObjectModelRequest::GetObjectModelRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.GetObjectModelRequest)
}
GetObjectModelRequest::GetObjectModelRequest(const GetObjectModelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_ = from.model_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.GetObjectModelRequest)
}

void GetObjectModelRequest::SharedCtor() {
  model_ = 0;
}

GetObjectModelRequest::~GetObjectModelRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.GetObjectModelRequest)
  SharedDtor();
}

void GetObjectModelRequest::SharedDtor() {
}

void GetObjectModelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectModelRequest& GetObjectModelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectModelRequest_objects_2fmodels_2eproto.base);
  return *internal_default_instance();
}


void GetObjectModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.GetObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_ = 0;
  _internal_metadata_.Clear();
}

const char* GetObjectModelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 model = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          model_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectModelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.GetObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 model = 1;
  if (this->model() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_model(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.GetObjectModelRequest)
  return target;
}

size_t GetObjectModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.GetObjectModelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 model = 1;
  if (this->model() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_model());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectModelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.GetObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectModelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectModelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.GetObjectModelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.GetObjectModelRequest)
    MergeFrom(*source);
  }
}

void GetObjectModelRequest::MergeFrom(const GetObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.GetObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.model() != 0) {
    _internal_set_model(from._internal_model());
  }
}

void GetObjectModelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.GetObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectModelRequest::CopyFrom(const GetObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.GetObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectModelRequest::IsInitialized() const {
  return true;
}

void GetObjectModelRequest::InternalSwap(GetObjectModelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(model_, other->model_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectModelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetObjectModelResponse::InitAsDefaultInstance() {
  ::mruv::objects::_GetObjectModelResponse_default_instance_._instance.get_mutable()->object_type_ = const_cast< ::mruv::objects::ObjectModel*>(
      ::mruv::objects::ObjectModel::internal_default_instance());
}
class GetObjectModelResponse::_Internal {
 public:
  static const ::mruv::objects::ObjectModel& object_type(const GetObjectModelResponse* msg);
};

const ::mruv::objects::ObjectModel&
GetObjectModelResponse::_Internal::object_type(const GetObjectModelResponse* msg) {
  return *msg->object_type_;
}
GetObjectModelResponse::GetObjectModelResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.GetObjectModelResponse)
}
GetObjectModelResponse::GetObjectModelResponse(const GetObjectModelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_object_type()) {
    object_type_ = new ::mruv::objects::ObjectModel(*from.object_type_);
  } else {
    object_type_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.objects.GetObjectModelResponse)
}

void GetObjectModelResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetObjectModelResponse_objects_2fmodels_2eproto.base);
  object_type_ = nullptr;
}

GetObjectModelResponse::~GetObjectModelResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.GetObjectModelResponse)
  SharedDtor();
}

void GetObjectModelResponse::SharedDtor() {
  if (this != internal_default_instance()) delete object_type_;
}

void GetObjectModelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectModelResponse& GetObjectModelResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectModelResponse_objects_2fmodels_2eproto.base);
  return *internal_default_instance();
}


void GetObjectModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.GetObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && object_type_ != nullptr) {
    delete object_type_;
  }
  object_type_ = nullptr;
  _internal_metadata_.Clear();
}

const char* GetObjectModelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.objects.ObjectModel object_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_object_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectModelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.GetObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.objects.ObjectModel object_type = 1;
  if (this->has_object_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::object_type(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.GetObjectModelResponse)
  return target;
}

size_t GetObjectModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.GetObjectModelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.ObjectModel object_type = 1;
  if (this->has_object_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_type_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectModelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.GetObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectModelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectModelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.GetObjectModelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.GetObjectModelResponse)
    MergeFrom(*source);
  }
}

void GetObjectModelResponse::MergeFrom(const GetObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.GetObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object_type()) {
    _internal_mutable_object_type()->::mruv::objects::ObjectModel::MergeFrom(from._internal_object_type());
  }
}

void GetObjectModelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.GetObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectModelResponse::CopyFrom(const GetObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.GetObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectModelResponse::IsInitialized() const {
  return true;
}

void GetObjectModelResponse::InternalSwap(GetObjectModelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_type_, other->object_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectModelResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateObjectModelRequest::InitAsDefaultInstance() {
  ::mruv::objects::_UpdateObjectModelRequest_default_instance_._instance.get_mutable()->object_type_ = const_cast< ::mruv::objects::ObjectModel*>(
      ::mruv::objects::ObjectModel::internal_default_instance());
}
class UpdateObjectModelRequest::_Internal {
 public:
  static const ::mruv::objects::ObjectModel& object_type(const UpdateObjectModelRequest* msg);
};

const ::mruv::objects::ObjectModel&
UpdateObjectModelRequest::_Internal::object_type(const UpdateObjectModelRequest* msg) {
  return *msg->object_type_;
}
UpdateObjectModelRequest::UpdateObjectModelRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.UpdateObjectModelRequest)
}
UpdateObjectModelRequest::UpdateObjectModelRequest(const UpdateObjectModelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_object_type()) {
    object_type_ = new ::mruv::objects::ObjectModel(*from.object_type_);
  } else {
    object_type_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.objects.UpdateObjectModelRequest)
}

void UpdateObjectModelRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateObjectModelRequest_objects_2fmodels_2eproto.base);
  object_type_ = nullptr;
}

UpdateObjectModelRequest::~UpdateObjectModelRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.UpdateObjectModelRequest)
  SharedDtor();
}

void UpdateObjectModelRequest::SharedDtor() {
  if (this != internal_default_instance()) delete object_type_;
}

void UpdateObjectModelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateObjectModelRequest& UpdateObjectModelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateObjectModelRequest_objects_2fmodels_2eproto.base);
  return *internal_default_instance();
}


void UpdateObjectModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.UpdateObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && object_type_ != nullptr) {
    delete object_type_;
  }
  object_type_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UpdateObjectModelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.objects.ObjectModel object_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_object_type(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateObjectModelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.UpdateObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.objects.ObjectModel object_type = 1;
  if (this->has_object_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::object_type(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.UpdateObjectModelRequest)
  return target;
}

size_t UpdateObjectModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.UpdateObjectModelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.objects.ObjectModel object_type = 1;
  if (this->has_object_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_type_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateObjectModelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.UpdateObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateObjectModelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateObjectModelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.UpdateObjectModelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.UpdateObjectModelRequest)
    MergeFrom(*source);
  }
}

void UpdateObjectModelRequest::MergeFrom(const UpdateObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.UpdateObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object_type()) {
    _internal_mutable_object_type()->::mruv::objects::ObjectModel::MergeFrom(from._internal_object_type());
  }
}

void UpdateObjectModelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.UpdateObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateObjectModelRequest::CopyFrom(const UpdateObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.UpdateObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateObjectModelRequest::IsInitialized() const {
  return true;
}

void UpdateObjectModelRequest::InternalSwap(UpdateObjectModelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_type_, other->object_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateObjectModelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateObjectModelResponse::InitAsDefaultInstance() {
}
class UpdateObjectModelResponse::_Internal {
 public:
};

UpdateObjectModelResponse::UpdateObjectModelResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.UpdateObjectModelResponse)
}
UpdateObjectModelResponse::UpdateObjectModelResponse(const UpdateObjectModelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.UpdateObjectModelResponse)
}

void UpdateObjectModelResponse::SharedCtor() {
}

UpdateObjectModelResponse::~UpdateObjectModelResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.UpdateObjectModelResponse)
  SharedDtor();
}

void UpdateObjectModelResponse::SharedDtor() {
}

void UpdateObjectModelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateObjectModelResponse& UpdateObjectModelResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateObjectModelResponse_objects_2fmodels_2eproto.base);
  return *internal_default_instance();
}


void UpdateObjectModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.UpdateObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* UpdateObjectModelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateObjectModelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.UpdateObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.UpdateObjectModelResponse)
  return target;
}

size_t UpdateObjectModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.UpdateObjectModelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateObjectModelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.UpdateObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateObjectModelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateObjectModelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.UpdateObjectModelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.UpdateObjectModelResponse)
    MergeFrom(*source);
  }
}

void UpdateObjectModelResponse::MergeFrom(const UpdateObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.UpdateObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateObjectModelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.UpdateObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateObjectModelResponse::CopyFrom(const UpdateObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.UpdateObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateObjectModelResponse::IsInitialized() const {
  return true;
}

void UpdateObjectModelResponse::InternalSwap(UpdateObjectModelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateObjectModelResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteObjectModelRequest::InitAsDefaultInstance() {
}
class DeleteObjectModelRequest::_Internal {
 public:
};

DeleteObjectModelRequest::DeleteObjectModelRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.DeleteObjectModelRequest)
}
DeleteObjectModelRequest::DeleteObjectModelRequest(const DeleteObjectModelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_ = from.model_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.DeleteObjectModelRequest)
}

void DeleteObjectModelRequest::SharedCtor() {
  model_ = 0;
}

DeleteObjectModelRequest::~DeleteObjectModelRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.DeleteObjectModelRequest)
  SharedDtor();
}

void DeleteObjectModelRequest::SharedDtor() {
}

void DeleteObjectModelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteObjectModelRequest& DeleteObjectModelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteObjectModelRequest_objects_2fmodels_2eproto.base);
  return *internal_default_instance();
}


void DeleteObjectModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.DeleteObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_ = 0;
  _internal_metadata_.Clear();
}

const char* DeleteObjectModelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 model = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          model_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteObjectModelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.DeleteObjectModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 model = 1;
  if (this->model() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_model(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.DeleteObjectModelRequest)
  return target;
}

size_t DeleteObjectModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.DeleteObjectModelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 model = 1;
  if (this->model() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_model());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteObjectModelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.DeleteObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteObjectModelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteObjectModelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.DeleteObjectModelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.DeleteObjectModelRequest)
    MergeFrom(*source);
  }
}

void DeleteObjectModelRequest::MergeFrom(const DeleteObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.DeleteObjectModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.model() != 0) {
    _internal_set_model(from._internal_model());
  }
}

void DeleteObjectModelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.DeleteObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteObjectModelRequest::CopyFrom(const DeleteObjectModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.DeleteObjectModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteObjectModelRequest::IsInitialized() const {
  return true;
}

void DeleteObjectModelRequest::InternalSwap(DeleteObjectModelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(model_, other->model_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteObjectModelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteObjectModelResponse::InitAsDefaultInstance() {
}
class DeleteObjectModelResponse::_Internal {
 public:
};

DeleteObjectModelResponse::DeleteObjectModelResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.DeleteObjectModelResponse)
}
DeleteObjectModelResponse::DeleteObjectModelResponse(const DeleteObjectModelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.DeleteObjectModelResponse)
}

void DeleteObjectModelResponse::SharedCtor() {
}

DeleteObjectModelResponse::~DeleteObjectModelResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.DeleteObjectModelResponse)
  SharedDtor();
}

void DeleteObjectModelResponse::SharedDtor() {
}

void DeleteObjectModelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteObjectModelResponse& DeleteObjectModelResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteObjectModelResponse_objects_2fmodels_2eproto.base);
  return *internal_default_instance();
}


void DeleteObjectModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.DeleteObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* DeleteObjectModelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteObjectModelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.DeleteObjectModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.DeleteObjectModelResponse)
  return target;
}

size_t DeleteObjectModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.DeleteObjectModelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteObjectModelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.DeleteObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteObjectModelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteObjectModelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.DeleteObjectModelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.DeleteObjectModelResponse)
    MergeFrom(*source);
  }
}

void DeleteObjectModelResponse::MergeFrom(const DeleteObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.DeleteObjectModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteObjectModelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.DeleteObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteObjectModelResponse::CopyFrom(const DeleteObjectModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.DeleteObjectModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteObjectModelResponse::IsInitialized() const {
  return true;
}

void DeleteObjectModelResponse::InternalSwap(DeleteObjectModelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteObjectModelResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FetchAllModelsRequest::InitAsDefaultInstance() {
}
class FetchAllModelsRequest::_Internal {
 public:
};

FetchAllModelsRequest::FetchAllModelsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.FetchAllModelsRequest)
}
FetchAllModelsRequest::FetchAllModelsRequest(const FetchAllModelsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chunk_size_ = from.chunk_size_;
  // @@protoc_insertion_point(copy_constructor:mruv.objects.FetchAllModelsRequest)
}

void FetchAllModelsRequest::SharedCtor() {
  chunk_size_ = 0u;
}

FetchAllModelsRequest::~FetchAllModelsRequest() {
  // @@protoc_insertion_point(destructor:mruv.objects.FetchAllModelsRequest)
  SharedDtor();
}

void FetchAllModelsRequest::SharedDtor() {
}

void FetchAllModelsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FetchAllModelsRequest& FetchAllModelsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FetchAllModelsRequest_objects_2fmodels_2eproto.base);
  return *internal_default_instance();
}


void FetchAllModelsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.FetchAllModelsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunk_size_ = 0u;
  _internal_metadata_.Clear();
}

const char* FetchAllModelsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 chunk_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          chunk_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FetchAllModelsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.FetchAllModelsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 chunk_size = 1;
  if (this->chunk_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_chunk_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.FetchAllModelsRequest)
  return target;
}

size_t FetchAllModelsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.FetchAllModelsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 chunk_size = 1;
  if (this->chunk_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_chunk_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FetchAllModelsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.FetchAllModelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FetchAllModelsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FetchAllModelsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.FetchAllModelsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.FetchAllModelsRequest)
    MergeFrom(*source);
  }
}

void FetchAllModelsRequest::MergeFrom(const FetchAllModelsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.FetchAllModelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chunk_size() != 0) {
    _internal_set_chunk_size(from._internal_chunk_size());
  }
}

void FetchAllModelsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.FetchAllModelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchAllModelsRequest::CopyFrom(const FetchAllModelsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.FetchAllModelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchAllModelsRequest::IsInitialized() const {
  return true;
}

void FetchAllModelsRequest::InternalSwap(FetchAllModelsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(chunk_size_, other->chunk_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchAllModelsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

FetchAllModelsResponse_ModelsEntry_DoNotUse::FetchAllModelsResponse_ModelsEntry_DoNotUse() {}
FetchAllModelsResponse_ModelsEntry_DoNotUse::FetchAllModelsResponse_ModelsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void FetchAllModelsResponse_ModelsEntry_DoNotUse::MergeFrom(const FetchAllModelsResponse_ModelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata FetchAllModelsResponse_ModelsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void FetchAllModelsResponse_ModelsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void FetchAllModelsResponse::InitAsDefaultInstance() {
}
class FetchAllModelsResponse::_Internal {
 public:
};

FetchAllModelsResponse::FetchAllModelsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.objects.FetchAllModelsResponse)
}
FetchAllModelsResponse::FetchAllModelsResponse(const FetchAllModelsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  models_.MergeFrom(from.models_);
  // @@protoc_insertion_point(copy_constructor:mruv.objects.FetchAllModelsResponse)
}

void FetchAllModelsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FetchAllModelsResponse_objects_2fmodels_2eproto.base);
}

FetchAllModelsResponse::~FetchAllModelsResponse() {
  // @@protoc_insertion_point(destructor:mruv.objects.FetchAllModelsResponse)
  SharedDtor();
}

void FetchAllModelsResponse::SharedDtor() {
}

void FetchAllModelsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FetchAllModelsResponse& FetchAllModelsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FetchAllModelsResponse_objects_2fmodels_2eproto.base);
  return *internal_default_instance();
}


void FetchAllModelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.objects.FetchAllModelsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  models_.Clear();
  _internal_metadata_.Clear();
}

const char* FetchAllModelsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<int32, .mruv.objects.ObjectModel> models = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&models_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FetchAllModelsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.objects.FetchAllModelsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .mruv.objects.ObjectModel> models = 1;
  if (!this->_internal_models().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::mruv::objects::ObjectModel >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_models().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_models().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::mruv::objects::ObjectModel >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::mruv::objects::ObjectModel >::const_iterator
          it = this->_internal_models().begin();
          it != this->_internal_models().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = FetchAllModelsResponse_ModelsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::mruv::objects::ObjectModel >::const_iterator
          it = this->_internal_models().begin();
          it != this->_internal_models().end(); ++it) {
        target = FetchAllModelsResponse_ModelsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.objects.FetchAllModelsResponse)
  return target;
}

size_t FetchAllModelsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.objects.FetchAllModelsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .mruv.objects.ObjectModel> models = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_models_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::mruv::objects::ObjectModel >::const_iterator
      it = this->_internal_models().begin();
      it != this->_internal_models().end(); ++it) {
    total_size += FetchAllModelsResponse_ModelsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FetchAllModelsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.objects.FetchAllModelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FetchAllModelsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FetchAllModelsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.objects.FetchAllModelsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.objects.FetchAllModelsResponse)
    MergeFrom(*source);
  }
}

void FetchAllModelsResponse::MergeFrom(const FetchAllModelsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.objects.FetchAllModelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  models_.MergeFrom(from.models_);
}

void FetchAllModelsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.objects.FetchAllModelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchAllModelsResponse::CopyFrom(const FetchAllModelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.objects.FetchAllModelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchAllModelsResponse::IsInitialized() const {
  return true;
}

void FetchAllModelsResponse::InternalSwap(FetchAllModelsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  models_.Swap(&other->models_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchAllModelsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace objects
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mruv::objects::ObjectModel* Arena::CreateMaybeMessage< ::mruv::objects::ObjectModel >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::ObjectModel >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::CreateObjectModelRequest* Arena::CreateMaybeMessage< ::mruv::objects::CreateObjectModelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::CreateObjectModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::CreateObjectModelResponse* Arena::CreateMaybeMessage< ::mruv::objects::CreateObjectModelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::CreateObjectModelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetObjectModelRequest* Arena::CreateMaybeMessage< ::mruv::objects::GetObjectModelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetObjectModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::GetObjectModelResponse* Arena::CreateMaybeMessage< ::mruv::objects::GetObjectModelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::GetObjectModelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::UpdateObjectModelRequest* Arena::CreateMaybeMessage< ::mruv::objects::UpdateObjectModelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::UpdateObjectModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::UpdateObjectModelResponse* Arena::CreateMaybeMessage< ::mruv::objects::UpdateObjectModelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::UpdateObjectModelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::DeleteObjectModelRequest* Arena::CreateMaybeMessage< ::mruv::objects::DeleteObjectModelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::DeleteObjectModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::DeleteObjectModelResponse* Arena::CreateMaybeMessage< ::mruv::objects::DeleteObjectModelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::DeleteObjectModelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::FetchAllModelsRequest* Arena::CreateMaybeMessage< ::mruv::objects::FetchAllModelsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::FetchAllModelsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::FetchAllModelsResponse_ModelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::mruv::objects::FetchAllModelsResponse_ModelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::FetchAllModelsResponse_ModelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::objects::FetchAllModelsResponse* Arena::CreateMaybeMessage< ::mruv::objects::FetchAllModelsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::objects::FetchAllModelsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
