// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: characters/characters.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_characters_2fcharacters_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_characters_2fcharacters_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "common/health.pb.h"
#include "characters/characters_model.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_characters_2fcharacters_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_characters_2fcharacters_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_characters_2fcharacters_2eproto;
namespace mruv {
class DeathStreamRequest;
class DeathStreamRequestDefaultTypeInternal;
extern DeathStreamRequestDefaultTypeInternal _DeathStreamRequest_default_instance_;
class DeathStreamResponse;
class DeathStreamResponseDefaultTypeInternal;
extern DeathStreamResponseDefaultTypeInternal _DeathStreamResponse_default_instance_;
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> ::mruv::DeathStreamRequest* Arena::CreateMaybeMessage<::mruv::DeathStreamRequest>(Arena*);
template<> ::mruv::DeathStreamResponse* Arena::CreateMaybeMessage<::mruv::DeathStreamResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mruv {

// ===================================================================

class DeathStreamRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.DeathStreamRequest) */ {
 public:
  DeathStreamRequest();
  virtual ~DeathStreamRequest();

  DeathStreamRequest(const DeathStreamRequest& from);
  DeathStreamRequest(DeathStreamRequest&& from) noexcept
    : DeathStreamRequest() {
    *this = ::std::move(from);
  }

  inline DeathStreamRequest& operator=(const DeathStreamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeathStreamRequest& operator=(DeathStreamRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeathStreamRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeathStreamRequest* internal_default_instance() {
    return reinterpret_cast<const DeathStreamRequest*>(
               &_DeathStreamRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DeathStreamRequest& a, DeathStreamRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeathStreamRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeathStreamRequest* New() const final {
    return CreateMaybeMessage<DeathStreamRequest>(nullptr);
  }

  DeathStreamRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeathStreamRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeathStreamRequest& from);
  void MergeFrom(const DeathStreamRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeathStreamRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.DeathStreamRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_characters_2fcharacters_2eproto);
    return ::descriptor_table_characters_2fcharacters_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeathTypesFieldNumber = 1,
  };
  // repeated .mruv.DeathType death_types = 1;
  int death_types_size() const;
  private:
  int _internal_death_types_size() const;
  public:
  void clear_death_types();
  private:
  ::mruv::DeathType _internal_death_types(int index) const;
  void _internal_add_death_types(::mruv::DeathType value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_death_types();
  public:
  ::mruv::DeathType death_types(int index) const;
  void set_death_types(int index, ::mruv::DeathType value);
  void add_death_types(::mruv::DeathType value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& death_types() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_death_types();

  // @@protoc_insertion_point(class_scope:mruv.DeathStreamRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> death_types_;
  mutable std::atomic<int> _death_types_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_characters_2fcharacters_2eproto;
};
// -------------------------------------------------------------------

class DeathStreamResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.DeathStreamResponse) */ {
 public:
  DeathStreamResponse();
  virtual ~DeathStreamResponse();

  DeathStreamResponse(const DeathStreamResponse& from);
  DeathStreamResponse(DeathStreamResponse&& from) noexcept
    : DeathStreamResponse() {
    *this = ::std::move(from);
  }

  inline DeathStreamResponse& operator=(const DeathStreamResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeathStreamResponse& operator=(DeathStreamResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeathStreamResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeathStreamResponse* internal_default_instance() {
    return reinterpret_cast<const DeathStreamResponse*>(
               &_DeathStreamResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DeathStreamResponse& a, DeathStreamResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeathStreamResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeathStreamResponse* New() const final {
    return CreateMaybeMessage<DeathStreamResponse>(nullptr);
  }

  DeathStreamResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeathStreamResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeathStreamResponse& from);
  void MergeFrom(const DeathStreamResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeathStreamResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.DeathStreamResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_characters_2fcharacters_2eproto);
    return ::descriptor_table_characters_2fcharacters_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharacterFieldNumber = 1,
    kDeathTypeFieldNumber = 2,
  };
  // .mruv.Character character = 1;
  bool has_character() const;
  private:
  bool _internal_has_character() const;
  public:
  void clear_character();
  const ::mruv::Character& character() const;
  ::mruv::Character* release_character();
  ::mruv::Character* mutable_character();
  void set_allocated_character(::mruv::Character* character);
  private:
  const ::mruv::Character& _internal_character() const;
  ::mruv::Character* _internal_mutable_character();
  public:

  // .mruv.DeathType death_type = 2;
  void clear_death_type();
  ::mruv::DeathType death_type() const;
  void set_death_type(::mruv::DeathType value);
  private:
  ::mruv::DeathType _internal_death_type() const;
  void _internal_set_death_type(::mruv::DeathType value);
  public:

  // @@protoc_insertion_point(class_scope:mruv.DeathStreamResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::mruv::Character* character_;
  int death_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_characters_2fcharacters_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DeathStreamRequest

// repeated .mruv.DeathType death_types = 1;
inline int DeathStreamRequest::_internal_death_types_size() const {
  return death_types_.size();
}
inline int DeathStreamRequest::death_types_size() const {
  return _internal_death_types_size();
}
inline void DeathStreamRequest::clear_death_types() {
  death_types_.Clear();
}
inline ::mruv::DeathType DeathStreamRequest::_internal_death_types(int index) const {
  return static_cast< ::mruv::DeathType >(death_types_.Get(index));
}
inline ::mruv::DeathType DeathStreamRequest::death_types(int index) const {
  // @@protoc_insertion_point(field_get:mruv.DeathStreamRequest.death_types)
  return _internal_death_types(index);
}
inline void DeathStreamRequest::set_death_types(int index, ::mruv::DeathType value) {
  death_types_.Set(index, value);
  // @@protoc_insertion_point(field_set:mruv.DeathStreamRequest.death_types)
}
inline void DeathStreamRequest::_internal_add_death_types(::mruv::DeathType value) {
  death_types_.Add(value);
}
inline void DeathStreamRequest::add_death_types(::mruv::DeathType value) {
  // @@protoc_insertion_point(field_add:mruv.DeathStreamRequest.death_types)
  _internal_add_death_types(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
DeathStreamRequest::death_types() const {
  // @@protoc_insertion_point(field_list:mruv.DeathStreamRequest.death_types)
  return death_types_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
DeathStreamRequest::_internal_mutable_death_types() {
  return &death_types_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
DeathStreamRequest::mutable_death_types() {
  // @@protoc_insertion_point(field_mutable_list:mruv.DeathStreamRequest.death_types)
  return _internal_mutable_death_types();
}

// -------------------------------------------------------------------

// DeathStreamResponse

// .mruv.Character character = 1;
inline bool DeathStreamResponse::_internal_has_character() const {
  return this != internal_default_instance() && character_ != nullptr;
}
inline bool DeathStreamResponse::has_character() const {
  return _internal_has_character();
}
inline const ::mruv::Character& DeathStreamResponse::_internal_character() const {
  const ::mruv::Character* p = character_;
  return p != nullptr ? *p : *reinterpret_cast<const ::mruv::Character*>(
      &::mruv::_Character_default_instance_);
}
inline const ::mruv::Character& DeathStreamResponse::character() const {
  // @@protoc_insertion_point(field_get:mruv.DeathStreamResponse.character)
  return _internal_character();
}
inline ::mruv::Character* DeathStreamResponse::release_character() {
  // @@protoc_insertion_point(field_release:mruv.DeathStreamResponse.character)
  
  ::mruv::Character* temp = character_;
  character_ = nullptr;
  return temp;
}
inline ::mruv::Character* DeathStreamResponse::_internal_mutable_character() {
  
  if (character_ == nullptr) {
    auto* p = CreateMaybeMessage<::mruv::Character>(GetArenaNoVirtual());
    character_ = p;
  }
  return character_;
}
inline ::mruv::Character* DeathStreamResponse::mutable_character() {
  // @@protoc_insertion_point(field_mutable:mruv.DeathStreamResponse.character)
  return _internal_mutable_character();
}
inline void DeathStreamResponse::set_allocated_character(::mruv::Character* character) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(character_);
  }
  if (character) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      character = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, character, submessage_arena);
    }
    
  } else {
    
  }
  character_ = character;
  // @@protoc_insertion_point(field_set_allocated:mruv.DeathStreamResponse.character)
}

// .mruv.DeathType death_type = 2;
inline void DeathStreamResponse::clear_death_type() {
  death_type_ = 0;
}
inline ::mruv::DeathType DeathStreamResponse::_internal_death_type() const {
  return static_cast< ::mruv::DeathType >(death_type_);
}
inline ::mruv::DeathType DeathStreamResponse::death_type() const {
  // @@protoc_insertion_point(field_get:mruv.DeathStreamResponse.death_type)
  return _internal_death_type();
}
inline void DeathStreamResponse::_internal_set_death_type(::mruv::DeathType value) {
  
  death_type_ = value;
}
inline void DeathStreamResponse::set_death_type(::mruv::DeathType value) {
  _internal_set_death_type(value);
  // @@protoc_insertion_point(field_set:mruv.DeathStreamResponse.death_type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mruv

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_characters_2fcharacters_2eproto
