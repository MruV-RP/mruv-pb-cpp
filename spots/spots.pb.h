// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spots/spots.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_spots_2fspots_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_spots_2fspots_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_spots_2fspots_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_spots_2fspots_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_spots_2fspots_2eproto;
namespace mruv {
namespace spots {
class CreateSpotRequest;
class CreateSpotRequestDefaultTypeInternal;
extern CreateSpotRequestDefaultTypeInternal _CreateSpotRequest_default_instance_;
class CreateSpotResponse;
class CreateSpotResponseDefaultTypeInternal;
extern CreateSpotResponseDefaultTypeInternal _CreateSpotResponse_default_instance_;
class DeleteSpotRequest;
class DeleteSpotRequestDefaultTypeInternal;
extern DeleteSpotRequestDefaultTypeInternal _DeleteSpotRequest_default_instance_;
class DeleteSpotResponse;
class DeleteSpotResponseDefaultTypeInternal;
extern DeleteSpotResponseDefaultTypeInternal _DeleteSpotResponse_default_instance_;
class GetSpotRequest;
class GetSpotRequestDefaultTypeInternal;
extern GetSpotRequestDefaultTypeInternal _GetSpotRequest_default_instance_;
class GetSpotResponse;
class GetSpotResponseDefaultTypeInternal;
extern GetSpotResponseDefaultTypeInternal _GetSpotResponse_default_instance_;
class UpdateSpotRequest;
class UpdateSpotRequestDefaultTypeInternal;
extern UpdateSpotRequestDefaultTypeInternal _UpdateSpotRequest_default_instance_;
class UpdateSpotResponse;
class UpdateSpotResponseDefaultTypeInternal;
extern UpdateSpotResponseDefaultTypeInternal _UpdateSpotResponse_default_instance_;
}  // namespace spots
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> ::mruv::spots::CreateSpotRequest* Arena::CreateMaybeMessage<::mruv::spots::CreateSpotRequest>(Arena*);
template<> ::mruv::spots::CreateSpotResponse* Arena::CreateMaybeMessage<::mruv::spots::CreateSpotResponse>(Arena*);
template<> ::mruv::spots::DeleteSpotRequest* Arena::CreateMaybeMessage<::mruv::spots::DeleteSpotRequest>(Arena*);
template<> ::mruv::spots::DeleteSpotResponse* Arena::CreateMaybeMessage<::mruv::spots::DeleteSpotResponse>(Arena*);
template<> ::mruv::spots::GetSpotRequest* Arena::CreateMaybeMessage<::mruv::spots::GetSpotRequest>(Arena*);
template<> ::mruv::spots::GetSpotResponse* Arena::CreateMaybeMessage<::mruv::spots::GetSpotResponse>(Arena*);
template<> ::mruv::spots::UpdateSpotRequest* Arena::CreateMaybeMessage<::mruv::spots::UpdateSpotRequest>(Arena*);
template<> ::mruv::spots::UpdateSpotResponse* Arena::CreateMaybeMessage<::mruv::spots::UpdateSpotResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mruv {
namespace spots {

// ===================================================================

class CreateSpotRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.spots.CreateSpotRequest) */ {
 public:
  CreateSpotRequest();
  virtual ~CreateSpotRequest();

  CreateSpotRequest(const CreateSpotRequest& from);
  CreateSpotRequest(CreateSpotRequest&& from) noexcept
    : CreateSpotRequest() {
    *this = ::std::move(from);
  }

  inline CreateSpotRequest& operator=(const CreateSpotRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSpotRequest& operator=(CreateSpotRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateSpotRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateSpotRequest* internal_default_instance() {
    return reinterpret_cast<const CreateSpotRequest*>(
               &_CreateSpotRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CreateSpotRequest& a, CreateSpotRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateSpotRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateSpotRequest* New() const final {
    return CreateMaybeMessage<CreateSpotRequest>(nullptr);
  }

  CreateSpotRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateSpotRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateSpotRequest& from);
  void MergeFrom(const CreateSpotRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateSpotRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.spots.CreateSpotRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_spots_2fspots_2eproto);
    return ::descriptor_table_spots_2fspots_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kMessageFieldNumber = 2,
    kIconFieldNumber = 3,
    kMarkerFieldNumber = 4,
    kXFieldNumber = 5,
    kYFieldNumber = 6,
    kZFieldNumber = 7,
    kVwFieldNumber = 8,
    kIntFieldNumber = 9,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string message = 2;
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // int32 icon = 3;
  void clear_icon();
  ::PROTOBUF_NAMESPACE_ID::int32 icon() const;
  void set_icon(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_icon() const;
  void _internal_set_icon(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 marker = 4;
  void clear_marker();
  ::PROTOBUF_NAMESPACE_ID::int32 marker() const;
  void set_marker(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_marker() const;
  void _internal_set_marker(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float x = 5;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 6;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 7;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // int32 vw = 8;
  void clear_vw();
  ::PROTOBUF_NAMESPACE_ID::int32 vw() const;
  void set_vw(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vw() const;
  void _internal_set_vw(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 int = 9;
  void clear_int_();
  ::PROTOBUF_NAMESPACE_ID::int32 int_() const;
  void set_int_(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_() const;
  void _internal_set_int_(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:mruv.spots.CreateSpotRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::int32 icon_;
  ::PROTOBUF_NAMESPACE_ID::int32 marker_;
  float x_;
  float y_;
  float z_;
  ::PROTOBUF_NAMESPACE_ID::int32 vw_;
  ::PROTOBUF_NAMESPACE_ID::int32 int__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_spots_2fspots_2eproto;
};
// -------------------------------------------------------------------

class CreateSpotResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.spots.CreateSpotResponse) */ {
 public:
  CreateSpotResponse();
  virtual ~CreateSpotResponse();

  CreateSpotResponse(const CreateSpotResponse& from);
  CreateSpotResponse(CreateSpotResponse&& from) noexcept
    : CreateSpotResponse() {
    *this = ::std::move(from);
  }

  inline CreateSpotResponse& operator=(const CreateSpotResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSpotResponse& operator=(CreateSpotResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateSpotResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateSpotResponse* internal_default_instance() {
    return reinterpret_cast<const CreateSpotResponse*>(
               &_CreateSpotResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CreateSpotResponse& a, CreateSpotResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateSpotResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateSpotResponse* New() const final {
    return CreateMaybeMessage<CreateSpotResponse>(nullptr);
  }

  CreateSpotResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateSpotResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateSpotResponse& from);
  void MergeFrom(const CreateSpotResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateSpotResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.spots.CreateSpotResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_spots_2fspots_2eproto);
    return ::descriptor_table_spots_2fspots_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:mruv.spots.CreateSpotResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_spots_2fspots_2eproto;
};
// -------------------------------------------------------------------

class GetSpotRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.spots.GetSpotRequest) */ {
 public:
  GetSpotRequest();
  virtual ~GetSpotRequest();

  GetSpotRequest(const GetSpotRequest& from);
  GetSpotRequest(GetSpotRequest&& from) noexcept
    : GetSpotRequest() {
    *this = ::std::move(from);
  }

  inline GetSpotRequest& operator=(const GetSpotRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSpotRequest& operator=(GetSpotRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetSpotRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSpotRequest* internal_default_instance() {
    return reinterpret_cast<const GetSpotRequest*>(
               &_GetSpotRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetSpotRequest& a, GetSpotRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSpotRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSpotRequest* New() const final {
    return CreateMaybeMessage<GetSpotRequest>(nullptr);
  }

  GetSpotRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSpotRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetSpotRequest& from);
  void MergeFrom(const GetSpotRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSpotRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.spots.GetSpotRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_spots_2fspots_2eproto);
    return ::descriptor_table_spots_2fspots_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:mruv.spots.GetSpotRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_spots_2fspots_2eproto;
};
// -------------------------------------------------------------------

class GetSpotResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.spots.GetSpotResponse) */ {
 public:
  GetSpotResponse();
  virtual ~GetSpotResponse();

  GetSpotResponse(const GetSpotResponse& from);
  GetSpotResponse(GetSpotResponse&& from) noexcept
    : GetSpotResponse() {
    *this = ::std::move(from);
  }

  inline GetSpotResponse& operator=(const GetSpotResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSpotResponse& operator=(GetSpotResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetSpotResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSpotResponse* internal_default_instance() {
    return reinterpret_cast<const GetSpotResponse*>(
               &_GetSpotResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetSpotResponse& a, GetSpotResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSpotResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSpotResponse* New() const final {
    return CreateMaybeMessage<GetSpotResponse>(nullptr);
  }

  GetSpotResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSpotResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetSpotResponse& from);
  void MergeFrom(const GetSpotResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSpotResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.spots.GetSpotResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_spots_2fspots_2eproto);
    return ::descriptor_table_spots_2fspots_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kMessageFieldNumber = 2,
    kIconFieldNumber = 3,
    kMarkerFieldNumber = 4,
    kXFieldNumber = 5,
    kYFieldNumber = 6,
    kZFieldNumber = 7,
    kVwFieldNumber = 8,
    kIntFieldNumber = 9,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string message = 2;
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // int32 icon = 3;
  void clear_icon();
  ::PROTOBUF_NAMESPACE_ID::int32 icon() const;
  void set_icon(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_icon() const;
  void _internal_set_icon(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 marker = 4;
  void clear_marker();
  ::PROTOBUF_NAMESPACE_ID::int32 marker() const;
  void set_marker(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_marker() const;
  void _internal_set_marker(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float x = 5;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 6;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 7;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // int32 vw = 8;
  void clear_vw();
  ::PROTOBUF_NAMESPACE_ID::int32 vw() const;
  void set_vw(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vw() const;
  void _internal_set_vw(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 int = 9;
  void clear_int_();
  ::PROTOBUF_NAMESPACE_ID::int32 int_() const;
  void set_int_(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_() const;
  void _internal_set_int_(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:mruv.spots.GetSpotResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::int32 icon_;
  ::PROTOBUF_NAMESPACE_ID::int32 marker_;
  float x_;
  float y_;
  float z_;
  ::PROTOBUF_NAMESPACE_ID::int32 vw_;
  ::PROTOBUF_NAMESPACE_ID::int32 int__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_spots_2fspots_2eproto;
};
// -------------------------------------------------------------------

class UpdateSpotRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.spots.UpdateSpotRequest) */ {
 public:
  UpdateSpotRequest();
  virtual ~UpdateSpotRequest();

  UpdateSpotRequest(const UpdateSpotRequest& from);
  UpdateSpotRequest(UpdateSpotRequest&& from) noexcept
    : UpdateSpotRequest() {
    *this = ::std::move(from);
  }

  inline UpdateSpotRequest& operator=(const UpdateSpotRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSpotRequest& operator=(UpdateSpotRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateSpotRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateSpotRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateSpotRequest*>(
               &_UpdateSpotRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(UpdateSpotRequest& a, UpdateSpotRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateSpotRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateSpotRequest* New() const final {
    return CreateMaybeMessage<UpdateSpotRequest>(nullptr);
  }

  UpdateSpotRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateSpotRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateSpotRequest& from);
  void MergeFrom(const UpdateSpotRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateSpotRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.spots.UpdateSpotRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_spots_2fspots_2eproto);
    return ::descriptor_table_spots_2fspots_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kMessageFieldNumber = 3,
    kIdFieldNumber = 1,
    kIconFieldNumber = 4,
    kMarkerFieldNumber = 5,
    kXFieldNumber = 6,
    kYFieldNumber = 7,
    kZFieldNumber = 8,
    kVwFieldNumber = 9,
    kIntFieldNumber = 10,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string message = 3;
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 icon = 4;
  void clear_icon();
  ::PROTOBUF_NAMESPACE_ID::int32 icon() const;
  void set_icon(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_icon() const;
  void _internal_set_icon(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 marker = 5;
  void clear_marker();
  ::PROTOBUF_NAMESPACE_ID::int32 marker() const;
  void set_marker(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_marker() const;
  void _internal_set_marker(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float x = 6;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 7;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 8;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // int32 vw = 9;
  void clear_vw();
  ::PROTOBUF_NAMESPACE_ID::int32 vw() const;
  void set_vw(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vw() const;
  void _internal_set_vw(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 int = 10;
  void clear_int_();
  ::PROTOBUF_NAMESPACE_ID::int32 int_() const;
  void set_int_(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_() const;
  void _internal_set_int_(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:mruv.spots.UpdateSpotRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 icon_;
  ::PROTOBUF_NAMESPACE_ID::int32 marker_;
  float x_;
  float y_;
  float z_;
  ::PROTOBUF_NAMESPACE_ID::int32 vw_;
  ::PROTOBUF_NAMESPACE_ID::int32 int__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_spots_2fspots_2eproto;
};
// -------------------------------------------------------------------

class UpdateSpotResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.spots.UpdateSpotResponse) */ {
 public:
  UpdateSpotResponse();
  virtual ~UpdateSpotResponse();

  UpdateSpotResponse(const UpdateSpotResponse& from);
  UpdateSpotResponse(UpdateSpotResponse&& from) noexcept
    : UpdateSpotResponse() {
    *this = ::std::move(from);
  }

  inline UpdateSpotResponse& operator=(const UpdateSpotResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSpotResponse& operator=(UpdateSpotResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateSpotResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateSpotResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateSpotResponse*>(
               &_UpdateSpotResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(UpdateSpotResponse& a, UpdateSpotResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateSpotResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateSpotResponse* New() const final {
    return CreateMaybeMessage<UpdateSpotResponse>(nullptr);
  }

  UpdateSpotResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateSpotResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateSpotResponse& from);
  void MergeFrom(const UpdateSpotResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateSpotResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.spots.UpdateSpotResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_spots_2fspots_2eproto);
    return ::descriptor_table_spots_2fspots_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mruv.spots.UpdateSpotResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_spots_2fspots_2eproto;
};
// -------------------------------------------------------------------

class DeleteSpotRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.spots.DeleteSpotRequest) */ {
 public:
  DeleteSpotRequest();
  virtual ~DeleteSpotRequest();

  DeleteSpotRequest(const DeleteSpotRequest& from);
  DeleteSpotRequest(DeleteSpotRequest&& from) noexcept
    : DeleteSpotRequest() {
    *this = ::std::move(from);
  }

  inline DeleteSpotRequest& operator=(const DeleteSpotRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSpotRequest& operator=(DeleteSpotRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteSpotRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteSpotRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteSpotRequest*>(
               &_DeleteSpotRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DeleteSpotRequest& a, DeleteSpotRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteSpotRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteSpotRequest* New() const final {
    return CreateMaybeMessage<DeleteSpotRequest>(nullptr);
  }

  DeleteSpotRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteSpotRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteSpotRequest& from);
  void MergeFrom(const DeleteSpotRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteSpotRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.spots.DeleteSpotRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_spots_2fspots_2eproto);
    return ::descriptor_table_spots_2fspots_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:mruv.spots.DeleteSpotRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_spots_2fspots_2eproto;
};
// -------------------------------------------------------------------

class DeleteSpotResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.spots.DeleteSpotResponse) */ {
 public:
  DeleteSpotResponse();
  virtual ~DeleteSpotResponse();

  DeleteSpotResponse(const DeleteSpotResponse& from);
  DeleteSpotResponse(DeleteSpotResponse&& from) noexcept
    : DeleteSpotResponse() {
    *this = ::std::move(from);
  }

  inline DeleteSpotResponse& operator=(const DeleteSpotResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSpotResponse& operator=(DeleteSpotResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteSpotResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteSpotResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteSpotResponse*>(
               &_DeleteSpotResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DeleteSpotResponse& a, DeleteSpotResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteSpotResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteSpotResponse* New() const final {
    return CreateMaybeMessage<DeleteSpotResponse>(nullptr);
  }

  DeleteSpotResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteSpotResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteSpotResponse& from);
  void MergeFrom(const DeleteSpotResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteSpotResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.spots.DeleteSpotResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_spots_2fspots_2eproto);
    return ::descriptor_table_spots_2fspots_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mruv.spots.DeleteSpotResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_spots_2fspots_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateSpotRequest

// string name = 1;
inline void CreateSpotRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CreateSpotRequest::name() const {
  // @@protoc_insertion_point(field_get:mruv.spots.CreateSpotRequest.name)
  return _internal_name();
}
inline void CreateSpotRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:mruv.spots.CreateSpotRequest.name)
}
inline std::string* CreateSpotRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:mruv.spots.CreateSpotRequest.name)
  return _internal_mutable_name();
}
inline const std::string& CreateSpotRequest::_internal_name() const {
  return name_.GetNoArena();
}
inline void CreateSpotRequest::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CreateSpotRequest::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mruv.spots.CreateSpotRequest.name)
}
inline void CreateSpotRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mruv.spots.CreateSpotRequest.name)
}
inline void CreateSpotRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mruv.spots.CreateSpotRequest.name)
}
inline std::string* CreateSpotRequest::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CreateSpotRequest::release_name() {
  // @@protoc_insertion_point(field_release:mruv.spots.CreateSpotRequest.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CreateSpotRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mruv.spots.CreateSpotRequest.name)
}

// string message = 2;
inline void CreateSpotRequest::clear_message() {
  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CreateSpotRequest::message() const {
  // @@protoc_insertion_point(field_get:mruv.spots.CreateSpotRequest.message)
  return _internal_message();
}
inline void CreateSpotRequest::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:mruv.spots.CreateSpotRequest.message)
}
inline std::string* CreateSpotRequest::mutable_message() {
  // @@protoc_insertion_point(field_mutable:mruv.spots.CreateSpotRequest.message)
  return _internal_mutable_message();
}
inline const std::string& CreateSpotRequest::_internal_message() const {
  return message_.GetNoArena();
}
inline void CreateSpotRequest::_internal_set_message(const std::string& value) {
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CreateSpotRequest::set_message(std::string&& value) {
  
  message_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mruv.spots.CreateSpotRequest.message)
}
inline void CreateSpotRequest::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mruv.spots.CreateSpotRequest.message)
}
inline void CreateSpotRequest::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mruv.spots.CreateSpotRequest.message)
}
inline std::string* CreateSpotRequest::_internal_mutable_message() {
  
  return message_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CreateSpotRequest::release_message() {
  // @@protoc_insertion_point(field_release:mruv.spots.CreateSpotRequest.message)
  
  return message_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CreateSpotRequest::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mruv.spots.CreateSpotRequest.message)
}

// int32 icon = 3;
inline void CreateSpotRequest::clear_icon() {
  icon_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateSpotRequest::_internal_icon() const {
  return icon_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateSpotRequest::icon() const {
  // @@protoc_insertion_point(field_get:mruv.spots.CreateSpotRequest.icon)
  return _internal_icon();
}
inline void CreateSpotRequest::_internal_set_icon(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  icon_ = value;
}
inline void CreateSpotRequest::set_icon(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_icon(value);
  // @@protoc_insertion_point(field_set:mruv.spots.CreateSpotRequest.icon)
}

// int32 marker = 4;
inline void CreateSpotRequest::clear_marker() {
  marker_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateSpotRequest::_internal_marker() const {
  return marker_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateSpotRequest::marker() const {
  // @@protoc_insertion_point(field_get:mruv.spots.CreateSpotRequest.marker)
  return _internal_marker();
}
inline void CreateSpotRequest::_internal_set_marker(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  marker_ = value;
}
inline void CreateSpotRequest::set_marker(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_marker(value);
  // @@protoc_insertion_point(field_set:mruv.spots.CreateSpotRequest.marker)
}

// float x = 5;
inline void CreateSpotRequest::clear_x() {
  x_ = 0;
}
inline float CreateSpotRequest::_internal_x() const {
  return x_;
}
inline float CreateSpotRequest::x() const {
  // @@protoc_insertion_point(field_get:mruv.spots.CreateSpotRequest.x)
  return _internal_x();
}
inline void CreateSpotRequest::_internal_set_x(float value) {
  
  x_ = value;
}
inline void CreateSpotRequest::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:mruv.spots.CreateSpotRequest.x)
}

// float y = 6;
inline void CreateSpotRequest::clear_y() {
  y_ = 0;
}
inline float CreateSpotRequest::_internal_y() const {
  return y_;
}
inline float CreateSpotRequest::y() const {
  // @@protoc_insertion_point(field_get:mruv.spots.CreateSpotRequest.y)
  return _internal_y();
}
inline void CreateSpotRequest::_internal_set_y(float value) {
  
  y_ = value;
}
inline void CreateSpotRequest::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:mruv.spots.CreateSpotRequest.y)
}

// float z = 7;
inline void CreateSpotRequest::clear_z() {
  z_ = 0;
}
inline float CreateSpotRequest::_internal_z() const {
  return z_;
}
inline float CreateSpotRequest::z() const {
  // @@protoc_insertion_point(field_get:mruv.spots.CreateSpotRequest.z)
  return _internal_z();
}
inline void CreateSpotRequest::_internal_set_z(float value) {
  
  z_ = value;
}
inline void CreateSpotRequest::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:mruv.spots.CreateSpotRequest.z)
}

// int32 vw = 8;
inline void CreateSpotRequest::clear_vw() {
  vw_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateSpotRequest::_internal_vw() const {
  return vw_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateSpotRequest::vw() const {
  // @@protoc_insertion_point(field_get:mruv.spots.CreateSpotRequest.vw)
  return _internal_vw();
}
inline void CreateSpotRequest::_internal_set_vw(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vw_ = value;
}
inline void CreateSpotRequest::set_vw(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vw(value);
  // @@protoc_insertion_point(field_set:mruv.spots.CreateSpotRequest.vw)
}

// int32 int = 9;
inline void CreateSpotRequest::clear_int_() {
  int__ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateSpotRequest::_internal_int_() const {
  return int__;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CreateSpotRequest::int_() const {
  // @@protoc_insertion_point(field_get:mruv.spots.CreateSpotRequest.int)
  return _internal_int_();
}
inline void CreateSpotRequest::_internal_set_int_(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  int__ = value;
}
inline void CreateSpotRequest::set_int_(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int_(value);
  // @@protoc_insertion_point(field_set:mruv.spots.CreateSpotRequest.int)
}

// -------------------------------------------------------------------

// CreateSpotResponse

// uint32 id = 1;
inline void CreateSpotResponse::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CreateSpotResponse::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CreateSpotResponse::id() const {
  // @@protoc_insertion_point(field_get:mruv.spots.CreateSpotResponse.id)
  return _internal_id();
}
inline void CreateSpotResponse::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void CreateSpotResponse::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:mruv.spots.CreateSpotResponse.id)
}

// -------------------------------------------------------------------

// GetSpotRequest

// uint32 id = 1;
inline void GetSpotRequest::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSpotRequest::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSpotRequest::id() const {
  // @@protoc_insertion_point(field_get:mruv.spots.GetSpotRequest.id)
  return _internal_id();
}
inline void GetSpotRequest::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void GetSpotRequest::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:mruv.spots.GetSpotRequest.id)
}

// -------------------------------------------------------------------

// GetSpotResponse

// string name = 1;
inline void GetSpotResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GetSpotResponse::name() const {
  // @@protoc_insertion_point(field_get:mruv.spots.GetSpotResponse.name)
  return _internal_name();
}
inline void GetSpotResponse::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:mruv.spots.GetSpotResponse.name)
}
inline std::string* GetSpotResponse::mutable_name() {
  // @@protoc_insertion_point(field_mutable:mruv.spots.GetSpotResponse.name)
  return _internal_mutable_name();
}
inline const std::string& GetSpotResponse::_internal_name() const {
  return name_.GetNoArena();
}
inline void GetSpotResponse::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GetSpotResponse::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mruv.spots.GetSpotResponse.name)
}
inline void GetSpotResponse::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mruv.spots.GetSpotResponse.name)
}
inline void GetSpotResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mruv.spots.GetSpotResponse.name)
}
inline std::string* GetSpotResponse::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GetSpotResponse::release_name() {
  // @@protoc_insertion_point(field_release:mruv.spots.GetSpotResponse.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GetSpotResponse::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mruv.spots.GetSpotResponse.name)
}

// string message = 2;
inline void GetSpotResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GetSpotResponse::message() const {
  // @@protoc_insertion_point(field_get:mruv.spots.GetSpotResponse.message)
  return _internal_message();
}
inline void GetSpotResponse::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:mruv.spots.GetSpotResponse.message)
}
inline std::string* GetSpotResponse::mutable_message() {
  // @@protoc_insertion_point(field_mutable:mruv.spots.GetSpotResponse.message)
  return _internal_mutable_message();
}
inline const std::string& GetSpotResponse::_internal_message() const {
  return message_.GetNoArena();
}
inline void GetSpotResponse::_internal_set_message(const std::string& value) {
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GetSpotResponse::set_message(std::string&& value) {
  
  message_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mruv.spots.GetSpotResponse.message)
}
inline void GetSpotResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mruv.spots.GetSpotResponse.message)
}
inline void GetSpotResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mruv.spots.GetSpotResponse.message)
}
inline std::string* GetSpotResponse::_internal_mutable_message() {
  
  return message_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GetSpotResponse::release_message() {
  // @@protoc_insertion_point(field_release:mruv.spots.GetSpotResponse.message)
  
  return message_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GetSpotResponse::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mruv.spots.GetSpotResponse.message)
}

// int32 icon = 3;
inline void GetSpotResponse::clear_icon() {
  icon_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetSpotResponse::_internal_icon() const {
  return icon_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetSpotResponse::icon() const {
  // @@protoc_insertion_point(field_get:mruv.spots.GetSpotResponse.icon)
  return _internal_icon();
}
inline void GetSpotResponse::_internal_set_icon(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  icon_ = value;
}
inline void GetSpotResponse::set_icon(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_icon(value);
  // @@protoc_insertion_point(field_set:mruv.spots.GetSpotResponse.icon)
}

// int32 marker = 4;
inline void GetSpotResponse::clear_marker() {
  marker_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetSpotResponse::_internal_marker() const {
  return marker_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetSpotResponse::marker() const {
  // @@protoc_insertion_point(field_get:mruv.spots.GetSpotResponse.marker)
  return _internal_marker();
}
inline void GetSpotResponse::_internal_set_marker(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  marker_ = value;
}
inline void GetSpotResponse::set_marker(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_marker(value);
  // @@protoc_insertion_point(field_set:mruv.spots.GetSpotResponse.marker)
}

// float x = 5;
inline void GetSpotResponse::clear_x() {
  x_ = 0;
}
inline float GetSpotResponse::_internal_x() const {
  return x_;
}
inline float GetSpotResponse::x() const {
  // @@protoc_insertion_point(field_get:mruv.spots.GetSpotResponse.x)
  return _internal_x();
}
inline void GetSpotResponse::_internal_set_x(float value) {
  
  x_ = value;
}
inline void GetSpotResponse::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:mruv.spots.GetSpotResponse.x)
}

// float y = 6;
inline void GetSpotResponse::clear_y() {
  y_ = 0;
}
inline float GetSpotResponse::_internal_y() const {
  return y_;
}
inline float GetSpotResponse::y() const {
  // @@protoc_insertion_point(field_get:mruv.spots.GetSpotResponse.y)
  return _internal_y();
}
inline void GetSpotResponse::_internal_set_y(float value) {
  
  y_ = value;
}
inline void GetSpotResponse::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:mruv.spots.GetSpotResponse.y)
}

// float z = 7;
inline void GetSpotResponse::clear_z() {
  z_ = 0;
}
inline float GetSpotResponse::_internal_z() const {
  return z_;
}
inline float GetSpotResponse::z() const {
  // @@protoc_insertion_point(field_get:mruv.spots.GetSpotResponse.z)
  return _internal_z();
}
inline void GetSpotResponse::_internal_set_z(float value) {
  
  z_ = value;
}
inline void GetSpotResponse::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:mruv.spots.GetSpotResponse.z)
}

// int32 vw = 8;
inline void GetSpotResponse::clear_vw() {
  vw_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetSpotResponse::_internal_vw() const {
  return vw_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetSpotResponse::vw() const {
  // @@protoc_insertion_point(field_get:mruv.spots.GetSpotResponse.vw)
  return _internal_vw();
}
inline void GetSpotResponse::_internal_set_vw(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vw_ = value;
}
inline void GetSpotResponse::set_vw(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vw(value);
  // @@protoc_insertion_point(field_set:mruv.spots.GetSpotResponse.vw)
}

// int32 int = 9;
inline void GetSpotResponse::clear_int_() {
  int__ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetSpotResponse::_internal_int_() const {
  return int__;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetSpotResponse::int_() const {
  // @@protoc_insertion_point(field_get:mruv.spots.GetSpotResponse.int)
  return _internal_int_();
}
inline void GetSpotResponse::_internal_set_int_(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  int__ = value;
}
inline void GetSpotResponse::set_int_(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int_(value);
  // @@protoc_insertion_point(field_set:mruv.spots.GetSpotResponse.int)
}

// -------------------------------------------------------------------

// UpdateSpotRequest

// uint32 id = 1;
inline void UpdateSpotRequest::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UpdateSpotRequest::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UpdateSpotRequest::id() const {
  // @@protoc_insertion_point(field_get:mruv.spots.UpdateSpotRequest.id)
  return _internal_id();
}
inline void UpdateSpotRequest::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void UpdateSpotRequest::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:mruv.spots.UpdateSpotRequest.id)
}

// string name = 2;
inline void UpdateSpotRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& UpdateSpotRequest::name() const {
  // @@protoc_insertion_point(field_get:mruv.spots.UpdateSpotRequest.name)
  return _internal_name();
}
inline void UpdateSpotRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:mruv.spots.UpdateSpotRequest.name)
}
inline std::string* UpdateSpotRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:mruv.spots.UpdateSpotRequest.name)
  return _internal_mutable_name();
}
inline const std::string& UpdateSpotRequest::_internal_name() const {
  return name_.GetNoArena();
}
inline void UpdateSpotRequest::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void UpdateSpotRequest::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mruv.spots.UpdateSpotRequest.name)
}
inline void UpdateSpotRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mruv.spots.UpdateSpotRequest.name)
}
inline void UpdateSpotRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mruv.spots.UpdateSpotRequest.name)
}
inline std::string* UpdateSpotRequest::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UpdateSpotRequest::release_name() {
  // @@protoc_insertion_point(field_release:mruv.spots.UpdateSpotRequest.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateSpotRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mruv.spots.UpdateSpotRequest.name)
}

// string message = 3;
inline void UpdateSpotRequest::clear_message() {
  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& UpdateSpotRequest::message() const {
  // @@protoc_insertion_point(field_get:mruv.spots.UpdateSpotRequest.message)
  return _internal_message();
}
inline void UpdateSpotRequest::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:mruv.spots.UpdateSpotRequest.message)
}
inline std::string* UpdateSpotRequest::mutable_message() {
  // @@protoc_insertion_point(field_mutable:mruv.spots.UpdateSpotRequest.message)
  return _internal_mutable_message();
}
inline const std::string& UpdateSpotRequest::_internal_message() const {
  return message_.GetNoArena();
}
inline void UpdateSpotRequest::_internal_set_message(const std::string& value) {
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void UpdateSpotRequest::set_message(std::string&& value) {
  
  message_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mruv.spots.UpdateSpotRequest.message)
}
inline void UpdateSpotRequest::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mruv.spots.UpdateSpotRequest.message)
}
inline void UpdateSpotRequest::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mruv.spots.UpdateSpotRequest.message)
}
inline std::string* UpdateSpotRequest::_internal_mutable_message() {
  
  return message_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UpdateSpotRequest::release_message() {
  // @@protoc_insertion_point(field_release:mruv.spots.UpdateSpotRequest.message)
  
  return message_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateSpotRequest::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mruv.spots.UpdateSpotRequest.message)
}

// int32 icon = 4;
inline void UpdateSpotRequest::clear_icon() {
  icon_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UpdateSpotRequest::_internal_icon() const {
  return icon_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UpdateSpotRequest::icon() const {
  // @@protoc_insertion_point(field_get:mruv.spots.UpdateSpotRequest.icon)
  return _internal_icon();
}
inline void UpdateSpotRequest::_internal_set_icon(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  icon_ = value;
}
inline void UpdateSpotRequest::set_icon(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_icon(value);
  // @@protoc_insertion_point(field_set:mruv.spots.UpdateSpotRequest.icon)
}

// int32 marker = 5;
inline void UpdateSpotRequest::clear_marker() {
  marker_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UpdateSpotRequest::_internal_marker() const {
  return marker_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UpdateSpotRequest::marker() const {
  // @@protoc_insertion_point(field_get:mruv.spots.UpdateSpotRequest.marker)
  return _internal_marker();
}
inline void UpdateSpotRequest::_internal_set_marker(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  marker_ = value;
}
inline void UpdateSpotRequest::set_marker(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_marker(value);
  // @@protoc_insertion_point(field_set:mruv.spots.UpdateSpotRequest.marker)
}

// float x = 6;
inline void UpdateSpotRequest::clear_x() {
  x_ = 0;
}
inline float UpdateSpotRequest::_internal_x() const {
  return x_;
}
inline float UpdateSpotRequest::x() const {
  // @@protoc_insertion_point(field_get:mruv.spots.UpdateSpotRequest.x)
  return _internal_x();
}
inline void UpdateSpotRequest::_internal_set_x(float value) {
  
  x_ = value;
}
inline void UpdateSpotRequest::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:mruv.spots.UpdateSpotRequest.x)
}

// float y = 7;
inline void UpdateSpotRequest::clear_y() {
  y_ = 0;
}
inline float UpdateSpotRequest::_internal_y() const {
  return y_;
}
inline float UpdateSpotRequest::y() const {
  // @@protoc_insertion_point(field_get:mruv.spots.UpdateSpotRequest.y)
  return _internal_y();
}
inline void UpdateSpotRequest::_internal_set_y(float value) {
  
  y_ = value;
}
inline void UpdateSpotRequest::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:mruv.spots.UpdateSpotRequest.y)
}

// float z = 8;
inline void UpdateSpotRequest::clear_z() {
  z_ = 0;
}
inline float UpdateSpotRequest::_internal_z() const {
  return z_;
}
inline float UpdateSpotRequest::z() const {
  // @@protoc_insertion_point(field_get:mruv.spots.UpdateSpotRequest.z)
  return _internal_z();
}
inline void UpdateSpotRequest::_internal_set_z(float value) {
  
  z_ = value;
}
inline void UpdateSpotRequest::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:mruv.spots.UpdateSpotRequest.z)
}

// int32 vw = 9;
inline void UpdateSpotRequest::clear_vw() {
  vw_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UpdateSpotRequest::_internal_vw() const {
  return vw_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UpdateSpotRequest::vw() const {
  // @@protoc_insertion_point(field_get:mruv.spots.UpdateSpotRequest.vw)
  return _internal_vw();
}
inline void UpdateSpotRequest::_internal_set_vw(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vw_ = value;
}
inline void UpdateSpotRequest::set_vw(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vw(value);
  // @@protoc_insertion_point(field_set:mruv.spots.UpdateSpotRequest.vw)
}

// int32 int = 10;
inline void UpdateSpotRequest::clear_int_() {
  int__ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UpdateSpotRequest::_internal_int_() const {
  return int__;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 UpdateSpotRequest::int_() const {
  // @@protoc_insertion_point(field_get:mruv.spots.UpdateSpotRequest.int)
  return _internal_int_();
}
inline void UpdateSpotRequest::_internal_set_int_(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  int__ = value;
}
inline void UpdateSpotRequest::set_int_(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int_(value);
  // @@protoc_insertion_point(field_set:mruv.spots.UpdateSpotRequest.int)
}

// -------------------------------------------------------------------

// UpdateSpotResponse

// -------------------------------------------------------------------

// DeleteSpotRequest

// uint32 id = 1;
inline void DeleteSpotRequest::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DeleteSpotRequest::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DeleteSpotRequest::id() const {
  // @@protoc_insertion_point(field_get:mruv.spots.DeleteSpotRequest.id)
  return _internal_id();
}
inline void DeleteSpotRequest::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void DeleteSpotRequest::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:mruv.spots.DeleteSpotRequest.id)
}

// -------------------------------------------------------------------

// DeleteSpotResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace spots
}  // namespace mruv

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_spots_2fspots_2eproto
