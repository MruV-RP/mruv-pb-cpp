// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spots/spots.proto

#include "spots/spots.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_spots_2fspots_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FetchAllSpotsResponse_SpotsEntry_DoNotUse_spots_2fspots_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_spots_2fspots_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Spot_spots_2fspots_2eproto;
namespace mruv {
namespace spots {
class SpotDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Spot> _instance;
} _Spot_default_instance_;
class CreateSpotRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateSpotRequest> _instance;
} _CreateSpotRequest_default_instance_;
class CreateSpotResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateSpotResponse> _instance;
} _CreateSpotResponse_default_instance_;
class GetSpotRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSpotRequest> _instance;
} _GetSpotRequest_default_instance_;
class GetSpotResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSpotResponse> _instance;
} _GetSpotResponse_default_instance_;
class UpdateSpotRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateSpotRequest> _instance;
} _UpdateSpotRequest_default_instance_;
class UpdateSpotResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateSpotResponse> _instance;
} _UpdateSpotResponse_default_instance_;
class DeleteSpotRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteSpotRequest> _instance;
} _DeleteSpotRequest_default_instance_;
class DeleteSpotResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteSpotResponse> _instance;
} _DeleteSpotResponse_default_instance_;
class FetchAllSpotsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FetchAllSpotsRequest> _instance;
} _FetchAllSpotsRequest_default_instance_;
class FetchAllSpotsResponse_SpotsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FetchAllSpotsResponse_SpotsEntry_DoNotUse> _instance;
} _FetchAllSpotsResponse_SpotsEntry_DoNotUse_default_instance_;
class FetchAllSpotsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FetchAllSpotsResponse> _instance;
} _FetchAllSpotsResponse_default_instance_;
}  // namespace spots
}  // namespace mruv
static void InitDefaultsscc_info_CreateSpotRequest_spots_2fspots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::spots::_CreateSpotRequest_default_instance_;
    new (ptr) ::mruv::spots::CreateSpotRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::spots::CreateSpotRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateSpotRequest_spots_2fspots_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateSpotRequest_spots_2fspots_2eproto}, {
      &scc_info_Spot_spots_2fspots_2eproto.base,}};

static void InitDefaultsscc_info_CreateSpotResponse_spots_2fspots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::spots::_CreateSpotResponse_default_instance_;
    new (ptr) ::mruv::spots::CreateSpotResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::spots::CreateSpotResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateSpotResponse_spots_2fspots_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateSpotResponse_spots_2fspots_2eproto}, {}};

static void InitDefaultsscc_info_DeleteSpotRequest_spots_2fspots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::spots::_DeleteSpotRequest_default_instance_;
    new (ptr) ::mruv::spots::DeleteSpotRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::spots::DeleteSpotRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteSpotRequest_spots_2fspots_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteSpotRequest_spots_2fspots_2eproto}, {}};

static void InitDefaultsscc_info_DeleteSpotResponse_spots_2fspots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::spots::_DeleteSpotResponse_default_instance_;
    new (ptr) ::mruv::spots::DeleteSpotResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::spots::DeleteSpotResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteSpotResponse_spots_2fspots_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteSpotResponse_spots_2fspots_2eproto}, {}};

static void InitDefaultsscc_info_FetchAllSpotsRequest_spots_2fspots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::spots::_FetchAllSpotsRequest_default_instance_;
    new (ptr) ::mruv::spots::FetchAllSpotsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::spots::FetchAllSpotsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FetchAllSpotsRequest_spots_2fspots_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FetchAllSpotsRequest_spots_2fspots_2eproto}, {}};

static void InitDefaultsscc_info_FetchAllSpotsResponse_spots_2fspots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::spots::_FetchAllSpotsResponse_default_instance_;
    new (ptr) ::mruv::spots::FetchAllSpotsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::spots::FetchAllSpotsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FetchAllSpotsResponse_spots_2fspots_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FetchAllSpotsResponse_spots_2fspots_2eproto}, {
      &scc_info_FetchAllSpotsResponse_SpotsEntry_DoNotUse_spots_2fspots_2eproto.base,}};

static void InitDefaultsscc_info_FetchAllSpotsResponse_SpotsEntry_DoNotUse_spots_2fspots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::spots::_FetchAllSpotsResponse_SpotsEntry_DoNotUse_default_instance_;
    new (ptr) ::mruv::spots::FetchAllSpotsResponse_SpotsEntry_DoNotUse();
  }
  ::mruv::spots::FetchAllSpotsResponse_SpotsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FetchAllSpotsResponse_SpotsEntry_DoNotUse_spots_2fspots_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FetchAllSpotsResponse_SpotsEntry_DoNotUse_spots_2fspots_2eproto}, {
      &scc_info_Spot_spots_2fspots_2eproto.base,}};

static void InitDefaultsscc_info_GetSpotRequest_spots_2fspots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::spots::_GetSpotRequest_default_instance_;
    new (ptr) ::mruv::spots::GetSpotRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::spots::GetSpotRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSpotRequest_spots_2fspots_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSpotRequest_spots_2fspots_2eproto}, {}};

static void InitDefaultsscc_info_GetSpotResponse_spots_2fspots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::spots::_GetSpotResponse_default_instance_;
    new (ptr) ::mruv::spots::GetSpotResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::spots::GetSpotResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSpotResponse_spots_2fspots_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetSpotResponse_spots_2fspots_2eproto}, {
      &scc_info_Spot_spots_2fspots_2eproto.base,}};

static void InitDefaultsscc_info_Spot_spots_2fspots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::spots::_Spot_default_instance_;
    new (ptr) ::mruv::spots::Spot();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::spots::Spot::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Spot_spots_2fspots_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Spot_spots_2fspots_2eproto}, {}};

static void InitDefaultsscc_info_UpdateSpotRequest_spots_2fspots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::spots::_UpdateSpotRequest_default_instance_;
    new (ptr) ::mruv::spots::UpdateSpotRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::spots::UpdateSpotRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateSpotRequest_spots_2fspots_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateSpotRequest_spots_2fspots_2eproto}, {
      &scc_info_Spot_spots_2fspots_2eproto.base,}};

static void InitDefaultsscc_info_UpdateSpotResponse_spots_2fspots_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::spots::_UpdateSpotResponse_default_instance_;
    new (ptr) ::mruv::spots::UpdateSpotResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::spots::UpdateSpotResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateSpotResponse_spots_2fspots_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateSpotResponse_spots_2fspots_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_spots_2fspots_2eproto[12];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_spots_2fspots_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_spots_2fspots_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_spots_2fspots_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::Spot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::Spot, name_),
  PROTOBUF_FIELD_OFFSET(::mruv::spots::Spot, message_),
  PROTOBUF_FIELD_OFFSET(::mruv::spots::Spot, icon_),
  PROTOBUF_FIELD_OFFSET(::mruv::spots::Spot, marker_),
  PROTOBUF_FIELD_OFFSET(::mruv::spots::Spot, x_),
  PROTOBUF_FIELD_OFFSET(::mruv::spots::Spot, y_),
  PROTOBUF_FIELD_OFFSET(::mruv::spots::Spot, z_),
  PROTOBUF_FIELD_OFFSET(::mruv::spots::Spot, vw_),
  PROTOBUF_FIELD_OFFSET(::mruv::spots::Spot, int__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::CreateSpotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::CreateSpotRequest, spot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::CreateSpotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::CreateSpotResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::GetSpotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::GetSpotRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::GetSpotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::GetSpotResponse, spot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::UpdateSpotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::UpdateSpotRequest, id_),
  PROTOBUF_FIELD_OFFSET(::mruv::spots::UpdateSpotRequest, spot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::UpdateSpotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::DeleteSpotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::DeleteSpotRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::DeleteSpotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::FetchAllSpotsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::FetchAllSpotsRequest, chunk_size_),
  PROTOBUF_FIELD_OFFSET(::mruv::spots::FetchAllSpotsResponse_SpotsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mruv::spots::FetchAllSpotsResponse_SpotsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::FetchAllSpotsResponse_SpotsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::mruv::spots::FetchAllSpotsResponse_SpotsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::FetchAllSpotsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::spots::FetchAllSpotsResponse, spots_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mruv::spots::Spot)},
  { 14, -1, sizeof(::mruv::spots::CreateSpotRequest)},
  { 20, -1, sizeof(::mruv::spots::CreateSpotResponse)},
  { 26, -1, sizeof(::mruv::spots::GetSpotRequest)},
  { 32, -1, sizeof(::mruv::spots::GetSpotResponse)},
  { 38, -1, sizeof(::mruv::spots::UpdateSpotRequest)},
  { 45, -1, sizeof(::mruv::spots::UpdateSpotResponse)},
  { 50, -1, sizeof(::mruv::spots::DeleteSpotRequest)},
  { 56, -1, sizeof(::mruv::spots::DeleteSpotResponse)},
  { 61, -1, sizeof(::mruv::spots::FetchAllSpotsRequest)},
  { 67, 74, sizeof(::mruv::spots::FetchAllSpotsResponse_SpotsEntry_DoNotUse)},
  { 76, -1, sizeof(::mruv::spots::FetchAllSpotsResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::spots::_Spot_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::spots::_CreateSpotRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::spots::_CreateSpotResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::spots::_GetSpotRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::spots::_GetSpotResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::spots::_UpdateSpotRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::spots::_UpdateSpotResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::spots::_DeleteSpotRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::spots::_DeleteSpotResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::spots::_FetchAllSpotsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::spots::_FetchAllSpotsResponse_SpotsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::spots::_FetchAllSpotsResponse_default_instance_),
};

const char descriptor_table_protodef_spots_2fspots_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021spots/spots.proto\022\nmruv.spots\032\034google/"
  "api/annotations.proto\"}\n\004Spot\022\014\n\004name\030\001 "
  "\001(\t\022\017\n\007message\030\002 \001(\t\022\014\n\004icon\030\003 \001(\005\022\016\n\006ma"
  "rker\030\004 \001(\005\022\t\n\001x\030\005 \001(\002\022\t\n\001y\030\006 \001(\002\022\t\n\001z\030\007 "
  "\001(\002\022\n\n\002vw\030\010 \001(\005\022\013\n\003int\030\t \001(\005\"3\n\021CreateSp"
  "otRequest\022\036\n\004spot\030\001 \001(\0132\020.mruv.spots.Spo"
  "t\" \n\022CreateSpotResponse\022\n\n\002id\030\001 \001(\r\"\034\n\016G"
  "etSpotRequest\022\n\n\002id\030\001 \001(\r\"1\n\017GetSpotResp"
  "onse\022\036\n\004spot\030\001 \001(\0132\020.mruv.spots.Spot\"\?\n\021"
  "UpdateSpotRequest\022\n\n\002id\030\001 \001(\r\022\036\n\004spot\030\002 "
  "\001(\0132\020.mruv.spots.Spot\"\024\n\022UpdateSpotRespo"
  "nse\"\037\n\021DeleteSpotRequest\022\n\n\002id\030\001 \001(\r\"\024\n\022"
  "DeleteSpotResponse\"*\n\024FetchAllSpotsReque"
  "st\022\022\n\nchunk_size\030\001 \001(\r\"\224\001\n\025FetchAllSpots"
  "Response\022;\n\005spots\030\001 \003(\0132,.mruv.spots.Fet"
  "chAllSpotsResponse.SpotsEntry\032>\n\nSpotsEn"
  "try\022\013\n\003key\030\001 \001(\r\022\037\n\005value\030\002 \001(\0132\020.mruv.s"
  "pots.Spot:\0028\0012\355\003\n\020MruVSpotsService\022^\n\nCr"
  "eateSpot\022\035.mruv.spots.CreateSpotRequest\032"
  "\036.mruv.spots.CreateSpotResponse\"\021\202\323\344\223\002\013\""
  "\t/v1/spots\022Z\n\007GetSpot\022\032.mruv.spots.GetSp"
  "otRequest\032\033.mruv.spots.GetSpotResponse\"\026"
  "\202\323\344\223\002\020\022\016/v1/spots/{id}\022c\n\nUpdateSpot\022\035.m"
  "ruv.spots.UpdateSpotRequest\032\036.mruv.spots"
  ".UpdateSpotResponse\"\026\202\323\344\223\002\0202\016/v1/spots/{"
  "id}\022c\n\nDeleteSpot\022\035.mruv.spots.DeleteSpo"
  "tRequest\032\036.mruv.spots.DeleteSpotResponse"
  "\"\026\202\323\344\223\002\020*\016/v1/spots/{id}\022S\n\010FetchAll\022 .m"
  "ruv.spots.FetchAllSpotsRequest\032!.mruv.sp"
  "ots.FetchAllSpotsResponse\"\0000\001B%Z#github."
  "com/MruV-RP/mruv-pb-go/spotsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_spots_2fspots_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_spots_2fspots_2eproto_sccs[12] = {
  &scc_info_CreateSpotRequest_spots_2fspots_2eproto.base,
  &scc_info_CreateSpotResponse_spots_2fspots_2eproto.base,
  &scc_info_DeleteSpotRequest_spots_2fspots_2eproto.base,
  &scc_info_DeleteSpotResponse_spots_2fspots_2eproto.base,
  &scc_info_FetchAllSpotsRequest_spots_2fspots_2eproto.base,
  &scc_info_FetchAllSpotsResponse_spots_2fspots_2eproto.base,
  &scc_info_FetchAllSpotsResponse_SpotsEntry_DoNotUse_spots_2fspots_2eproto.base,
  &scc_info_GetSpotRequest_spots_2fspots_2eproto.base,
  &scc_info_GetSpotResponse_spots_2fspots_2eproto.base,
  &scc_info_Spot_spots_2fspots_2eproto.base,
  &scc_info_UpdateSpotRequest_spots_2fspots_2eproto.base,
  &scc_info_UpdateSpotResponse_spots_2fspots_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_spots_2fspots_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_spots_2fspots_2eproto = {
  false, false, descriptor_table_protodef_spots_2fspots_2eproto, "spots/spots.proto", 1236,
  &descriptor_table_spots_2fspots_2eproto_once, descriptor_table_spots_2fspots_2eproto_sccs, descriptor_table_spots_2fspots_2eproto_deps, 12, 1,
  schemas, file_default_instances, TableStruct_spots_2fspots_2eproto::offsets,
  file_level_metadata_spots_2fspots_2eproto, 12, file_level_enum_descriptors_spots_2fspots_2eproto, file_level_service_descriptors_spots_2fspots_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_spots_2fspots_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_spots_2fspots_2eproto)), true);
namespace mruv {
namespace spots {

// ===================================================================

void Spot::InitAsDefaultInstance() {
}
class Spot::_Internal {
 public:
};

Spot::Spot(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.spots.Spot)
}
Spot::Spot(const Spot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message(),
      GetArena());
  }
  ::memcpy(&icon_, &from.icon_,
    static_cast<size_t>(reinterpret_cast<char*>(&int__) -
    reinterpret_cast<char*>(&icon_)) + sizeof(int__));
  // @@protoc_insertion_point(copy_constructor:mruv.spots.Spot)
}

void Spot::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Spot_spots_2fspots_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&icon_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&int__) -
      reinterpret_cast<char*>(&icon_)) + sizeof(int__));
}

Spot::~Spot() {
  // @@protoc_insertion_point(destructor:mruv.spots.Spot)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Spot::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Spot::ArenaDtor(void* object) {
  Spot* _this = reinterpret_cast< Spot* >(object);
  (void)_this;
}
void Spot::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Spot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Spot& Spot::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Spot_spots_2fspots_2eproto.base);
  return *internal_default_instance();
}


void Spot::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.spots.Spot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&icon_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&int__) -
      reinterpret_cast<char*>(&icon_)) + sizeof(int__));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Spot::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.spots.Spot.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.spots.Spot.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 icon = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          icon_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 marker = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          marker_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float x = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float z = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 vw = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          vw_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 int = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          int__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Spot::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.spots.Spot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.spots.Spot.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.spots.Spot.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // int32 icon = 3;
  if (this->icon() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_icon(), target);
  }

  // int32 marker = 4;
  if (this->marker() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_marker(), target);
  }

  // float x = 5;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_x(), target);
  }

  // float y = 6;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_y(), target);
  }

  // float z = 7;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_z(), target);
  }

  // int32 vw = 8;
  if (this->vw() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_vw(), target);
  }

  // int32 int = 9;
  if (this->int_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_int_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.spots.Spot)
  return target;
}

size_t Spot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.spots.Spot)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 icon = 3;
  if (this->icon() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_icon());
  }

  // int32 marker = 4;
  if (this->marker() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_marker());
  }

  // float x = 5;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 6;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float z = 7;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 vw = 8;
  if (this->vw() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_vw());
  }

  // int32 int = 9;
  if (this->int_() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_int_());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Spot::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.spots.Spot)
  GOOGLE_DCHECK_NE(&from, this);
  const Spot* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Spot>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.spots.Spot)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.spots.Spot)
    MergeFrom(*source);
  }
}

void Spot::MergeFrom(const Spot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.spots.Spot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
  if (from.icon() != 0) {
    _internal_set_icon(from._internal_icon());
  }
  if (from.marker() != 0) {
    _internal_set_marker(from._internal_marker());
  }
  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
  if (from.vw() != 0) {
    _internal_set_vw(from._internal_vw());
  }
  if (from.int_() != 0) {
    _internal_set_int_(from._internal_int_());
  }
}

void Spot::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.spots.Spot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Spot::CopyFrom(const Spot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.spots.Spot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Spot::IsInitialized() const {
  return true;
}

void Spot::InternalSwap(Spot* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Spot, int__)
      + sizeof(Spot::int__)
      - PROTOBUF_FIELD_OFFSET(Spot, icon_)>(
          reinterpret_cast<char*>(&icon_),
          reinterpret_cast<char*>(&other->icon_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Spot::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateSpotRequest::InitAsDefaultInstance() {
  ::mruv::spots::_CreateSpotRequest_default_instance_._instance.get_mutable()->spot_ = const_cast< ::mruv::spots::Spot*>(
      ::mruv::spots::Spot::internal_default_instance());
}
class CreateSpotRequest::_Internal {
 public:
  static const ::mruv::spots::Spot& spot(const CreateSpotRequest* msg);
};

const ::mruv::spots::Spot&
CreateSpotRequest::_Internal::spot(const CreateSpotRequest* msg) {
  return *msg->spot_;
}
CreateSpotRequest::CreateSpotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.spots.CreateSpotRequest)
}
CreateSpotRequest::CreateSpotRequest(const CreateSpotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spot()) {
    spot_ = new ::mruv::spots::Spot(*from.spot_);
  } else {
    spot_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.spots.CreateSpotRequest)
}

void CreateSpotRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateSpotRequest_spots_2fspots_2eproto.base);
  spot_ = nullptr;
}

CreateSpotRequest::~CreateSpotRequest() {
  // @@protoc_insertion_point(destructor:mruv.spots.CreateSpotRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateSpotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete spot_;
}

void CreateSpotRequest::ArenaDtor(void* object) {
  CreateSpotRequest* _this = reinterpret_cast< CreateSpotRequest* >(object);
  (void)_this;
}
void CreateSpotRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateSpotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateSpotRequest& CreateSpotRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateSpotRequest_spots_2fspots_2eproto.base);
  return *internal_default_instance();
}


void CreateSpotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.spots.CreateSpotRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && spot_ != nullptr) {
    delete spot_;
  }
  spot_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSpotRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.spots.Spot spot = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spot(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateSpotRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.spots.CreateSpotRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.spots.Spot spot = 1;
  if (this->has_spot()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::spot(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.spots.CreateSpotRequest)
  return target;
}

size_t CreateSpotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.spots.CreateSpotRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.spots.Spot spot = 1;
  if (this->has_spot()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *spot_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateSpotRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.spots.CreateSpotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateSpotRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateSpotRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.spots.CreateSpotRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.spots.CreateSpotRequest)
    MergeFrom(*source);
  }
}

void CreateSpotRequest::MergeFrom(const CreateSpotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.spots.CreateSpotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_spot()) {
    _internal_mutable_spot()->::mruv::spots::Spot::MergeFrom(from._internal_spot());
  }
}

void CreateSpotRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.spots.CreateSpotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSpotRequest::CopyFrom(const CreateSpotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.spots.CreateSpotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSpotRequest::IsInitialized() const {
  return true;
}

void CreateSpotRequest::InternalSwap(CreateSpotRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(spot_, other->spot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSpotRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateSpotResponse::InitAsDefaultInstance() {
}
class CreateSpotResponse::_Internal {
 public:
};

CreateSpotResponse::CreateSpotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.spots.CreateSpotResponse)
}
CreateSpotResponse::CreateSpotResponse(const CreateSpotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.spots.CreateSpotResponse)
}

void CreateSpotResponse::SharedCtor() {
  id_ = 0u;
}

CreateSpotResponse::~CreateSpotResponse() {
  // @@protoc_insertion_point(destructor:mruv.spots.CreateSpotResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateSpotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateSpotResponse::ArenaDtor(void* object) {
  CreateSpotResponse* _this = reinterpret_cast< CreateSpotResponse* >(object);
  (void)_this;
}
void CreateSpotResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateSpotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateSpotResponse& CreateSpotResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateSpotResponse_spots_2fspots_2eproto.base);
  return *internal_default_instance();
}


void CreateSpotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.spots.CreateSpotResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSpotResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateSpotResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.spots.CreateSpotResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.spots.CreateSpotResponse)
  return target;
}

size_t CreateSpotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.spots.CreateSpotResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateSpotResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.spots.CreateSpotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateSpotResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateSpotResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.spots.CreateSpotResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.spots.CreateSpotResponse)
    MergeFrom(*source);
  }
}

void CreateSpotResponse::MergeFrom(const CreateSpotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.spots.CreateSpotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void CreateSpotResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.spots.CreateSpotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSpotResponse::CopyFrom(const CreateSpotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.spots.CreateSpotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSpotResponse::IsInitialized() const {
  return true;
}

void CreateSpotResponse::InternalSwap(CreateSpotResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSpotResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSpotRequest::InitAsDefaultInstance() {
}
class GetSpotRequest::_Internal {
 public:
};

GetSpotRequest::GetSpotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.spots.GetSpotRequest)
}
GetSpotRequest::GetSpotRequest(const GetSpotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.spots.GetSpotRequest)
}

void GetSpotRequest::SharedCtor() {
  id_ = 0u;
}

GetSpotRequest::~GetSpotRequest() {
  // @@protoc_insertion_point(destructor:mruv.spots.GetSpotRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSpotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetSpotRequest::ArenaDtor(void* object) {
  GetSpotRequest* _this = reinterpret_cast< GetSpotRequest* >(object);
  (void)_this;
}
void GetSpotRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSpotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSpotRequest& GetSpotRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSpotRequest_spots_2fspots_2eproto.base);
  return *internal_default_instance();
}


void GetSpotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.spots.GetSpotRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSpotRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSpotRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.spots.GetSpotRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.spots.GetSpotRequest)
  return target;
}

size_t GetSpotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.spots.GetSpotRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSpotRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.spots.GetSpotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSpotRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSpotRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.spots.GetSpotRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.spots.GetSpotRequest)
    MergeFrom(*source);
  }
}

void GetSpotRequest::MergeFrom(const GetSpotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.spots.GetSpotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetSpotRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.spots.GetSpotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSpotRequest::CopyFrom(const GetSpotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.spots.GetSpotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSpotRequest::IsInitialized() const {
  return true;
}

void GetSpotRequest::InternalSwap(GetSpotRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSpotRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSpotResponse::InitAsDefaultInstance() {
  ::mruv::spots::_GetSpotResponse_default_instance_._instance.get_mutable()->spot_ = const_cast< ::mruv::spots::Spot*>(
      ::mruv::spots::Spot::internal_default_instance());
}
class GetSpotResponse::_Internal {
 public:
  static const ::mruv::spots::Spot& spot(const GetSpotResponse* msg);
};

const ::mruv::spots::Spot&
GetSpotResponse::_Internal::spot(const GetSpotResponse* msg) {
  return *msg->spot_;
}
GetSpotResponse::GetSpotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.spots.GetSpotResponse)
}
GetSpotResponse::GetSpotResponse(const GetSpotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spot()) {
    spot_ = new ::mruv::spots::Spot(*from.spot_);
  } else {
    spot_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mruv.spots.GetSpotResponse)
}

void GetSpotResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSpotResponse_spots_2fspots_2eproto.base);
  spot_ = nullptr;
}

GetSpotResponse::~GetSpotResponse() {
  // @@protoc_insertion_point(destructor:mruv.spots.GetSpotResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSpotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete spot_;
}

void GetSpotResponse::ArenaDtor(void* object) {
  GetSpotResponse* _this = reinterpret_cast< GetSpotResponse* >(object);
  (void)_this;
}
void GetSpotResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSpotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSpotResponse& GetSpotResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSpotResponse_spots_2fspots_2eproto.base);
  return *internal_default_instance();
}


void GetSpotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.spots.GetSpotResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && spot_ != nullptr) {
    delete spot_;
  }
  spot_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSpotResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.spots.Spot spot = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spot(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSpotResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.spots.GetSpotResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.spots.Spot spot = 1;
  if (this->has_spot()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::spot(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.spots.GetSpotResponse)
  return target;
}

size_t GetSpotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.spots.GetSpotResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.spots.Spot spot = 1;
  if (this->has_spot()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *spot_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSpotResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.spots.GetSpotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSpotResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSpotResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.spots.GetSpotResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.spots.GetSpotResponse)
    MergeFrom(*source);
  }
}

void GetSpotResponse::MergeFrom(const GetSpotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.spots.GetSpotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_spot()) {
    _internal_mutable_spot()->::mruv::spots::Spot::MergeFrom(from._internal_spot());
  }
}

void GetSpotResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.spots.GetSpotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSpotResponse::CopyFrom(const GetSpotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.spots.GetSpotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSpotResponse::IsInitialized() const {
  return true;
}

void GetSpotResponse::InternalSwap(GetSpotResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(spot_, other->spot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSpotResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateSpotRequest::InitAsDefaultInstance() {
  ::mruv::spots::_UpdateSpotRequest_default_instance_._instance.get_mutable()->spot_ = const_cast< ::mruv::spots::Spot*>(
      ::mruv::spots::Spot::internal_default_instance());
}
class UpdateSpotRequest::_Internal {
 public:
  static const ::mruv::spots::Spot& spot(const UpdateSpotRequest* msg);
};

const ::mruv::spots::Spot&
UpdateSpotRequest::_Internal::spot(const UpdateSpotRequest* msg) {
  return *msg->spot_;
}
UpdateSpotRequest::UpdateSpotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.spots.UpdateSpotRequest)
}
UpdateSpotRequest::UpdateSpotRequest(const UpdateSpotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spot()) {
    spot_ = new ::mruv::spots::Spot(*from.spot_);
  } else {
    spot_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.spots.UpdateSpotRequest)
}

void UpdateSpotRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateSpotRequest_spots_2fspots_2eproto.base);
  ::memset(&spot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&spot_)) + sizeof(id_));
}

UpdateSpotRequest::~UpdateSpotRequest() {
  // @@protoc_insertion_point(destructor:mruv.spots.UpdateSpotRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateSpotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete spot_;
}

void UpdateSpotRequest::ArenaDtor(void* object) {
  UpdateSpotRequest* _this = reinterpret_cast< UpdateSpotRequest* >(object);
  (void)_this;
}
void UpdateSpotRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateSpotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateSpotRequest& UpdateSpotRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateSpotRequest_spots_2fspots_2eproto.base);
  return *internal_default_instance();
}


void UpdateSpotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.spots.UpdateSpotRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && spot_ != nullptr) {
    delete spot_;
  }
  spot_ = nullptr;
  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSpotRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mruv.spots.Spot spot = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_spot(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateSpotRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.spots.UpdateSpotRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // .mruv.spots.Spot spot = 2;
  if (this->has_spot()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::spot(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.spots.UpdateSpotRequest)
  return target;
}

size_t UpdateSpotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.spots.UpdateSpotRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mruv.spots.Spot spot = 2;
  if (this->has_spot()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *spot_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateSpotRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.spots.UpdateSpotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateSpotRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateSpotRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.spots.UpdateSpotRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.spots.UpdateSpotRequest)
    MergeFrom(*source);
  }
}

void UpdateSpotRequest::MergeFrom(const UpdateSpotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.spots.UpdateSpotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_spot()) {
    _internal_mutable_spot()->::mruv::spots::Spot::MergeFrom(from._internal_spot());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void UpdateSpotRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.spots.UpdateSpotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSpotRequest::CopyFrom(const UpdateSpotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.spots.UpdateSpotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSpotRequest::IsInitialized() const {
  return true;
}

void UpdateSpotRequest::InternalSwap(UpdateSpotRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSpotRequest, id_)
      + sizeof(UpdateSpotRequest::id_)
      - PROTOBUF_FIELD_OFFSET(UpdateSpotRequest, spot_)>(
          reinterpret_cast<char*>(&spot_),
          reinterpret_cast<char*>(&other->spot_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSpotRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateSpotResponse::InitAsDefaultInstance() {
}
class UpdateSpotResponse::_Internal {
 public:
};

UpdateSpotResponse::UpdateSpotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.spots.UpdateSpotResponse)
}
UpdateSpotResponse::UpdateSpotResponse(const UpdateSpotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.spots.UpdateSpotResponse)
}

void UpdateSpotResponse::SharedCtor() {
}

UpdateSpotResponse::~UpdateSpotResponse() {
  // @@protoc_insertion_point(destructor:mruv.spots.UpdateSpotResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateSpotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateSpotResponse::ArenaDtor(void* object) {
  UpdateSpotResponse* _this = reinterpret_cast< UpdateSpotResponse* >(object);
  (void)_this;
}
void UpdateSpotResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateSpotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateSpotResponse& UpdateSpotResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateSpotResponse_spots_2fspots_2eproto.base);
  return *internal_default_instance();
}


void UpdateSpotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.spots.UpdateSpotResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSpotResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateSpotResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.spots.UpdateSpotResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.spots.UpdateSpotResponse)
  return target;
}

size_t UpdateSpotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.spots.UpdateSpotResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateSpotResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.spots.UpdateSpotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateSpotResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateSpotResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.spots.UpdateSpotResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.spots.UpdateSpotResponse)
    MergeFrom(*source);
  }
}

void UpdateSpotResponse::MergeFrom(const UpdateSpotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.spots.UpdateSpotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateSpotResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.spots.UpdateSpotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSpotResponse::CopyFrom(const UpdateSpotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.spots.UpdateSpotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSpotResponse::IsInitialized() const {
  return true;
}

void UpdateSpotResponse::InternalSwap(UpdateSpotResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSpotResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteSpotRequest::InitAsDefaultInstance() {
}
class DeleteSpotRequest::_Internal {
 public:
};

DeleteSpotRequest::DeleteSpotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.spots.DeleteSpotRequest)
}
DeleteSpotRequest::DeleteSpotRequest(const DeleteSpotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.spots.DeleteSpotRequest)
}

void DeleteSpotRequest::SharedCtor() {
  id_ = 0u;
}

DeleteSpotRequest::~DeleteSpotRequest() {
  // @@protoc_insertion_point(destructor:mruv.spots.DeleteSpotRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteSpotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteSpotRequest::ArenaDtor(void* object) {
  DeleteSpotRequest* _this = reinterpret_cast< DeleteSpotRequest* >(object);
  (void)_this;
}
void DeleteSpotRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteSpotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteSpotRequest& DeleteSpotRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteSpotRequest_spots_2fspots_2eproto.base);
  return *internal_default_instance();
}


void DeleteSpotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.spots.DeleteSpotRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSpotRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteSpotRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.spots.DeleteSpotRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.spots.DeleteSpotRequest)
  return target;
}

size_t DeleteSpotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.spots.DeleteSpotRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSpotRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.spots.DeleteSpotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSpotRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteSpotRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.spots.DeleteSpotRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.spots.DeleteSpotRequest)
    MergeFrom(*source);
  }
}

void DeleteSpotRequest::MergeFrom(const DeleteSpotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.spots.DeleteSpotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteSpotRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.spots.DeleteSpotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSpotRequest::CopyFrom(const DeleteSpotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.spots.DeleteSpotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSpotRequest::IsInitialized() const {
  return true;
}

void DeleteSpotRequest::InternalSwap(DeleteSpotRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSpotRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteSpotResponse::InitAsDefaultInstance() {
}
class DeleteSpotResponse::_Internal {
 public:
};

DeleteSpotResponse::DeleteSpotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.spots.DeleteSpotResponse)
}
DeleteSpotResponse::DeleteSpotResponse(const DeleteSpotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.spots.DeleteSpotResponse)
}

void DeleteSpotResponse::SharedCtor() {
}

DeleteSpotResponse::~DeleteSpotResponse() {
  // @@protoc_insertion_point(destructor:mruv.spots.DeleteSpotResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteSpotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteSpotResponse::ArenaDtor(void* object) {
  DeleteSpotResponse* _this = reinterpret_cast< DeleteSpotResponse* >(object);
  (void)_this;
}
void DeleteSpotResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteSpotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteSpotResponse& DeleteSpotResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteSpotResponse_spots_2fspots_2eproto.base);
  return *internal_default_instance();
}


void DeleteSpotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.spots.DeleteSpotResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSpotResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteSpotResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.spots.DeleteSpotResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.spots.DeleteSpotResponse)
  return target;
}

size_t DeleteSpotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.spots.DeleteSpotResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSpotResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.spots.DeleteSpotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSpotResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteSpotResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.spots.DeleteSpotResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.spots.DeleteSpotResponse)
    MergeFrom(*source);
  }
}

void DeleteSpotResponse::MergeFrom(const DeleteSpotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.spots.DeleteSpotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteSpotResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.spots.DeleteSpotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSpotResponse::CopyFrom(const DeleteSpotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.spots.DeleteSpotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSpotResponse::IsInitialized() const {
  return true;
}

void DeleteSpotResponse::InternalSwap(DeleteSpotResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSpotResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FetchAllSpotsRequest::InitAsDefaultInstance() {
}
class FetchAllSpotsRequest::_Internal {
 public:
};

FetchAllSpotsRequest::FetchAllSpotsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.spots.FetchAllSpotsRequest)
}
FetchAllSpotsRequest::FetchAllSpotsRequest(const FetchAllSpotsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  chunk_size_ = from.chunk_size_;
  // @@protoc_insertion_point(copy_constructor:mruv.spots.FetchAllSpotsRequest)
}

void FetchAllSpotsRequest::SharedCtor() {
  chunk_size_ = 0u;
}

FetchAllSpotsRequest::~FetchAllSpotsRequest() {
  // @@protoc_insertion_point(destructor:mruv.spots.FetchAllSpotsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FetchAllSpotsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FetchAllSpotsRequest::ArenaDtor(void* object) {
  FetchAllSpotsRequest* _this = reinterpret_cast< FetchAllSpotsRequest* >(object);
  (void)_this;
}
void FetchAllSpotsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FetchAllSpotsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FetchAllSpotsRequest& FetchAllSpotsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FetchAllSpotsRequest_spots_2fspots_2eproto.base);
  return *internal_default_instance();
}


void FetchAllSpotsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.spots.FetchAllSpotsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunk_size_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FetchAllSpotsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 chunk_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          chunk_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FetchAllSpotsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.spots.FetchAllSpotsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 chunk_size = 1;
  if (this->chunk_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_chunk_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.spots.FetchAllSpotsRequest)
  return target;
}

size_t FetchAllSpotsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.spots.FetchAllSpotsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 chunk_size = 1;
  if (this->chunk_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_chunk_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FetchAllSpotsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.spots.FetchAllSpotsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FetchAllSpotsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FetchAllSpotsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.spots.FetchAllSpotsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.spots.FetchAllSpotsRequest)
    MergeFrom(*source);
  }
}

void FetchAllSpotsRequest::MergeFrom(const FetchAllSpotsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.spots.FetchAllSpotsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chunk_size() != 0) {
    _internal_set_chunk_size(from._internal_chunk_size());
  }
}

void FetchAllSpotsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.spots.FetchAllSpotsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchAllSpotsRequest::CopyFrom(const FetchAllSpotsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.spots.FetchAllSpotsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchAllSpotsRequest::IsInitialized() const {
  return true;
}

void FetchAllSpotsRequest::InternalSwap(FetchAllSpotsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(chunk_size_, other->chunk_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchAllSpotsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

FetchAllSpotsResponse_SpotsEntry_DoNotUse::FetchAllSpotsResponse_SpotsEntry_DoNotUse() {}
FetchAllSpotsResponse_SpotsEntry_DoNotUse::FetchAllSpotsResponse_SpotsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void FetchAllSpotsResponse_SpotsEntry_DoNotUse::MergeFrom(const FetchAllSpotsResponse_SpotsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata FetchAllSpotsResponse_SpotsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void FetchAllSpotsResponse_SpotsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void FetchAllSpotsResponse::InitAsDefaultInstance() {
}
class FetchAllSpotsResponse::_Internal {
 public:
};

FetchAllSpotsResponse::FetchAllSpotsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  spots_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.spots.FetchAllSpotsResponse)
}
FetchAllSpotsResponse::FetchAllSpotsResponse(const FetchAllSpotsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  spots_.MergeFrom(from.spots_);
  // @@protoc_insertion_point(copy_constructor:mruv.spots.FetchAllSpotsResponse)
}

void FetchAllSpotsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FetchAllSpotsResponse_spots_2fspots_2eproto.base);
}

FetchAllSpotsResponse::~FetchAllSpotsResponse() {
  // @@protoc_insertion_point(destructor:mruv.spots.FetchAllSpotsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FetchAllSpotsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FetchAllSpotsResponse::ArenaDtor(void* object) {
  FetchAllSpotsResponse* _this = reinterpret_cast< FetchAllSpotsResponse* >(object);
  (void)_this;
}
void FetchAllSpotsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FetchAllSpotsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FetchAllSpotsResponse& FetchAllSpotsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FetchAllSpotsResponse_spots_2fspots_2eproto.base);
  return *internal_default_instance();
}


void FetchAllSpotsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.spots.FetchAllSpotsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spots_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FetchAllSpotsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<uint32, .mruv.spots.Spot> spots = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&spots_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FetchAllSpotsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.spots.FetchAllSpotsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .mruv.spots.Spot> spots = 1;
  if (!this->_internal_spots().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::spots::Spot >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_spots().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_spots().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::spots::Spot >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::spots::Spot >::const_iterator
          it = this->_internal_spots().begin();
          it != this->_internal_spots().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = FetchAllSpotsResponse_SpotsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::spots::Spot >::const_iterator
          it = this->_internal_spots().begin();
          it != this->_internal_spots().end(); ++it) {
        target = FetchAllSpotsResponse_SpotsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.spots.FetchAllSpotsResponse)
  return target;
}

size_t FetchAllSpotsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.spots.FetchAllSpotsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint32, .mruv.spots.Spot> spots = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_spots_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::mruv::spots::Spot >::const_iterator
      it = this->_internal_spots().begin();
      it != this->_internal_spots().end(); ++it) {
    total_size += FetchAllSpotsResponse_SpotsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FetchAllSpotsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.spots.FetchAllSpotsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FetchAllSpotsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FetchAllSpotsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.spots.FetchAllSpotsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.spots.FetchAllSpotsResponse)
    MergeFrom(*source);
  }
}

void FetchAllSpotsResponse::MergeFrom(const FetchAllSpotsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.spots.FetchAllSpotsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spots_.MergeFrom(from.spots_);
}

void FetchAllSpotsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.spots.FetchAllSpotsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchAllSpotsResponse::CopyFrom(const FetchAllSpotsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.spots.FetchAllSpotsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchAllSpotsResponse::IsInitialized() const {
  return true;
}

void FetchAllSpotsResponse::InternalSwap(FetchAllSpotsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  spots_.Swap(&other->spots_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchAllSpotsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace spots
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mruv::spots::Spot* Arena::CreateMaybeMessage< ::mruv::spots::Spot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::spots::Spot >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::spots::CreateSpotRequest* Arena::CreateMaybeMessage< ::mruv::spots::CreateSpotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::spots::CreateSpotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::spots::CreateSpotResponse* Arena::CreateMaybeMessage< ::mruv::spots::CreateSpotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::spots::CreateSpotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::spots::GetSpotRequest* Arena::CreateMaybeMessage< ::mruv::spots::GetSpotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::spots::GetSpotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::spots::GetSpotResponse* Arena::CreateMaybeMessage< ::mruv::spots::GetSpotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::spots::GetSpotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::spots::UpdateSpotRequest* Arena::CreateMaybeMessage< ::mruv::spots::UpdateSpotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::spots::UpdateSpotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::spots::UpdateSpotResponse* Arena::CreateMaybeMessage< ::mruv::spots::UpdateSpotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::spots::UpdateSpotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::spots::DeleteSpotRequest* Arena::CreateMaybeMessage< ::mruv::spots::DeleteSpotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::spots::DeleteSpotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::spots::DeleteSpotResponse* Arena::CreateMaybeMessage< ::mruv::spots::DeleteSpotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::spots::DeleteSpotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::spots::FetchAllSpotsRequest* Arena::CreateMaybeMessage< ::mruv::spots::FetchAllSpotsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::spots::FetchAllSpotsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::spots::FetchAllSpotsResponse_SpotsEntry_DoNotUse* Arena::CreateMaybeMessage< ::mruv::spots::FetchAllSpotsResponse_SpotsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::spots::FetchAllSpotsResponse_SpotsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::spots::FetchAllSpotsResponse* Arena::CreateMaybeMessage< ::mruv::spots::FetchAllSpotsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::spots::FetchAllSpotsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
