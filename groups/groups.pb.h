// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: groups/groups.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_groups_2fgroups_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_groups_2fgroups_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "common/health.pb.h"
#include "groups/groups_model.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_groups_2fgroups_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_groups_2fgroups_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_groups_2fgroups_2eproto;
namespace mruv {
class AddGroupMemberRequest;
class AddGroupMemberRequestDefaultTypeInternal;
extern AddGroupMemberRequestDefaultTypeInternal _AddGroupMemberRequest_default_instance_;
class AddGroupMemberResponse;
class AddGroupMemberResponseDefaultTypeInternal;
extern AddGroupMemberResponseDefaultTypeInternal _AddGroupMemberResponse_default_instance_;
class GetGroupsRequest;
class GetGroupsRequestDefaultTypeInternal;
extern GetGroupsRequestDefaultTypeInternal _GetGroupsRequest_default_instance_;
class GetGroupsResponse;
class GetGroupsResponseDefaultTypeInternal;
extern GetGroupsResponseDefaultTypeInternal _GetGroupsResponse_default_instance_;
class RemoveGroupMemberRequest;
class RemoveGroupMemberRequestDefaultTypeInternal;
extern RemoveGroupMemberRequestDefaultTypeInternal _RemoveGroupMemberRequest_default_instance_;
class RemoveGroupMemberResponse;
class RemoveGroupMemberResponseDefaultTypeInternal;
extern RemoveGroupMemberResponseDefaultTypeInternal _RemoveGroupMemberResponse_default_instance_;
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> ::mruv::AddGroupMemberRequest* Arena::CreateMaybeMessage<::mruv::AddGroupMemberRequest>(Arena*);
template<> ::mruv::AddGroupMemberResponse* Arena::CreateMaybeMessage<::mruv::AddGroupMemberResponse>(Arena*);
template<> ::mruv::GetGroupsRequest* Arena::CreateMaybeMessage<::mruv::GetGroupsRequest>(Arena*);
template<> ::mruv::GetGroupsResponse* Arena::CreateMaybeMessage<::mruv::GetGroupsResponse>(Arena*);
template<> ::mruv::RemoveGroupMemberRequest* Arena::CreateMaybeMessage<::mruv::RemoveGroupMemberRequest>(Arena*);
template<> ::mruv::RemoveGroupMemberResponse* Arena::CreateMaybeMessage<::mruv::RemoveGroupMemberResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mruv {

// ===================================================================

class GetGroupsRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.GetGroupsRequest) */ {
 public:
  GetGroupsRequest();
  virtual ~GetGroupsRequest();

  GetGroupsRequest(const GetGroupsRequest& from);
  GetGroupsRequest(GetGroupsRequest&& from) noexcept
    : GetGroupsRequest() {
    *this = ::std::move(from);
  }

  inline GetGroupsRequest& operator=(const GetGroupsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGroupsRequest& operator=(GetGroupsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetGroupsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGroupsRequest* internal_default_instance() {
    return reinterpret_cast<const GetGroupsRequest*>(
               &_GetGroupsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GetGroupsRequest* other);
  friend void swap(GetGroupsRequest& a, GetGroupsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGroupsRequest* New() const final {
    return CreateMaybeMessage<GetGroupsRequest>(nullptr);
  }

  GetGroupsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetGroupsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetGroupsRequest& from);
  void MergeFrom(const GetGroupsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetGroupsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.GetGroupsRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_groups_2fgroups_2eproto);
    return ::descriptor_table_groups_2fgroups_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 limit = 1;
  void clear_limit();
  static const int kLimitFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 limit() const;
  void set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:mruv.GetGroupsRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 limit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_groups_2fgroups_2eproto;
};
// -------------------------------------------------------------------

class GetGroupsResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.GetGroupsResponse) */ {
 public:
  GetGroupsResponse();
  virtual ~GetGroupsResponse();

  GetGroupsResponse(const GetGroupsResponse& from);
  GetGroupsResponse(GetGroupsResponse&& from) noexcept
    : GetGroupsResponse() {
    *this = ::std::move(from);
  }

  inline GetGroupsResponse& operator=(const GetGroupsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGroupsResponse& operator=(GetGroupsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetGroupsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGroupsResponse* internal_default_instance() {
    return reinterpret_cast<const GetGroupsResponse*>(
               &_GetGroupsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetGroupsResponse* other);
  friend void swap(GetGroupsResponse& a, GetGroupsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGroupsResponse* New() const final {
    return CreateMaybeMessage<GetGroupsResponse>(nullptr);
  }

  GetGroupsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetGroupsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetGroupsResponse& from);
  void MergeFrom(const GetGroupsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetGroupsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.GetGroupsResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_groups_2fgroups_2eproto);
    return ::descriptor_table_groups_2fgroups_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mruv.Group groups = 1;
  int groups_size() const;
  void clear_groups();
  static const int kGroupsFieldNumber = 1;
  ::mruv::Group* mutable_groups(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mruv::Group >*
      mutable_groups();
  const ::mruv::Group& groups(int index) const;
  ::mruv::Group* add_groups();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mruv::Group >&
      groups() const;

  // @@protoc_insertion_point(class_scope:mruv.GetGroupsResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mruv::Group > groups_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_groups_2fgroups_2eproto;
};
// -------------------------------------------------------------------

class AddGroupMemberRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.AddGroupMemberRequest) */ {
 public:
  AddGroupMemberRequest();
  virtual ~AddGroupMemberRequest();

  AddGroupMemberRequest(const AddGroupMemberRequest& from);
  AddGroupMemberRequest(AddGroupMemberRequest&& from) noexcept
    : AddGroupMemberRequest() {
    *this = ::std::move(from);
  }

  inline AddGroupMemberRequest& operator=(const AddGroupMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddGroupMemberRequest& operator=(AddGroupMemberRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddGroupMemberRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddGroupMemberRequest* internal_default_instance() {
    return reinterpret_cast<const AddGroupMemberRequest*>(
               &_AddGroupMemberRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AddGroupMemberRequest* other);
  friend void swap(AddGroupMemberRequest& a, AddGroupMemberRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddGroupMemberRequest* New() const final {
    return CreateMaybeMessage<AddGroupMemberRequest>(nullptr);
  }

  AddGroupMemberRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddGroupMemberRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddGroupMemberRequest& from);
  void MergeFrom(const AddGroupMemberRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddGroupMemberRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.AddGroupMemberRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_groups_2fgroups_2eproto);
    return ::descriptor_table_groups_2fgroups_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mruv.AddGroupMemberRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_groups_2fgroups_2eproto;
};
// -------------------------------------------------------------------

class AddGroupMemberResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.AddGroupMemberResponse) */ {
 public:
  AddGroupMemberResponse();
  virtual ~AddGroupMemberResponse();

  AddGroupMemberResponse(const AddGroupMemberResponse& from);
  AddGroupMemberResponse(AddGroupMemberResponse&& from) noexcept
    : AddGroupMemberResponse() {
    *this = ::std::move(from);
  }

  inline AddGroupMemberResponse& operator=(const AddGroupMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddGroupMemberResponse& operator=(AddGroupMemberResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddGroupMemberResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddGroupMemberResponse* internal_default_instance() {
    return reinterpret_cast<const AddGroupMemberResponse*>(
               &_AddGroupMemberResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(AddGroupMemberResponse* other);
  friend void swap(AddGroupMemberResponse& a, AddGroupMemberResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddGroupMemberResponse* New() const final {
    return CreateMaybeMessage<AddGroupMemberResponse>(nullptr);
  }

  AddGroupMemberResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddGroupMemberResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddGroupMemberResponse& from);
  void MergeFrom(const AddGroupMemberResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddGroupMemberResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.AddGroupMemberResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_groups_2fgroups_2eproto);
    return ::descriptor_table_groups_2fgroups_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mruv.AddGroupMemberResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_groups_2fgroups_2eproto;
};
// -------------------------------------------------------------------

class RemoveGroupMemberRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.RemoveGroupMemberRequest) */ {
 public:
  RemoveGroupMemberRequest();
  virtual ~RemoveGroupMemberRequest();

  RemoveGroupMemberRequest(const RemoveGroupMemberRequest& from);
  RemoveGroupMemberRequest(RemoveGroupMemberRequest&& from) noexcept
    : RemoveGroupMemberRequest() {
    *this = ::std::move(from);
  }

  inline RemoveGroupMemberRequest& operator=(const RemoveGroupMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveGroupMemberRequest& operator=(RemoveGroupMemberRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RemoveGroupMemberRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveGroupMemberRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveGroupMemberRequest*>(
               &_RemoveGroupMemberRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(RemoveGroupMemberRequest* other);
  friend void swap(RemoveGroupMemberRequest& a, RemoveGroupMemberRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveGroupMemberRequest* New() const final {
    return CreateMaybeMessage<RemoveGroupMemberRequest>(nullptr);
  }

  RemoveGroupMemberRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RemoveGroupMemberRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RemoveGroupMemberRequest& from);
  void MergeFrom(const RemoveGroupMemberRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveGroupMemberRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.RemoveGroupMemberRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_groups_2fgroups_2eproto);
    return ::descriptor_table_groups_2fgroups_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mruv.RemoveGroupMemberRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_groups_2fgroups_2eproto;
};
// -------------------------------------------------------------------

class RemoveGroupMemberResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mruv.RemoveGroupMemberResponse) */ {
 public:
  RemoveGroupMemberResponse();
  virtual ~RemoveGroupMemberResponse();

  RemoveGroupMemberResponse(const RemoveGroupMemberResponse& from);
  RemoveGroupMemberResponse(RemoveGroupMemberResponse&& from) noexcept
    : RemoveGroupMemberResponse() {
    *this = ::std::move(from);
  }

  inline RemoveGroupMemberResponse& operator=(const RemoveGroupMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveGroupMemberResponse& operator=(RemoveGroupMemberResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RemoveGroupMemberResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveGroupMemberResponse* internal_default_instance() {
    return reinterpret_cast<const RemoveGroupMemberResponse*>(
               &_RemoveGroupMemberResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(RemoveGroupMemberResponse* other);
  friend void swap(RemoveGroupMemberResponse& a, RemoveGroupMemberResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveGroupMemberResponse* New() const final {
    return CreateMaybeMessage<RemoveGroupMemberResponse>(nullptr);
  }

  RemoveGroupMemberResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RemoveGroupMemberResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RemoveGroupMemberResponse& from);
  void MergeFrom(const RemoveGroupMemberResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveGroupMemberResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mruv.RemoveGroupMemberResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_groups_2fgroups_2eproto);
    return ::descriptor_table_groups_2fgroups_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mruv.RemoveGroupMemberResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_groups_2fgroups_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetGroupsRequest

// int32 limit = 1;
inline void GetGroupsRequest::clear_limit() {
  limit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetGroupsRequest::limit() const {
  // @@protoc_insertion_point(field_get:mruv.GetGroupsRequest.limit)
  return limit_;
}
inline void GetGroupsRequest::set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mruv.GetGroupsRequest.limit)
}

// -------------------------------------------------------------------

// GetGroupsResponse

// repeated .mruv.Group groups = 1;
inline int GetGroupsResponse::groups_size() const {
  return groups_.size();
}
inline ::mruv::Group* GetGroupsResponse::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:mruv.GetGroupsResponse.groups)
  return groups_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mruv::Group >*
GetGroupsResponse::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:mruv.GetGroupsResponse.groups)
  return &groups_;
}
inline const ::mruv::Group& GetGroupsResponse::groups(int index) const {
  // @@protoc_insertion_point(field_get:mruv.GetGroupsResponse.groups)
  return groups_.Get(index);
}
inline ::mruv::Group* GetGroupsResponse::add_groups() {
  // @@protoc_insertion_point(field_add:mruv.GetGroupsResponse.groups)
  return groups_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mruv::Group >&
GetGroupsResponse::groups() const {
  // @@protoc_insertion_point(field_list:mruv.GetGroupsResponse.groups)
  return groups_;
}

// -------------------------------------------------------------------

// AddGroupMemberRequest

// -------------------------------------------------------------------

// AddGroupMemberResponse

// -------------------------------------------------------------------

// RemoveGroupMemberRequest

// -------------------------------------------------------------------

// RemoveGroupMemberResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mruv

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_groups_2fgroups_2eproto
