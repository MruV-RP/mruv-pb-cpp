// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: groups/groups.proto

#include "groups/groups.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_groups_2fgroups_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGroupsResponse_Group_groups_2fgroups_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_groups_2fgroups_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPermissionsResponse_Permission_groups_2fgroups_2eproto;
namespace mruv {
namespace groups {
class CreateGroupRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateGroupRequest> _instance;
} _CreateGroupRequest_default_instance_;
class CreateGroupResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateGroupResponse> _instance;
} _CreateGroupResponse_default_instance_;
class GetGroupRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGroupRequest> _instance;
} _GetGroupRequest_default_instance_;
class GetGroupResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGroupResponse> _instance;
} _GetGroupResponse_default_instance_;
class UpdateGroupRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateGroupRequest> _instance;
} _UpdateGroupRequest_default_instance_;
class UpdateGroupResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateGroupResponse> _instance;
} _UpdateGroupResponse_default_instance_;
class DeleteGroupRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteGroupRequest> _instance;
} _DeleteGroupRequest_default_instance_;
class DeleteGroupResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteGroupResponse> _instance;
} _DeleteGroupResponse_default_instance_;
class GetGroupsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGroupsRequest> _instance;
} _GetGroupsRequest_default_instance_;
class GetGroupsResponse_GroupDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGroupsResponse_Group> _instance;
} _GetGroupsResponse_Group_default_instance_;
class GetGroupsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGroupsResponse> _instance;
} _GetGroupsResponse_default_instance_;
class AssignOwnerRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AssignOwnerRequest> _instance;
} _AssignOwnerRequest_default_instance_;
class AssignOwnerResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AssignOwnerResponse> _instance;
} _AssignOwnerResponse_default_instance_;
class GetOwnerRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOwnerRequest> _instance;
} _GetOwnerRequest_default_instance_;
class GetOwnerResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOwnerResponse> _instance;
} _GetOwnerResponse_default_instance_;
class AddMemberRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddMemberRequest> _instance;
} _AddMemberRequest_default_instance_;
class AddMemberResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddMemberResponse> _instance;
} _AddMemberResponse_default_instance_;
class GetMembersRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMembersRequest> _instance;
} _GetMembersRequest_default_instance_;
class GetMembersResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMembersResponse> _instance;
} _GetMembersResponse_default_instance_;
class RemoveMemberRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveMemberRequest> _instance;
} _RemoveMemberRequest_default_instance_;
class RemoveMemberResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveMemberResponse> _instance;
} _RemoveMemberResponse_default_instance_;
class AddPermissionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddPermissionRequest> _instance;
} _AddPermissionRequest_default_instance_;
class AddPermissionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddPermissionResponse> _instance;
} _AddPermissionResponse_default_instance_;
class GetPermissionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPermissionsRequest> _instance;
} _GetPermissionsRequest_default_instance_;
class GetPermissionsResponse_PermissionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPermissionsResponse_Permission> _instance;
} _GetPermissionsResponse_Permission_default_instance_;
class GetPermissionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPermissionsResponse> _instance;
} _GetPermissionsResponse_default_instance_;
class RemovePermissionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemovePermissionRequest> _instance;
} _RemovePermissionRequest_default_instance_;
class RemovePermissionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemovePermissionResponse> _instance;
} _RemovePermissionResponse_default_instance_;
class AddSubgroupRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddSubgroupRequest> _instance;
} _AddSubgroupRequest_default_instance_;
class AddSubgroupResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddSubgroupResponse> _instance;
} _AddSubgroupResponse_default_instance_;
class GetSubgroupsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSubgroupsRequest> _instance;
} _GetSubgroupsRequest_default_instance_;
class GetSubgroupsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSubgroupsResponse> _instance;
} _GetSubgroupsResponse_default_instance_;
class RemoveSubgroupRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveSubgroupRequest> _instance;
} _RemoveSubgroupRequest_default_instance_;
class RemoveSubgroupResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveSubgroupResponse> _instance;
} _RemoveSubgroupResponse_default_instance_;
class IsPermittedRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IsPermittedRequest> _instance;
} _IsPermittedRequest_default_instance_;
class IsPermittedResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IsPermittedResponse> _instance;
} _IsPermittedResponse_default_instance_;
}  // namespace groups
}  // namespace mruv
static void InitDefaultsscc_info_AddMemberRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_AddMemberRequest_default_instance_;
    new (ptr) ::mruv::groups::AddMemberRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::AddMemberRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddMemberRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddMemberRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_AddMemberResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_AddMemberResponse_default_instance_;
    new (ptr) ::mruv::groups::AddMemberResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::AddMemberResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddMemberResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddMemberResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_AddPermissionRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_AddPermissionRequest_default_instance_;
    new (ptr) ::mruv::groups::AddPermissionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::AddPermissionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddPermissionRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddPermissionRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_AddPermissionResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_AddPermissionResponse_default_instance_;
    new (ptr) ::mruv::groups::AddPermissionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::AddPermissionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddPermissionResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddPermissionResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_AddSubgroupRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_AddSubgroupRequest_default_instance_;
    new (ptr) ::mruv::groups::AddSubgroupRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::AddSubgroupRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddSubgroupRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddSubgroupRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_AddSubgroupResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_AddSubgroupResponse_default_instance_;
    new (ptr) ::mruv::groups::AddSubgroupResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::AddSubgroupResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddSubgroupResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddSubgroupResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_AssignOwnerRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_AssignOwnerRequest_default_instance_;
    new (ptr) ::mruv::groups::AssignOwnerRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::AssignOwnerRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AssignOwnerRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AssignOwnerRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_AssignOwnerResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_AssignOwnerResponse_default_instance_;
    new (ptr) ::mruv::groups::AssignOwnerResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::AssignOwnerResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AssignOwnerResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AssignOwnerResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_CreateGroupRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_CreateGroupRequest_default_instance_;
    new (ptr) ::mruv::groups::CreateGroupRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::CreateGroupRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateGroupRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateGroupRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_CreateGroupResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_CreateGroupResponse_default_instance_;
    new (ptr) ::mruv::groups::CreateGroupResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::CreateGroupResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateGroupResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateGroupResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_DeleteGroupRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_DeleteGroupRequest_default_instance_;
    new (ptr) ::mruv::groups::DeleteGroupRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::DeleteGroupRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteGroupRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteGroupRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_DeleteGroupResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_DeleteGroupResponse_default_instance_;
    new (ptr) ::mruv::groups::DeleteGroupResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::DeleteGroupResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteGroupResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteGroupResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_GetGroupRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_GetGroupRequest_default_instance_;
    new (ptr) ::mruv::groups::GetGroupRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::GetGroupRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGroupRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetGroupRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_GetGroupResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_GetGroupResponse_default_instance_;
    new (ptr) ::mruv::groups::GetGroupResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::GetGroupResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGroupResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetGroupResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_GetGroupsRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_GetGroupsRequest_default_instance_;
    new (ptr) ::mruv::groups::GetGroupsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::GetGroupsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGroupsRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetGroupsRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_GetGroupsResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_GetGroupsResponse_default_instance_;
    new (ptr) ::mruv::groups::GetGroupsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::GetGroupsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetGroupsResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetGroupsResponse_groups_2fgroups_2eproto}, {
      &scc_info_GetGroupsResponse_Group_groups_2fgroups_2eproto.base,}};

static void InitDefaultsscc_info_GetGroupsResponse_Group_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_GetGroupsResponse_Group_default_instance_;
    new (ptr) ::mruv::groups::GetGroupsResponse_Group();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::GetGroupsResponse_Group::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGroupsResponse_Group_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetGroupsResponse_Group_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_GetMembersRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_GetMembersRequest_default_instance_;
    new (ptr) ::mruv::groups::GetMembersRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::GetMembersRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetMembersRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetMembersRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_GetMembersResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_GetMembersResponse_default_instance_;
    new (ptr) ::mruv::groups::GetMembersResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::GetMembersResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetMembersResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetMembersResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_GetOwnerRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_GetOwnerRequest_default_instance_;
    new (ptr) ::mruv::groups::GetOwnerRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::GetOwnerRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetOwnerRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetOwnerRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_GetOwnerResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_GetOwnerResponse_default_instance_;
    new (ptr) ::mruv::groups::GetOwnerResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::GetOwnerResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetOwnerResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetOwnerResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_GetPermissionsRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_GetPermissionsRequest_default_instance_;
    new (ptr) ::mruv::groups::GetPermissionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::GetPermissionsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPermissionsRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetPermissionsRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_GetPermissionsResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_GetPermissionsResponse_default_instance_;
    new (ptr) ::mruv::groups::GetPermissionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::GetPermissionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetPermissionsResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetPermissionsResponse_groups_2fgroups_2eproto}, {
      &scc_info_GetPermissionsResponse_Permission_groups_2fgroups_2eproto.base,}};

static void InitDefaultsscc_info_GetPermissionsResponse_Permission_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_GetPermissionsResponse_Permission_default_instance_;
    new (ptr) ::mruv::groups::GetPermissionsResponse_Permission();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::GetPermissionsResponse_Permission::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPermissionsResponse_Permission_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetPermissionsResponse_Permission_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_GetSubgroupsRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_GetSubgroupsRequest_default_instance_;
    new (ptr) ::mruv::groups::GetSubgroupsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::GetSubgroupsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSubgroupsRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSubgroupsRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_GetSubgroupsResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_GetSubgroupsResponse_default_instance_;
    new (ptr) ::mruv::groups::GetSubgroupsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::GetSubgroupsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSubgroupsResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSubgroupsResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_IsPermittedRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_IsPermittedRequest_default_instance_;
    new (ptr) ::mruv::groups::IsPermittedRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::IsPermittedRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IsPermittedRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IsPermittedRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_IsPermittedResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_IsPermittedResponse_default_instance_;
    new (ptr) ::mruv::groups::IsPermittedResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::IsPermittedResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IsPermittedResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IsPermittedResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_RemoveMemberRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_RemoveMemberRequest_default_instance_;
    new (ptr) ::mruv::groups::RemoveMemberRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::RemoveMemberRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveMemberRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveMemberRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_RemoveMemberResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_RemoveMemberResponse_default_instance_;
    new (ptr) ::mruv::groups::RemoveMemberResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::RemoveMemberResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveMemberResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveMemberResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_RemovePermissionRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_RemovePermissionRequest_default_instance_;
    new (ptr) ::mruv::groups::RemovePermissionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::RemovePermissionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemovePermissionRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemovePermissionRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_RemovePermissionResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_RemovePermissionResponse_default_instance_;
    new (ptr) ::mruv::groups::RemovePermissionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::RemovePermissionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemovePermissionResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemovePermissionResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_RemoveSubgroupRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_RemoveSubgroupRequest_default_instance_;
    new (ptr) ::mruv::groups::RemoveSubgroupRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::RemoveSubgroupRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveSubgroupRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveSubgroupRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_RemoveSubgroupResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_RemoveSubgroupResponse_default_instance_;
    new (ptr) ::mruv::groups::RemoveSubgroupResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::RemoveSubgroupResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveSubgroupResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveSubgroupResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_UpdateGroupRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_UpdateGroupRequest_default_instance_;
    new (ptr) ::mruv::groups::UpdateGroupRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::UpdateGroupRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateGroupRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateGroupRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_UpdateGroupResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::groups::_UpdateGroupResponse_default_instance_;
    new (ptr) ::mruv::groups::UpdateGroupResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::groups::UpdateGroupResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateGroupResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateGroupResponse_groups_2fgroups_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_groups_2fgroups_2eproto[36];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_groups_2fgroups_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_groups_2fgroups_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_groups_2fgroups_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::CreateGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::CreateGroupRequest, name_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::CreateGroupRequest, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::CreateGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::CreateGroupResponse, group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetGroupRequest, group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetGroupResponse, name_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetGroupResponse, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::UpdateGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::UpdateGroupRequest, group_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::UpdateGroupRequest, name_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::UpdateGroupRequest, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::UpdateGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::DeleteGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::DeleteGroupRequest, group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::DeleteGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetGroupsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetGroupsRequest, limit_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetGroupsRequest, begin_from_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetGroupsResponse_Group, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetGroupsResponse_Group, id_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetGroupsResponse_Group, name_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetGroupsResponse_Group, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetGroupsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetGroupsResponse, groups_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AssignOwnerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AssignOwnerRequest, group_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AssignOwnerRequest, owner_type_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AssignOwnerRequest, owner_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AssignOwnerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetOwnerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetOwnerRequest, group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetOwnerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetOwnerResponse, owner_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetOwnerResponse, owner_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AddMemberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AddMemberRequest, group_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AddMemberRequest, member_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AddMemberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetMembersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetMembersRequest, group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetMembersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetMembersResponse, member_type_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetMembersResponse, member_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::RemoveMemberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::RemoveMemberRequest, group_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::RemoveMemberRequest, member_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::RemoveMemberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AddPermissionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AddPermissionRequest, group_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AddPermissionRequest, name_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AddPermissionRequest, definition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AddPermissionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AddPermissionResponse, permission_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetPermissionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetPermissionsRequest, group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetPermissionsResponse_Permission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetPermissionsResponse_Permission, id_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetPermissionsResponse_Permission, name_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetPermissionsResponse_Permission, definition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetPermissionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetPermissionsResponse, permissions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::RemovePermissionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::RemovePermissionRequest, group_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::RemovePermissionRequest, permission_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::RemovePermissionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AddSubgroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AddSubgroupRequest, group_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AddSubgroupRequest, subgroup_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::AddSubgroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetSubgroupsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetSubgroupsRequest, group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetSubgroupsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::GetSubgroupsResponse, subgroup_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::RemoveSubgroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::RemoveSubgroupRequest, group_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::RemoveSubgroupRequest, subgroup_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::RemoveSubgroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::IsPermittedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::IsPermittedRequest, member_id_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::IsPermittedRequest, member_type_),
  PROTOBUF_FIELD_OFFSET(::mruv::groups::IsPermittedRequest, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::IsPermittedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::groups::IsPermittedResponse, permitted_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mruv::groups::CreateGroupRequest)},
  { 7, -1, sizeof(::mruv::groups::CreateGroupResponse)},
  { 13, -1, sizeof(::mruv::groups::GetGroupRequest)},
  { 19, -1, sizeof(::mruv::groups::GetGroupResponse)},
  { 26, -1, sizeof(::mruv::groups::UpdateGroupRequest)},
  { 34, -1, sizeof(::mruv::groups::UpdateGroupResponse)},
  { 39, -1, sizeof(::mruv::groups::DeleteGroupRequest)},
  { 45, -1, sizeof(::mruv::groups::DeleteGroupResponse)},
  { 50, -1, sizeof(::mruv::groups::GetGroupsRequest)},
  { 57, -1, sizeof(::mruv::groups::GetGroupsResponse_Group)},
  { 65, -1, sizeof(::mruv::groups::GetGroupsResponse)},
  { 71, -1, sizeof(::mruv::groups::AssignOwnerRequest)},
  { 79, -1, sizeof(::mruv::groups::AssignOwnerResponse)},
  { 84, -1, sizeof(::mruv::groups::GetOwnerRequest)},
  { 90, -1, sizeof(::mruv::groups::GetOwnerResponse)},
  { 97, -1, sizeof(::mruv::groups::AddMemberRequest)},
  { 104, -1, sizeof(::mruv::groups::AddMemberResponse)},
  { 109, -1, sizeof(::mruv::groups::GetMembersRequest)},
  { 115, -1, sizeof(::mruv::groups::GetMembersResponse)},
  { 122, -1, sizeof(::mruv::groups::RemoveMemberRequest)},
  { 129, -1, sizeof(::mruv::groups::RemoveMemberResponse)},
  { 134, -1, sizeof(::mruv::groups::AddPermissionRequest)},
  { 142, -1, sizeof(::mruv::groups::AddPermissionResponse)},
  { 148, -1, sizeof(::mruv::groups::GetPermissionsRequest)},
  { 154, -1, sizeof(::mruv::groups::GetPermissionsResponse_Permission)},
  { 162, -1, sizeof(::mruv::groups::GetPermissionsResponse)},
  { 168, -1, sizeof(::mruv::groups::RemovePermissionRequest)},
  { 175, -1, sizeof(::mruv::groups::RemovePermissionResponse)},
  { 180, -1, sizeof(::mruv::groups::AddSubgroupRequest)},
  { 187, -1, sizeof(::mruv::groups::AddSubgroupResponse)},
  { 192, -1, sizeof(::mruv::groups::GetSubgroupsRequest)},
  { 198, -1, sizeof(::mruv::groups::GetSubgroupsResponse)},
  { 204, -1, sizeof(::mruv::groups::RemoveSubgroupRequest)},
  { 211, -1, sizeof(::mruv::groups::RemoveSubgroupResponse)},
  { 216, -1, sizeof(::mruv::groups::IsPermittedRequest)},
  { 224, -1, sizeof(::mruv::groups::IsPermittedResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_CreateGroupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_CreateGroupResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_GetGroupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_GetGroupResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_UpdateGroupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_UpdateGroupResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_DeleteGroupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_DeleteGroupResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_GetGroupsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_GetGroupsResponse_Group_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_GetGroupsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_AssignOwnerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_AssignOwnerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_GetOwnerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_GetOwnerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_AddMemberRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_AddMemberResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_GetMembersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_GetMembersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_RemoveMemberRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_RemoveMemberResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_AddPermissionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_AddPermissionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_GetPermissionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_GetPermissionsResponse_Permission_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_GetPermissionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_RemovePermissionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_RemovePermissionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_AddSubgroupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_AddSubgroupResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_GetSubgroupsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_GetSubgroupsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_RemoveSubgroupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_RemoveSubgroupResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_IsPermittedRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::groups::_IsPermittedResponse_default_instance_),
};

const char descriptor_table_protodef_groups_2fgroups_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023groups/groups.proto\022\013mruv.groups\032\034goog"
  "le/api/annotations.proto\032\023common/health."
  "proto\"7\n\022CreateGroupRequest\022\014\n\004name\030\001 \001("
  "\t\022\023\n\013description\030\002 \001(\t\"\'\n\023CreateGroupRes"
  "ponse\022\020\n\010group_id\030\001 \001(\r\"#\n\017GetGroupReque"
  "st\022\020\n\010group_id\030\001 \001(\r\"5\n\020GetGroupResponse"
  "\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\"I\n\022U"
  "pdateGroupRequest\022\020\n\010group_id\030\001 \001(\r\022\014\n\004n"
  "ame\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\"\025\n\023Update"
  "GroupResponse\"&\n\022DeleteGroupRequest\022\020\n\010g"
  "roup_id\030\001 \001(\r\"\025\n\023DeleteGroupResponse\"5\n\020"
  "GetGroupsRequest\022\r\n\005limit\030\001 \001(\r\022\022\n\nbegin"
  "_from\030\002 \001(\r\"\201\001\n\021GetGroupsResponse\0224\n\006gro"
  "ups\030\001 \003(\0132$.mruv.groups.GetGroupsRespons"
  "e.Group\0326\n\005Group\022\n\n\002id\030\001 \001(\r\022\014\n\004name\030\002 \001"
  "(\t\022\023\n\013description\030\003 \001(\t\"d\n\022AssignOwnerRe"
  "quest\022\020\n\010group_id\030\001 \001(\r\022*\n\nowner_type\030\003 "
  "\001(\0162\026.mruv.groups.OwnerType\022\020\n\010owner_id\030"
  "\002 \001(\r\"\025\n\023AssignOwnerResponse\"#\n\017GetOwner"
  "Request\022\020\n\010group_id\030\001 \001(\r\"P\n\020GetOwnerRes"
  "ponse\022\020\n\010owner_id\030\001 \001(\r\022*\n\nowner_type\030\002 "
  "\001(\0162\026.mruv.groups.OwnerType\"7\n\020AddMember"
  "Request\022\020\n\010group_id\030\001 \001(\r\022\021\n\tmember_id\030\002"
  " \001(\r\"\023\n\021AddMemberResponse\"%\n\021GetMembersR"
  "equest\022\020\n\010group_id\030\001 \001(\r\"V\n\022GetMembersRe"
  "sponse\022,\n\013member_type\030\001 \001(\0162\027.mruv.group"
  "s.MemberType\022\022\n\nmember_ids\030\002 \003(\r\":\n\023Remo"
  "veMemberRequest\022\020\n\010group_id\030\001 \001(\r\022\021\n\tmem"
  "ber_id\030\002 \001(\r\"\026\n\024RemoveMemberResponse\"J\n\024"
  "AddPermissionRequest\022\020\n\010group_id\030\001 \001(\r\022\014"
  "\n\004name\030\002 \001(\t\022\022\n\ndefinition\030\003 \001(\t\".\n\025AddP"
  "ermissionResponse\022\025\n\rpermission_id\030\001 \001(\r"
  "\")\n\025GetPermissionsRequest\022\020\n\010group_id\030\001 "
  "\001(\r\"\231\001\n\026GetPermissionsResponse\022C\n\013permis"
  "sions\030\001 \003(\0132..mruv.groups.GetPermissions"
  "Response.Permission\032:\n\nPermission\022\n\n\002id\030"
  "\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\022\n\ndefinition\030\003 \001(\t\""
  "B\n\027RemovePermissionRequest\022\020\n\010group_id\030\001"
  " \001(\r\022\025\n\rpermission_id\030\002 \001(\r\"\032\n\030RemovePer"
  "missionResponse\";\n\022AddSubgroupRequest\022\020\n"
  "\010group_id\030\001 \001(\r\022\023\n\013subgroup_id\030\002 \001(\r\"\025\n\023"
  "AddSubgroupResponse\"\'\n\023GetSubgroupsReque"
  "st\022\020\n\010group_id\030\001 \001(\r\",\n\024GetSubgroupsResp"
  "onse\022\024\n\014subgroup_ids\030\001 \003(\r\">\n\025RemoveSubg"
  "roupRequest\022\020\n\010group_id\030\001 \001(\r\022\023\n\013subgrou"
  "p_id\030\002 \001(\r\"\030\n\026RemoveSubgroupResponse\"e\n\022"
  "IsPermittedRequest\022\021\n\tmember_id\030\001 \001(\r\022,\n"
  "\013member_type\030\002 \001(\0162\027.mruv.groups.MemberT"
  "ype\022\016\n\006action\030\003 \001(\t\"(\n\023IsPermittedRespon"
  "se\022\021\n\tpermitted\030\001 \001(\010*k\n\tOwnerType\022\026\n\022OW"
  "NER_TYPE_UNKNOWN\020\000\022\026\n\022OWNER_TYPE_ACCOUNT"
  "\020\001\022\030\n\024OWNER_TYPE_CHARACTER\020\002\022\024\n\020OWNER_TY"
  "PE_GROUP\020\003*Y\n\nMemberType\022\027\n\023MEMBER_TYPE_"
  "UNKNOWN\020\000\022\027\n\023MEMBER_TYPE_ACCOUNT\020\001\022\031\n\025ME"
  "MBER_TYPE_CHARACTER\020\0022\263\022\n\021MruVGroupsServ"
  "ice\022g\n\013CreateGroup\022\037.mruv.groups.CreateG"
  "roupRequest\032 .mruv.groups.CreateGroupRes"
  "ponse\"\025\202\323\344\223\002\017\"\n/v1/groups:\001*\022f\n\010GetGroup"
  "\022\034.mruv.groups.GetGroupRequest\032\035.mruv.gr"
  "oups.GetGroupResponse\"\035\202\323\344\223\002\027\022\025/v1/group"
  "s/{group_id}\022r\n\013UpdateGroup\022\037.mruv.group"
  "s.UpdateGroupRequest\032 .mruv.groups.Updat"
  "eGroupResponse\" \202\323\344\223\002\0322\025/v1/groups/{grou"
  "p_id}:\001*\022o\n\013DeleteGroup\022\037.mruv.groups.De"
  "leteGroupRequest\032 .mruv.groups.DeleteGro"
  "upResponse\"\035\202\323\344\223\002\027*\025/v1/groups/{group_id"
  "}\022^\n\tGetGroups\022\035.mruv.groups.GetGroupsRe"
  "quest\032\036.mruv.groups.GetGroupsResponse\"\022\202"
  "\323\344\223\002\014\022\n/v1/groups\022x\n\013AssignOwner\022\037.mruv."
  "groups.AssignOwnerRequest\032 .mruv.groups."
  "AssignOwnerResponse\"&\202\323\344\223\002 \032\033/v1/groups/"
  "{group_id}/owner:\001*\022l\n\010GetOwner\022\034.mruv.g"
  "roups.GetOwnerRequest\032\035.mruv.groups.GetO"
  "wnerResponse\"#\202\323\344\223\002\035\022\033/v1/groups/{group_"
  "id}/owner\022\200\001\n\tAddMember\022\035.mruv.groups.Ad"
  "dMemberRequest\032\036.mruv.groups.AddMemberRe"
  "sponse\"4\202\323\344\223\002.\")/v1/groups/{group_id}/me"
  "mbers/{member_id}:\001*\022t\n\nGetMembers\022\036.mru"
  "v.groups.GetMembersRequest\032\037.mruv.groups"
  ".GetMembersResponse\"%\202\323\344\223\002\037\022\035/v1/groups/"
  "{group_id}/members\022\206\001\n\014RemoveMember\022 .mr"
  "uv.groups.RemoveMemberRequest\032!.mruv.gro"
  "ups.RemoveMemberResponse\"1\202\323\344\223\002+*)/v1/gr"
  "oups/{group_id}/members/{member_id}\022\204\001\n\r"
  "AddPermission\022!.mruv.groups.AddPermissio"
  "nRequest\032\".mruv.groups.AddPermissionResp"
  "onse\",\202\323\344\223\002&\"!/v1/groups/{group_id}/perm"
  "issions:\001*\022\204\001\n\016GetPermissions\022\".mruv.gro"
  "ups.GetPermissionsRequest\032#.mruv.groups."
  "GetPermissionsResponse\")\202\323\344\223\002#\022!/v1/grou"
  "ps/{group_id}/permissions\022\212\001\n\020RemovePerm"
  "ission\022$.mruv.groups.RemovePermissionReq"
  "uest\032%.mruv.groups.RemovePermissionRespo"
  "nse\")\202\323\344\223\002#*!/v1/groups/{group_id}/permi"
  "ssions\022\212\001\n\013AddSubgroup\022\037.mruv.groups.Add"
  "SubgroupRequest\032 .mruv.groups.AddSubgrou"
  "pResponse\"8\202\323\344\223\0022\"-/v1/groups/{group_id}"
  "/subgroups/{subgroup_id}:\001*\022|\n\014GetSubgro"
  "ups\022 .mruv.groups.GetSubgroupsRequest\032!."
  "mruv.groups.GetSubgroupsResponse\"\'\202\323\344\223\002!"
  "\022\037/v1/groups/{group_id}/subgroups\022\220\001\n\016Re"
  "moveSubgroup\022\".mruv.groups.RemoveSubgrou"
  "pRequest\032#.mruv.groups.RemoveSubgroupRes"
  "ponse\"5\202\323\344\223\002/*-/v1/groups/{group_id}/sub"
  "groups/{subgroup_id}\022\202\001\n\013IsPermitted\022\037.m"
  "ruv.groups.IsPermittedRequest\032 .mruv.gro"
  "ups.IsPermittedResponse\"0\202\323\344\223\002*\022(/v1/gro"
  "ups/members/{member_id}/permitted\022t\n\020Get"
  "ServiceStatus\022!.mruv.common.ServiceStatu"
  "sRequest\032\".mruv.common.ServiceStatusResp"
  "onse\"\031\202\323\344\223\002\023\022\021/v1/groups/status\022j\n\021GetSe"
  "rviceVersion\022\033.mruv.common.VersionReques"
  "t\032\034.mruv.common.VersionResponse\"\032\202\323\344\223\002\024\022"
  "\022/v1/groups/versionB&Z$github.com/MruV-R"
  "P/mruv-pb-go/groupsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_groups_2fgroups_2eproto_deps[2] = {
  &::descriptor_table_common_2fhealth_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_groups_2fgroups_2eproto_sccs[36] = {
  &scc_info_AddMemberRequest_groups_2fgroups_2eproto.base,
  &scc_info_AddMemberResponse_groups_2fgroups_2eproto.base,
  &scc_info_AddPermissionRequest_groups_2fgroups_2eproto.base,
  &scc_info_AddPermissionResponse_groups_2fgroups_2eproto.base,
  &scc_info_AddSubgroupRequest_groups_2fgroups_2eproto.base,
  &scc_info_AddSubgroupResponse_groups_2fgroups_2eproto.base,
  &scc_info_AssignOwnerRequest_groups_2fgroups_2eproto.base,
  &scc_info_AssignOwnerResponse_groups_2fgroups_2eproto.base,
  &scc_info_CreateGroupRequest_groups_2fgroups_2eproto.base,
  &scc_info_CreateGroupResponse_groups_2fgroups_2eproto.base,
  &scc_info_DeleteGroupRequest_groups_2fgroups_2eproto.base,
  &scc_info_DeleteGroupResponse_groups_2fgroups_2eproto.base,
  &scc_info_GetGroupRequest_groups_2fgroups_2eproto.base,
  &scc_info_GetGroupResponse_groups_2fgroups_2eproto.base,
  &scc_info_GetGroupsRequest_groups_2fgroups_2eproto.base,
  &scc_info_GetGroupsResponse_groups_2fgroups_2eproto.base,
  &scc_info_GetGroupsResponse_Group_groups_2fgroups_2eproto.base,
  &scc_info_GetMembersRequest_groups_2fgroups_2eproto.base,
  &scc_info_GetMembersResponse_groups_2fgroups_2eproto.base,
  &scc_info_GetOwnerRequest_groups_2fgroups_2eproto.base,
  &scc_info_GetOwnerResponse_groups_2fgroups_2eproto.base,
  &scc_info_GetPermissionsRequest_groups_2fgroups_2eproto.base,
  &scc_info_GetPermissionsResponse_groups_2fgroups_2eproto.base,
  &scc_info_GetPermissionsResponse_Permission_groups_2fgroups_2eproto.base,
  &scc_info_GetSubgroupsRequest_groups_2fgroups_2eproto.base,
  &scc_info_GetSubgroupsResponse_groups_2fgroups_2eproto.base,
  &scc_info_IsPermittedRequest_groups_2fgroups_2eproto.base,
  &scc_info_IsPermittedResponse_groups_2fgroups_2eproto.base,
  &scc_info_RemoveMemberRequest_groups_2fgroups_2eproto.base,
  &scc_info_RemoveMemberResponse_groups_2fgroups_2eproto.base,
  &scc_info_RemovePermissionRequest_groups_2fgroups_2eproto.base,
  &scc_info_RemovePermissionResponse_groups_2fgroups_2eproto.base,
  &scc_info_RemoveSubgroupRequest_groups_2fgroups_2eproto.base,
  &scc_info_RemoveSubgroupResponse_groups_2fgroups_2eproto.base,
  &scc_info_UpdateGroupRequest_groups_2fgroups_2eproto.base,
  &scc_info_UpdateGroupResponse_groups_2fgroups_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_groups_2fgroups_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_groups_2fgroups_2eproto = {
  false, false, descriptor_table_protodef_groups_2fgroups_2eproto, "groups/groups.proto", 4587,
  &descriptor_table_groups_2fgroups_2eproto_once, descriptor_table_groups_2fgroups_2eproto_sccs, descriptor_table_groups_2fgroups_2eproto_deps, 36, 2,
  schemas, file_default_instances, TableStruct_groups_2fgroups_2eproto::offsets,
  file_level_metadata_groups_2fgroups_2eproto, 36, file_level_enum_descriptors_groups_2fgroups_2eproto, file_level_service_descriptors_groups_2fgroups_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_groups_2fgroups_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_groups_2fgroups_2eproto)), true);
namespace mruv {
namespace groups {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OwnerType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_groups_2fgroups_2eproto);
  return file_level_enum_descriptors_groups_2fgroups_2eproto[0];
}
bool OwnerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MemberType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_groups_2fgroups_2eproto);
  return file_level_enum_descriptors_groups_2fgroups_2eproto[1];
}
bool MemberType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CreateGroupRequest::InitAsDefaultInstance() {
}
class CreateGroupRequest::_Internal {
 public:
};

CreateGroupRequest::CreateGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.CreateGroupRequest)
}
CreateGroupRequest::CreateGroupRequest(const CreateGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:mruv.groups.CreateGroupRequest)
}

void CreateGroupRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateGroupRequest_groups_2fgroups_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateGroupRequest::~CreateGroupRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.CreateGroupRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateGroupRequest::ArenaDtor(void* object) {
  CreateGroupRequest* _this = reinterpret_cast< CreateGroupRequest* >(object);
  (void)_this;
}
void CreateGroupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateGroupRequest& CreateGroupRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateGroupRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void CreateGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.CreateGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateGroupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.groups.CreateGroupRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.groups.CreateGroupRequest.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateGroupRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.CreateGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.groups.CreateGroupRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.groups.CreateGroupRequest.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.CreateGroupRequest)
  return target;
}

size_t CreateGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.CreateGroupRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateGroupRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.CreateGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateGroupRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateGroupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.CreateGroupRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.CreateGroupRequest)
    MergeFrom(*source);
  }
}

void CreateGroupRequest::MergeFrom(const CreateGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.CreateGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
}

void CreateGroupRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.CreateGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGroupRequest::CopyFrom(const CreateGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.CreateGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGroupRequest::IsInitialized() const {
  return true;
}

void CreateGroupRequest::InternalSwap(CreateGroupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateGroupRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateGroupResponse::InitAsDefaultInstance() {
}
class CreateGroupResponse::_Internal {
 public:
};

CreateGroupResponse::CreateGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.CreateGroupResponse)
}
CreateGroupResponse::CreateGroupResponse(const CreateGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:mruv.groups.CreateGroupResponse)
}

void CreateGroupResponse::SharedCtor() {
  group_id_ = 0u;
}

CreateGroupResponse::~CreateGroupResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.CreateGroupResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateGroupResponse::ArenaDtor(void* object) {
  CreateGroupResponse* _this = reinterpret_cast< CreateGroupResponse* >(object);
  (void)_this;
}
void CreateGroupResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateGroupResponse& CreateGroupResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateGroupResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void CreateGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.CreateGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateGroupResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateGroupResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.CreateGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.CreateGroupResponse)
  return target;
}

size_t CreateGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.CreateGroupResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateGroupResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.CreateGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateGroupResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateGroupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.CreateGroupResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.CreateGroupResponse)
    MergeFrom(*source);
  }
}

void CreateGroupResponse::MergeFrom(const CreateGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.CreateGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
}

void CreateGroupResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.CreateGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGroupResponse::CopyFrom(const CreateGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.CreateGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGroupResponse::IsInitialized() const {
  return true;
}

void CreateGroupResponse::InternalSwap(CreateGroupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(group_id_, other->group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateGroupResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGroupRequest::InitAsDefaultInstance() {
}
class GetGroupRequest::_Internal {
 public:
};

GetGroupRequest::GetGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.GetGroupRequest)
}
GetGroupRequest::GetGroupRequest(const GetGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:mruv.groups.GetGroupRequest)
}

void GetGroupRequest::SharedCtor() {
  group_id_ = 0u;
}

GetGroupRequest::~GetGroupRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.GetGroupRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetGroupRequest::ArenaDtor(void* object) {
  GetGroupRequest* _this = reinterpret_cast< GetGroupRequest* >(object);
  (void)_this;
}
void GetGroupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGroupRequest& GetGroupRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGroupRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.GetGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGroupRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.GetGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.GetGroupRequest)
  return target;
}

size_t GetGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.GetGroupRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.GetGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGroupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.GetGroupRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.GetGroupRequest)
    MergeFrom(*source);
  }
}

void GetGroupRequest::MergeFrom(const GetGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.GetGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
}

void GetGroupRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.GetGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupRequest::CopyFrom(const GetGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.GetGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupRequest::IsInitialized() const {
  return true;
}

void GetGroupRequest::InternalSwap(GetGroupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(group_id_, other->group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGroupResponse::InitAsDefaultInstance() {
}
class GetGroupResponse::_Internal {
 public:
};

GetGroupResponse::GetGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.GetGroupResponse)
}
GetGroupResponse::GetGroupResponse(const GetGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:mruv.groups.GetGroupResponse)
}

void GetGroupResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetGroupResponse_groups_2fgroups_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetGroupResponse::~GetGroupResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.GetGroupResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetGroupResponse::ArenaDtor(void* object) {
  GetGroupResponse* _this = reinterpret_cast< GetGroupResponse* >(object);
  (void)_this;
}
void GetGroupResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGroupResponse& GetGroupResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGroupResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.GetGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.groups.GetGroupResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.groups.GetGroupResponse.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGroupResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.GetGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.groups.GetGroupResponse.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.groups.GetGroupResponse.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.GetGroupResponse)
  return target;
}

size_t GetGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.GetGroupResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.GetGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGroupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.GetGroupResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.GetGroupResponse)
    MergeFrom(*source);
  }
}

void GetGroupResponse::MergeFrom(const GetGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.GetGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
}

void GetGroupResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.GetGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupResponse::CopyFrom(const GetGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.GetGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupResponse::IsInitialized() const {
  return true;
}

void GetGroupResponse::InternalSwap(GetGroupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateGroupRequest::InitAsDefaultInstance() {
}
class UpdateGroupRequest::_Internal {
 public:
};

UpdateGroupRequest::UpdateGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.UpdateGroupRequest)
}
UpdateGroupRequest::UpdateGroupRequest(const UpdateGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:mruv.groups.UpdateGroupRequest)
}

void UpdateGroupRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateGroupRequest_groups_2fgroups_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_id_ = 0u;
}

UpdateGroupRequest::~UpdateGroupRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.UpdateGroupRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateGroupRequest::ArenaDtor(void* object) {
  UpdateGroupRequest* _this = reinterpret_cast< UpdateGroupRequest* >(object);
  (void)_this;
}
void UpdateGroupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateGroupRequest& UpdateGroupRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateGroupRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void UpdateGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.UpdateGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  group_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateGroupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.groups.UpdateGroupRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.groups.UpdateGroupRequest.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateGroupRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.UpdateGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.groups.UpdateGroupRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.groups.UpdateGroupRequest.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.UpdateGroupRequest)
  return target;
}

size_t UpdateGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.UpdateGroupRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateGroupRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.UpdateGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateGroupRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateGroupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.UpdateGroupRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.UpdateGroupRequest)
    MergeFrom(*source);
  }
}

void UpdateGroupRequest::MergeFrom(const UpdateGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.UpdateGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
}

void UpdateGroupRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.UpdateGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateGroupRequest::CopyFrom(const UpdateGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.UpdateGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateGroupRequest::IsInitialized() const {
  return true;
}

void UpdateGroupRequest::InternalSwap(UpdateGroupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(group_id_, other->group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateGroupRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateGroupResponse::InitAsDefaultInstance() {
}
class UpdateGroupResponse::_Internal {
 public:
};

UpdateGroupResponse::UpdateGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.UpdateGroupResponse)
}
UpdateGroupResponse::UpdateGroupResponse(const UpdateGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.groups.UpdateGroupResponse)
}

void UpdateGroupResponse::SharedCtor() {
}

UpdateGroupResponse::~UpdateGroupResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.UpdateGroupResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpdateGroupResponse::ArenaDtor(void* object) {
  UpdateGroupResponse* _this = reinterpret_cast< UpdateGroupResponse* >(object);
  (void)_this;
}
void UpdateGroupResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateGroupResponse& UpdateGroupResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateGroupResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void UpdateGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.UpdateGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateGroupResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateGroupResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.UpdateGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.UpdateGroupResponse)
  return target;
}

size_t UpdateGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.UpdateGroupResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateGroupResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.UpdateGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateGroupResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateGroupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.UpdateGroupResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.UpdateGroupResponse)
    MergeFrom(*source);
  }
}

void UpdateGroupResponse::MergeFrom(const UpdateGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.UpdateGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateGroupResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.UpdateGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateGroupResponse::CopyFrom(const UpdateGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.UpdateGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateGroupResponse::IsInitialized() const {
  return true;
}

void UpdateGroupResponse::InternalSwap(UpdateGroupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateGroupResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteGroupRequest::InitAsDefaultInstance() {
}
class DeleteGroupRequest::_Internal {
 public:
};

DeleteGroupRequest::DeleteGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.DeleteGroupRequest)
}
DeleteGroupRequest::DeleteGroupRequest(const DeleteGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:mruv.groups.DeleteGroupRequest)
}

void DeleteGroupRequest::SharedCtor() {
  group_id_ = 0u;
}

DeleteGroupRequest::~DeleteGroupRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.DeleteGroupRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteGroupRequest::ArenaDtor(void* object) {
  DeleteGroupRequest* _this = reinterpret_cast< DeleteGroupRequest* >(object);
  (void)_this;
}
void DeleteGroupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteGroupRequest& DeleteGroupRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteGroupRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void DeleteGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.DeleteGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteGroupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteGroupRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.DeleteGroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.DeleteGroupRequest)
  return target;
}

size_t DeleteGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.DeleteGroupRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteGroupRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.DeleteGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteGroupRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteGroupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.DeleteGroupRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.DeleteGroupRequest)
    MergeFrom(*source);
  }
}

void DeleteGroupRequest::MergeFrom(const DeleteGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.DeleteGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
}

void DeleteGroupRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.DeleteGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteGroupRequest::CopyFrom(const DeleteGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.DeleteGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteGroupRequest::IsInitialized() const {
  return true;
}

void DeleteGroupRequest::InternalSwap(DeleteGroupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(group_id_, other->group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteGroupRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteGroupResponse::InitAsDefaultInstance() {
}
class DeleteGroupResponse::_Internal {
 public:
};

DeleteGroupResponse::DeleteGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.DeleteGroupResponse)
}
DeleteGroupResponse::DeleteGroupResponse(const DeleteGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.groups.DeleteGroupResponse)
}

void DeleteGroupResponse::SharedCtor() {
}

DeleteGroupResponse::~DeleteGroupResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.DeleteGroupResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteGroupResponse::ArenaDtor(void* object) {
  DeleteGroupResponse* _this = reinterpret_cast< DeleteGroupResponse* >(object);
  (void)_this;
}
void DeleteGroupResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteGroupResponse& DeleteGroupResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteGroupResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void DeleteGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.DeleteGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteGroupResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteGroupResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.DeleteGroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.DeleteGroupResponse)
  return target;
}

size_t DeleteGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.DeleteGroupResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteGroupResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.DeleteGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteGroupResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteGroupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.DeleteGroupResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.DeleteGroupResponse)
    MergeFrom(*source);
  }
}

void DeleteGroupResponse::MergeFrom(const DeleteGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.DeleteGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteGroupResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.DeleteGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteGroupResponse::CopyFrom(const DeleteGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.DeleteGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteGroupResponse::IsInitialized() const {
  return true;
}

void DeleteGroupResponse::InternalSwap(DeleteGroupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteGroupResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGroupsRequest::InitAsDefaultInstance() {
}
class GetGroupsRequest::_Internal {
 public:
};

GetGroupsRequest::GetGroupsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.GetGroupsRequest)
}
GetGroupsRequest::GetGroupsRequest(const GetGroupsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&limit_, &from.limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&begin_from_) -
    reinterpret_cast<char*>(&limit_)) + sizeof(begin_from_));
  // @@protoc_insertion_point(copy_constructor:mruv.groups.GetGroupsRequest)
}

void GetGroupsRequest::SharedCtor() {
  ::memset(&limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&begin_from_) -
      reinterpret_cast<char*>(&limit_)) + sizeof(begin_from_));
}

GetGroupsRequest::~GetGroupsRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.GetGroupsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGroupsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetGroupsRequest::ArenaDtor(void* object) {
  GetGroupsRequest* _this = reinterpret_cast< GetGroupsRequest* >(object);
  (void)_this;
}
void GetGroupsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGroupsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGroupsRequest& GetGroupsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGroupsRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetGroupsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.GetGroupsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&begin_from_) -
      reinterpret_cast<char*>(&limit_)) + sizeof(begin_from_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 limit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 begin_from = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          begin_from_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGroupsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.GetGroupsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 limit = 1;
  if (this->limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_limit(), target);
  }

  // uint32 begin_from = 2;
  if (this->begin_from() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_begin_from(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.GetGroupsRequest)
  return target;
}

size_t GetGroupsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.GetGroupsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 limit = 1;
  if (this->limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_limit());
  }

  // uint32 begin_from = 2;
  if (this->begin_from() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_begin_from());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.GetGroupsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGroupsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.GetGroupsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.GetGroupsRequest)
    MergeFrom(*source);
  }
}

void GetGroupsRequest::MergeFrom(const GetGroupsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.GetGroupsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.limit() != 0) {
    _internal_set_limit(from._internal_limit());
  }
  if (from.begin_from() != 0) {
    _internal_set_begin_from(from._internal_begin_from());
  }
}

void GetGroupsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.GetGroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupsRequest::CopyFrom(const GetGroupsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.GetGroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupsRequest::IsInitialized() const {
  return true;
}

void GetGroupsRequest::InternalSwap(GetGroupsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetGroupsRequest, begin_from_)
      + sizeof(GetGroupsRequest::begin_from_)
      - PROTOBUF_FIELD_OFFSET(GetGroupsRequest, limit_)>(
          reinterpret_cast<char*>(&limit_),
          reinterpret_cast<char*>(&other->limit_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGroupsResponse_Group::InitAsDefaultInstance() {
}
class GetGroupsResponse_Group::_Internal {
 public:
};

GetGroupsResponse_Group::GetGroupsResponse_Group(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.GetGroupsResponse.Group)
}
GetGroupsResponse_Group::GetGroupsResponse_Group(const GetGroupsResponse_Group& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.groups.GetGroupsResponse.Group)
}

void GetGroupsResponse_Group::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetGroupsResponse_Group_groups_2fgroups_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
}

GetGroupsResponse_Group::~GetGroupsResponse_Group() {
  // @@protoc_insertion_point(destructor:mruv.groups.GetGroupsResponse.Group)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGroupsResponse_Group::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetGroupsResponse_Group::ArenaDtor(void* object) {
  GetGroupsResponse_Group* _this = reinterpret_cast< GetGroupsResponse_Group* >(object);
  (void)_this;
}
void GetGroupsResponse_Group::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGroupsResponse_Group::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGroupsResponse_Group& GetGroupsResponse_Group::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGroupsResponse_Group_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetGroupsResponse_Group::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.GetGroupsResponse.Group)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupsResponse_Group::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.groups.GetGroupsResponse.Group.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.groups.GetGroupsResponse.Group.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGroupsResponse_Group::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.GetGroupsResponse.Group)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.groups.GetGroupsResponse.Group.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.groups.GetGroupsResponse.Group.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.GetGroupsResponse.Group)
  return target;
}

size_t GetGroupsResponse_Group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.GetGroupsResponse.Group)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupsResponse_Group::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.GetGroupsResponse.Group)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupsResponse_Group* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGroupsResponse_Group>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.GetGroupsResponse.Group)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.GetGroupsResponse.Group)
    MergeFrom(*source);
  }
}

void GetGroupsResponse_Group::MergeFrom(const GetGroupsResponse_Group& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.GetGroupsResponse.Group)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetGroupsResponse_Group::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.GetGroupsResponse.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupsResponse_Group::CopyFrom(const GetGroupsResponse_Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.GetGroupsResponse.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupsResponse_Group::IsInitialized() const {
  return true;
}

void GetGroupsResponse_Group::InternalSwap(GetGroupsResponse_Group* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupsResponse_Group::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGroupsResponse::InitAsDefaultInstance() {
}
class GetGroupsResponse::_Internal {
 public:
};

GetGroupsResponse::GetGroupsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  groups_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.GetGroupsResponse)
}
GetGroupsResponse::GetGroupsResponse(const GetGroupsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.groups.GetGroupsResponse)
}

void GetGroupsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetGroupsResponse_groups_2fgroups_2eproto.base);
}

GetGroupsResponse::~GetGroupsResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.GetGroupsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetGroupsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetGroupsResponse::ArenaDtor(void* object) {
  GetGroupsResponse* _this = reinterpret_cast< GetGroupsResponse* >(object);
  (void)_this;
}
void GetGroupsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetGroupsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGroupsResponse& GetGroupsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGroupsResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetGroupsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.GetGroupsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groups_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGroupsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .mruv.groups.GetGroupsResponse.Group groups = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_groups(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGroupsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.GetGroupsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mruv.groups.GetGroupsResponse.Group groups = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_groups_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_groups(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.GetGroupsResponse)
  return target;
}

size_t GetGroupsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.GetGroupsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mruv.groups.GetGroupsResponse.Group groups = 1;
  total_size += 1UL * this->_internal_groups_size();
  for (const auto& msg : this->groups_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.GetGroupsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGroupsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.GetGroupsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.GetGroupsResponse)
    MergeFrom(*source);
  }
}

void GetGroupsResponse::MergeFrom(const GetGroupsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.GetGroupsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
}

void GetGroupsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.GetGroupsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupsResponse::CopyFrom(const GetGroupsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.GetGroupsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupsResponse::IsInitialized() const {
  return true;
}

void GetGroupsResponse::InternalSwap(GetGroupsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  groups_.InternalSwap(&other->groups_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AssignOwnerRequest::InitAsDefaultInstance() {
}
class AssignOwnerRequest::_Internal {
 public:
};

AssignOwnerRequest::AssignOwnerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.AssignOwnerRequest)
}
AssignOwnerRequest::AssignOwnerRequest(const AssignOwnerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&owner_type_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(owner_type_));
  // @@protoc_insertion_point(copy_constructor:mruv.groups.AssignOwnerRequest)
}

void AssignOwnerRequest::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_type_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(owner_type_));
}

AssignOwnerRequest::~AssignOwnerRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.AssignOwnerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AssignOwnerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AssignOwnerRequest::ArenaDtor(void* object) {
  AssignOwnerRequest* _this = reinterpret_cast< AssignOwnerRequest* >(object);
  (void)_this;
}
void AssignOwnerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AssignOwnerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AssignOwnerRequest& AssignOwnerRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AssignOwnerRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void AssignOwnerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.AssignOwnerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_type_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(owner_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssignOwnerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 owner_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          owner_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mruv.groups.OwnerType owner_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_owner_type(static_cast<::mruv::groups::OwnerType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AssignOwnerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.AssignOwnerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  // uint32 owner_id = 2;
  if (this->owner_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_owner_id(), target);
  }

  // .mruv.groups.OwnerType owner_type = 3;
  if (this->owner_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_owner_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.AssignOwnerRequest)
  return target;
}

size_t AssignOwnerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.AssignOwnerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  // uint32 owner_id = 2;
  if (this->owner_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_owner_id());
  }

  // .mruv.groups.OwnerType owner_type = 3;
  if (this->owner_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_owner_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssignOwnerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.AssignOwnerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AssignOwnerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AssignOwnerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.AssignOwnerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.AssignOwnerRequest)
    MergeFrom(*source);
  }
}

void AssignOwnerRequest::MergeFrom(const AssignOwnerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.AssignOwnerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
  if (from.owner_id() != 0) {
    _internal_set_owner_id(from._internal_owner_id());
  }
  if (from.owner_type() != 0) {
    _internal_set_owner_type(from._internal_owner_type());
  }
}

void AssignOwnerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.AssignOwnerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssignOwnerRequest::CopyFrom(const AssignOwnerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.AssignOwnerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssignOwnerRequest::IsInitialized() const {
  return true;
}

void AssignOwnerRequest::InternalSwap(AssignOwnerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AssignOwnerRequest, owner_type_)
      + sizeof(AssignOwnerRequest::owner_type_)
      - PROTOBUF_FIELD_OFFSET(AssignOwnerRequest, group_id_)>(
          reinterpret_cast<char*>(&group_id_),
          reinterpret_cast<char*>(&other->group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AssignOwnerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AssignOwnerResponse::InitAsDefaultInstance() {
}
class AssignOwnerResponse::_Internal {
 public:
};

AssignOwnerResponse::AssignOwnerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.AssignOwnerResponse)
}
AssignOwnerResponse::AssignOwnerResponse(const AssignOwnerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.groups.AssignOwnerResponse)
}

void AssignOwnerResponse::SharedCtor() {
}

AssignOwnerResponse::~AssignOwnerResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.AssignOwnerResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AssignOwnerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AssignOwnerResponse::ArenaDtor(void* object) {
  AssignOwnerResponse* _this = reinterpret_cast< AssignOwnerResponse* >(object);
  (void)_this;
}
void AssignOwnerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AssignOwnerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AssignOwnerResponse& AssignOwnerResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AssignOwnerResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void AssignOwnerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.AssignOwnerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssignOwnerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AssignOwnerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.AssignOwnerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.AssignOwnerResponse)
  return target;
}

size_t AssignOwnerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.AssignOwnerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssignOwnerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.AssignOwnerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AssignOwnerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AssignOwnerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.AssignOwnerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.AssignOwnerResponse)
    MergeFrom(*source);
  }
}

void AssignOwnerResponse::MergeFrom(const AssignOwnerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.AssignOwnerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AssignOwnerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.AssignOwnerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssignOwnerResponse::CopyFrom(const AssignOwnerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.AssignOwnerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssignOwnerResponse::IsInitialized() const {
  return true;
}

void AssignOwnerResponse::InternalSwap(AssignOwnerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AssignOwnerResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOwnerRequest::InitAsDefaultInstance() {
}
class GetOwnerRequest::_Internal {
 public:
};

GetOwnerRequest::GetOwnerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.GetOwnerRequest)
}
GetOwnerRequest::GetOwnerRequest(const GetOwnerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:mruv.groups.GetOwnerRequest)
}

void GetOwnerRequest::SharedCtor() {
  group_id_ = 0u;
}

GetOwnerRequest::~GetOwnerRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.GetOwnerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOwnerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetOwnerRequest::ArenaDtor(void* object) {
  GetOwnerRequest* _this = reinterpret_cast< GetOwnerRequest* >(object);
  (void)_this;
}
void GetOwnerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOwnerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOwnerRequest& GetOwnerRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOwnerRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetOwnerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.GetOwnerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOwnerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOwnerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.GetOwnerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.GetOwnerRequest)
  return target;
}

size_t GetOwnerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.GetOwnerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOwnerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.GetOwnerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOwnerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOwnerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.GetOwnerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.GetOwnerRequest)
    MergeFrom(*source);
  }
}

void GetOwnerRequest::MergeFrom(const GetOwnerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.GetOwnerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
}

void GetOwnerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.GetOwnerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOwnerRequest::CopyFrom(const GetOwnerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.GetOwnerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOwnerRequest::IsInitialized() const {
  return true;
}

void GetOwnerRequest::InternalSwap(GetOwnerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(group_id_, other->group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOwnerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOwnerResponse::InitAsDefaultInstance() {
}
class GetOwnerResponse::_Internal {
 public:
};

GetOwnerResponse::GetOwnerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.GetOwnerResponse)
}
GetOwnerResponse::GetOwnerResponse(const GetOwnerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&owner_id_, &from.owner_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&owner_type_) -
    reinterpret_cast<char*>(&owner_id_)) + sizeof(owner_type_));
  // @@protoc_insertion_point(copy_constructor:mruv.groups.GetOwnerResponse)
}

void GetOwnerResponse::SharedCtor() {
  ::memset(&owner_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_type_) -
      reinterpret_cast<char*>(&owner_id_)) + sizeof(owner_type_));
}

GetOwnerResponse::~GetOwnerResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.GetOwnerResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetOwnerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetOwnerResponse::ArenaDtor(void* object) {
  GetOwnerResponse* _this = reinterpret_cast< GetOwnerResponse* >(object);
  (void)_this;
}
void GetOwnerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetOwnerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOwnerResponse& GetOwnerResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOwnerResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetOwnerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.GetOwnerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&owner_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_type_) -
      reinterpret_cast<char*>(&owner_id_)) + sizeof(owner_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOwnerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 owner_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          owner_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mruv.groups.OwnerType owner_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_owner_type(static_cast<::mruv::groups::OwnerType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOwnerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.GetOwnerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 owner_id = 1;
  if (this->owner_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_owner_id(), target);
  }

  // .mruv.groups.OwnerType owner_type = 2;
  if (this->owner_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_owner_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.GetOwnerResponse)
  return target;
}

size_t GetOwnerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.GetOwnerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 owner_id = 1;
  if (this->owner_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_owner_id());
  }

  // .mruv.groups.OwnerType owner_type = 2;
  if (this->owner_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_owner_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOwnerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.GetOwnerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOwnerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOwnerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.GetOwnerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.GetOwnerResponse)
    MergeFrom(*source);
  }
}

void GetOwnerResponse::MergeFrom(const GetOwnerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.GetOwnerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.owner_id() != 0) {
    _internal_set_owner_id(from._internal_owner_id());
  }
  if (from.owner_type() != 0) {
    _internal_set_owner_type(from._internal_owner_type());
  }
}

void GetOwnerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.GetOwnerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOwnerResponse::CopyFrom(const GetOwnerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.GetOwnerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOwnerResponse::IsInitialized() const {
  return true;
}

void GetOwnerResponse::InternalSwap(GetOwnerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetOwnerResponse, owner_type_)
      + sizeof(GetOwnerResponse::owner_type_)
      - PROTOBUF_FIELD_OFFSET(GetOwnerResponse, owner_id_)>(
          reinterpret_cast<char*>(&owner_id_),
          reinterpret_cast<char*>(&other->owner_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOwnerResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddMemberRequest::InitAsDefaultInstance() {
}
class AddMemberRequest::_Internal {
 public:
};

AddMemberRequest::AddMemberRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.AddMemberRequest)
}
AddMemberRequest::AddMemberRequest(const AddMemberRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&member_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(member_id_));
  // @@protoc_insertion_point(copy_constructor:mruv.groups.AddMemberRequest)
}

void AddMemberRequest::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(member_id_));
}

AddMemberRequest::~AddMemberRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.AddMemberRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddMemberRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddMemberRequest::ArenaDtor(void* object) {
  AddMemberRequest* _this = reinterpret_cast< AddMemberRequest* >(object);
  (void)_this;
}
void AddMemberRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddMemberRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddMemberRequest& AddMemberRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddMemberRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void AddMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.AddMemberRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(member_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddMemberRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 member_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          member_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddMemberRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.AddMemberRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  // uint32 member_id = 2;
  if (this->member_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_member_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.AddMemberRequest)
  return target;
}

size_t AddMemberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.AddMemberRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  // uint32 member_id = 2;
  if (this->member_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_member_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddMemberRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.AddMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddMemberRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddMemberRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.AddMemberRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.AddMemberRequest)
    MergeFrom(*source);
  }
}

void AddMemberRequest::MergeFrom(const AddMemberRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.AddMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
  if (from.member_id() != 0) {
    _internal_set_member_id(from._internal_member_id());
  }
}

void AddMemberRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.AddMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddMemberRequest::CopyFrom(const AddMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.AddMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddMemberRequest::IsInitialized() const {
  return true;
}

void AddMemberRequest::InternalSwap(AddMemberRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddMemberRequest, member_id_)
      + sizeof(AddMemberRequest::member_id_)
      - PROTOBUF_FIELD_OFFSET(AddMemberRequest, group_id_)>(
          reinterpret_cast<char*>(&group_id_),
          reinterpret_cast<char*>(&other->group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddMemberRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddMemberResponse::InitAsDefaultInstance() {
}
class AddMemberResponse::_Internal {
 public:
};

AddMemberResponse::AddMemberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.AddMemberResponse)
}
AddMemberResponse::AddMemberResponse(const AddMemberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.groups.AddMemberResponse)
}

void AddMemberResponse::SharedCtor() {
}

AddMemberResponse::~AddMemberResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.AddMemberResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddMemberResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddMemberResponse::ArenaDtor(void* object) {
  AddMemberResponse* _this = reinterpret_cast< AddMemberResponse* >(object);
  (void)_this;
}
void AddMemberResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddMemberResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddMemberResponse& AddMemberResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddMemberResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void AddMemberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.AddMemberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddMemberResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddMemberResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.AddMemberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.AddMemberResponse)
  return target;
}

size_t AddMemberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.AddMemberResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddMemberResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.AddMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddMemberResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddMemberResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.AddMemberResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.AddMemberResponse)
    MergeFrom(*source);
  }
}

void AddMemberResponse::MergeFrom(const AddMemberResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.AddMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AddMemberResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.AddMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddMemberResponse::CopyFrom(const AddMemberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.AddMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddMemberResponse::IsInitialized() const {
  return true;
}

void AddMemberResponse::InternalSwap(AddMemberResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddMemberResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetMembersRequest::InitAsDefaultInstance() {
}
class GetMembersRequest::_Internal {
 public:
};

GetMembersRequest::GetMembersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.GetMembersRequest)
}
GetMembersRequest::GetMembersRequest(const GetMembersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:mruv.groups.GetMembersRequest)
}

void GetMembersRequest::SharedCtor() {
  group_id_ = 0u;
}

GetMembersRequest::~GetMembersRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.GetMembersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMembersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetMembersRequest::ArenaDtor(void* object) {
  GetMembersRequest* _this = reinterpret_cast< GetMembersRequest* >(object);
  (void)_this;
}
void GetMembersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMembersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMembersRequest& GetMembersRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMembersRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetMembersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.GetMembersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMembersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMembersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.GetMembersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.GetMembersRequest)
  return target;
}

size_t GetMembersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.GetMembersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMembersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.GetMembersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMembersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMembersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.GetMembersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.GetMembersRequest)
    MergeFrom(*source);
  }
}

void GetMembersRequest::MergeFrom(const GetMembersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.GetMembersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
}

void GetMembersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.GetMembersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMembersRequest::CopyFrom(const GetMembersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.GetMembersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMembersRequest::IsInitialized() const {
  return true;
}

void GetMembersRequest::InternalSwap(GetMembersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(group_id_, other->group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMembersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetMembersResponse::InitAsDefaultInstance() {
}
class GetMembersResponse::_Internal {
 public:
};

GetMembersResponse::GetMembersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  member_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.GetMembersResponse)
}
GetMembersResponse::GetMembersResponse(const GetMembersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      member_ids_(from.member_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  member_type_ = from.member_type_;
  // @@protoc_insertion_point(copy_constructor:mruv.groups.GetMembersResponse)
}

void GetMembersResponse::SharedCtor() {
  member_type_ = 0;
}

GetMembersResponse::~GetMembersResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.GetMembersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMembersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetMembersResponse::ArenaDtor(void* object) {
  GetMembersResponse* _this = reinterpret_cast< GetMembersResponse* >(object);
  (void)_this;
}
void GetMembersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMembersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMembersResponse& GetMembersResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMembersResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetMembersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.GetMembersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_ids_.Clear();
  member_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMembersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mruv.groups.MemberType member_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_member_type(static_cast<::mruv::groups::MemberType>(val));
        } else goto handle_unusual;
        continue;
      // repeated uint32 member_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_member_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_member_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMembersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.GetMembersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mruv.groups.MemberType member_type = 1;
  if (this->member_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_member_type(), target);
  }

  // repeated uint32 member_ids = 2;
  {
    int byte_size = _member_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_member_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.GetMembersResponse)
  return target;
}

size_t GetMembersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.GetMembersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 member_ids = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->member_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _member_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .mruv.groups.MemberType member_type = 1;
  if (this->member_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_member_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMembersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.GetMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMembersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMembersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.GetMembersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.GetMembersResponse)
    MergeFrom(*source);
  }
}

void GetMembersResponse::MergeFrom(const GetMembersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.GetMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_ids_.MergeFrom(from.member_ids_);
  if (from.member_type() != 0) {
    _internal_set_member_type(from._internal_member_type());
  }
}

void GetMembersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.GetMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMembersResponse::CopyFrom(const GetMembersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.GetMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMembersResponse::IsInitialized() const {
  return true;
}

void GetMembersResponse::InternalSwap(GetMembersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  member_ids_.InternalSwap(&other->member_ids_);
  swap(member_type_, other->member_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMembersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveMemberRequest::InitAsDefaultInstance() {
}
class RemoveMemberRequest::_Internal {
 public:
};

RemoveMemberRequest::RemoveMemberRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.RemoveMemberRequest)
}
RemoveMemberRequest::RemoveMemberRequest(const RemoveMemberRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&member_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(member_id_));
  // @@protoc_insertion_point(copy_constructor:mruv.groups.RemoveMemberRequest)
}

void RemoveMemberRequest::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(member_id_));
}

RemoveMemberRequest::~RemoveMemberRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.RemoveMemberRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveMemberRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveMemberRequest::ArenaDtor(void* object) {
  RemoveMemberRequest* _this = reinterpret_cast< RemoveMemberRequest* >(object);
  (void)_this;
}
void RemoveMemberRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveMemberRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveMemberRequest& RemoveMemberRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveMemberRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void RemoveMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.RemoveMemberRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(member_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveMemberRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 member_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          member_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveMemberRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.RemoveMemberRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  // uint32 member_id = 2;
  if (this->member_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_member_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.RemoveMemberRequest)
  return target;
}

size_t RemoveMemberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.RemoveMemberRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  // uint32 member_id = 2;
  if (this->member_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_member_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveMemberRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.RemoveMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveMemberRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveMemberRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.RemoveMemberRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.RemoveMemberRequest)
    MergeFrom(*source);
  }
}

void RemoveMemberRequest::MergeFrom(const RemoveMemberRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.RemoveMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
  if (from.member_id() != 0) {
    _internal_set_member_id(from._internal_member_id());
  }
}

void RemoveMemberRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.RemoveMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveMemberRequest::CopyFrom(const RemoveMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.RemoveMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveMemberRequest::IsInitialized() const {
  return true;
}

void RemoveMemberRequest::InternalSwap(RemoveMemberRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RemoveMemberRequest, member_id_)
      + sizeof(RemoveMemberRequest::member_id_)
      - PROTOBUF_FIELD_OFFSET(RemoveMemberRequest, group_id_)>(
          reinterpret_cast<char*>(&group_id_),
          reinterpret_cast<char*>(&other->group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveMemberRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveMemberResponse::InitAsDefaultInstance() {
}
class RemoveMemberResponse::_Internal {
 public:
};

RemoveMemberResponse::RemoveMemberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.RemoveMemberResponse)
}
RemoveMemberResponse::RemoveMemberResponse(const RemoveMemberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.groups.RemoveMemberResponse)
}

void RemoveMemberResponse::SharedCtor() {
}

RemoveMemberResponse::~RemoveMemberResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.RemoveMemberResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveMemberResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveMemberResponse::ArenaDtor(void* object) {
  RemoveMemberResponse* _this = reinterpret_cast< RemoveMemberResponse* >(object);
  (void)_this;
}
void RemoveMemberResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveMemberResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveMemberResponse& RemoveMemberResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveMemberResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void RemoveMemberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.RemoveMemberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveMemberResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveMemberResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.RemoveMemberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.RemoveMemberResponse)
  return target;
}

size_t RemoveMemberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.RemoveMemberResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveMemberResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.RemoveMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveMemberResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveMemberResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.RemoveMemberResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.RemoveMemberResponse)
    MergeFrom(*source);
  }
}

void RemoveMemberResponse::MergeFrom(const RemoveMemberResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.RemoveMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemoveMemberResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.RemoveMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveMemberResponse::CopyFrom(const RemoveMemberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.RemoveMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveMemberResponse::IsInitialized() const {
  return true;
}

void RemoveMemberResponse::InternalSwap(RemoveMemberResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveMemberResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddPermissionRequest::InitAsDefaultInstance() {
}
class AddPermissionRequest::_Internal {
 public:
};

AddPermissionRequest::AddPermissionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.AddPermissionRequest)
}
AddPermissionRequest::AddPermissionRequest(const AddPermissionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  definition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_definition().empty()) {
    definition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_definition(),
      GetArena());
  }
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:mruv.groups.AddPermissionRequest)
}

void AddPermissionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddPermissionRequest_groups_2fgroups_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  definition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_id_ = 0u;
}

AddPermissionRequest::~AddPermissionRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.AddPermissionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddPermissionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  definition_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddPermissionRequest::ArenaDtor(void* object) {
  AddPermissionRequest* _this = reinterpret_cast< AddPermissionRequest* >(object);
  (void)_this;
}
void AddPermissionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPermissionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddPermissionRequest& AddPermissionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddPermissionRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void AddPermissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.AddPermissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  definition_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  group_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPermissionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.groups.AddPermissionRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string definition = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_definition();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.groups.AddPermissionRequest.definition"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddPermissionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.AddPermissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.groups.AddPermissionRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string definition = 3;
  if (this->definition().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_definition().data(), static_cast<int>(this->_internal_definition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.groups.AddPermissionRequest.definition");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_definition(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.AddPermissionRequest)
  return target;
}

size_t AddPermissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.AddPermissionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string definition = 3;
  if (this->definition().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_definition());
  }

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddPermissionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.AddPermissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPermissionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddPermissionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.AddPermissionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.AddPermissionRequest)
    MergeFrom(*source);
  }
}

void AddPermissionRequest::MergeFrom(const AddPermissionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.AddPermissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.definition().size() > 0) {
    _internal_set_definition(from._internal_definition());
  }
  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
}

void AddPermissionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.AddPermissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPermissionRequest::CopyFrom(const AddPermissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.AddPermissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPermissionRequest::IsInitialized() const {
  return true;
}

void AddPermissionRequest::InternalSwap(AddPermissionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  definition_.Swap(&other->definition_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(group_id_, other->group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPermissionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddPermissionResponse::InitAsDefaultInstance() {
}
class AddPermissionResponse::_Internal {
 public:
};

AddPermissionResponse::AddPermissionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.AddPermissionResponse)
}
AddPermissionResponse::AddPermissionResponse(const AddPermissionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  permission_id_ = from.permission_id_;
  // @@protoc_insertion_point(copy_constructor:mruv.groups.AddPermissionResponse)
}

void AddPermissionResponse::SharedCtor() {
  permission_id_ = 0u;
}

AddPermissionResponse::~AddPermissionResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.AddPermissionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddPermissionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddPermissionResponse::ArenaDtor(void* object) {
  AddPermissionResponse* _this = reinterpret_cast< AddPermissionResponse* >(object);
  (void)_this;
}
void AddPermissionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPermissionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddPermissionResponse& AddPermissionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddPermissionResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void AddPermissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.AddPermissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permission_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPermissionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 permission_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          permission_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddPermissionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.AddPermissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 permission_id = 1;
  if (this->permission_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_permission_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.AddPermissionResponse)
  return target;
}

size_t AddPermissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.AddPermissionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 permission_id = 1;
  if (this->permission_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_permission_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddPermissionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.AddPermissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPermissionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddPermissionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.AddPermissionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.AddPermissionResponse)
    MergeFrom(*source);
  }
}

void AddPermissionResponse::MergeFrom(const AddPermissionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.AddPermissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.permission_id() != 0) {
    _internal_set_permission_id(from._internal_permission_id());
  }
}

void AddPermissionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.AddPermissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPermissionResponse::CopyFrom(const AddPermissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.AddPermissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPermissionResponse::IsInitialized() const {
  return true;
}

void AddPermissionResponse::InternalSwap(AddPermissionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(permission_id_, other->permission_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPermissionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPermissionsRequest::InitAsDefaultInstance() {
}
class GetPermissionsRequest::_Internal {
 public:
};

GetPermissionsRequest::GetPermissionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.GetPermissionsRequest)
}
GetPermissionsRequest::GetPermissionsRequest(const GetPermissionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:mruv.groups.GetPermissionsRequest)
}

void GetPermissionsRequest::SharedCtor() {
  group_id_ = 0u;
}

GetPermissionsRequest::~GetPermissionsRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.GetPermissionsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPermissionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetPermissionsRequest::ArenaDtor(void* object) {
  GetPermissionsRequest* _this = reinterpret_cast< GetPermissionsRequest* >(object);
  (void)_this;
}
void GetPermissionsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPermissionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPermissionsRequest& GetPermissionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPermissionsRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetPermissionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.GetPermissionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPermissionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPermissionsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.GetPermissionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.GetPermissionsRequest)
  return target;
}

size_t GetPermissionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.GetPermissionsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPermissionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.GetPermissionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPermissionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPermissionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.GetPermissionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.GetPermissionsRequest)
    MergeFrom(*source);
  }
}

void GetPermissionsRequest::MergeFrom(const GetPermissionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.GetPermissionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
}

void GetPermissionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.GetPermissionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPermissionsRequest::CopyFrom(const GetPermissionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.GetPermissionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPermissionsRequest::IsInitialized() const {
  return true;
}

void GetPermissionsRequest::InternalSwap(GetPermissionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(group_id_, other->group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPermissionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPermissionsResponse_Permission::InitAsDefaultInstance() {
}
class GetPermissionsResponse_Permission::_Internal {
 public:
};

GetPermissionsResponse_Permission::GetPermissionsResponse_Permission(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.GetPermissionsResponse.Permission)
}
GetPermissionsResponse_Permission::GetPermissionsResponse_Permission(const GetPermissionsResponse_Permission& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  definition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_definition().empty()) {
    definition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_definition(),
      GetArena());
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.groups.GetPermissionsResponse.Permission)
}

void GetPermissionsResponse_Permission::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPermissionsResponse_Permission_groups_2fgroups_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  definition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
}

GetPermissionsResponse_Permission::~GetPermissionsResponse_Permission() {
  // @@protoc_insertion_point(destructor:mruv.groups.GetPermissionsResponse.Permission)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPermissionsResponse_Permission::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  definition_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPermissionsResponse_Permission::ArenaDtor(void* object) {
  GetPermissionsResponse_Permission* _this = reinterpret_cast< GetPermissionsResponse_Permission* >(object);
  (void)_this;
}
void GetPermissionsResponse_Permission::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPermissionsResponse_Permission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPermissionsResponse_Permission& GetPermissionsResponse_Permission::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPermissionsResponse_Permission_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetPermissionsResponse_Permission::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.GetPermissionsResponse.Permission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  definition_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPermissionsResponse_Permission::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.groups.GetPermissionsResponse.Permission.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string definition = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_definition();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.groups.GetPermissionsResponse.Permission.definition"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPermissionsResponse_Permission::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.GetPermissionsResponse.Permission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.groups.GetPermissionsResponse.Permission.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string definition = 3;
  if (this->definition().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_definition().data(), static_cast<int>(this->_internal_definition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.groups.GetPermissionsResponse.Permission.definition");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_definition(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.GetPermissionsResponse.Permission)
  return target;
}

size_t GetPermissionsResponse_Permission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.GetPermissionsResponse.Permission)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string definition = 3;
  if (this->definition().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_definition());
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPermissionsResponse_Permission::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.GetPermissionsResponse.Permission)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPermissionsResponse_Permission* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPermissionsResponse_Permission>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.GetPermissionsResponse.Permission)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.GetPermissionsResponse.Permission)
    MergeFrom(*source);
  }
}

void GetPermissionsResponse_Permission::MergeFrom(const GetPermissionsResponse_Permission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.GetPermissionsResponse.Permission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.definition().size() > 0) {
    _internal_set_definition(from._internal_definition());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetPermissionsResponse_Permission::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.GetPermissionsResponse.Permission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPermissionsResponse_Permission::CopyFrom(const GetPermissionsResponse_Permission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.GetPermissionsResponse.Permission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPermissionsResponse_Permission::IsInitialized() const {
  return true;
}

void GetPermissionsResponse_Permission::InternalSwap(GetPermissionsResponse_Permission* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  definition_.Swap(&other->definition_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPermissionsResponse_Permission::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPermissionsResponse::InitAsDefaultInstance() {
}
class GetPermissionsResponse::_Internal {
 public:
};

GetPermissionsResponse::GetPermissionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  permissions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.GetPermissionsResponse)
}
GetPermissionsResponse::GetPermissionsResponse(const GetPermissionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      permissions_(from.permissions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.groups.GetPermissionsResponse)
}

void GetPermissionsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPermissionsResponse_groups_2fgroups_2eproto.base);
}

GetPermissionsResponse::~GetPermissionsResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.GetPermissionsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPermissionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetPermissionsResponse::ArenaDtor(void* object) {
  GetPermissionsResponse* _this = reinterpret_cast< GetPermissionsResponse* >(object);
  (void)_this;
}
void GetPermissionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPermissionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPermissionsResponse& GetPermissionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPermissionsResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetPermissionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.GetPermissionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permissions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPermissionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .mruv.groups.GetPermissionsResponse.Permission permissions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_permissions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPermissionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.GetPermissionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mruv.groups.GetPermissionsResponse.Permission permissions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_permissions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_permissions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.GetPermissionsResponse)
  return target;
}

size_t GetPermissionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.GetPermissionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mruv.groups.GetPermissionsResponse.Permission permissions = 1;
  total_size += 1UL * this->_internal_permissions_size();
  for (const auto& msg : this->permissions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPermissionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.GetPermissionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPermissionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPermissionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.GetPermissionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.GetPermissionsResponse)
    MergeFrom(*source);
  }
}

void GetPermissionsResponse::MergeFrom(const GetPermissionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.GetPermissionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  permissions_.MergeFrom(from.permissions_);
}

void GetPermissionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.GetPermissionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPermissionsResponse::CopyFrom(const GetPermissionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.GetPermissionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPermissionsResponse::IsInitialized() const {
  return true;
}

void GetPermissionsResponse::InternalSwap(GetPermissionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  permissions_.InternalSwap(&other->permissions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPermissionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemovePermissionRequest::InitAsDefaultInstance() {
}
class RemovePermissionRequest::_Internal {
 public:
};

RemovePermissionRequest::RemovePermissionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.RemovePermissionRequest)
}
RemovePermissionRequest::RemovePermissionRequest(const RemovePermissionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&permission_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(permission_id_));
  // @@protoc_insertion_point(copy_constructor:mruv.groups.RemovePermissionRequest)
}

void RemovePermissionRequest::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&permission_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(permission_id_));
}

RemovePermissionRequest::~RemovePermissionRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.RemovePermissionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePermissionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemovePermissionRequest::ArenaDtor(void* object) {
  RemovePermissionRequest* _this = reinterpret_cast< RemovePermissionRequest* >(object);
  (void)_this;
}
void RemovePermissionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePermissionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemovePermissionRequest& RemovePermissionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemovePermissionRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void RemovePermissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.RemovePermissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&permission_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(permission_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePermissionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 permission_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          permission_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePermissionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.RemovePermissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  // uint32 permission_id = 2;
  if (this->permission_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_permission_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.RemovePermissionRequest)
  return target;
}

size_t RemovePermissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.RemovePermissionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  // uint32 permission_id = 2;
  if (this->permission_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_permission_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePermissionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.RemovePermissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePermissionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePermissionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.RemovePermissionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.RemovePermissionRequest)
    MergeFrom(*source);
  }
}

void RemovePermissionRequest::MergeFrom(const RemovePermissionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.RemovePermissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
  if (from.permission_id() != 0) {
    _internal_set_permission_id(from._internal_permission_id());
  }
}

void RemovePermissionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.RemovePermissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePermissionRequest::CopyFrom(const RemovePermissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.RemovePermissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePermissionRequest::IsInitialized() const {
  return true;
}

void RemovePermissionRequest::InternalSwap(RemovePermissionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RemovePermissionRequest, permission_id_)
      + sizeof(RemovePermissionRequest::permission_id_)
      - PROTOBUF_FIELD_OFFSET(RemovePermissionRequest, group_id_)>(
          reinterpret_cast<char*>(&group_id_),
          reinterpret_cast<char*>(&other->group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePermissionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemovePermissionResponse::InitAsDefaultInstance() {
}
class RemovePermissionResponse::_Internal {
 public:
};

RemovePermissionResponse::RemovePermissionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.RemovePermissionResponse)
}
RemovePermissionResponse::RemovePermissionResponse(const RemovePermissionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.groups.RemovePermissionResponse)
}

void RemovePermissionResponse::SharedCtor() {
}

RemovePermissionResponse::~RemovePermissionResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.RemovePermissionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemovePermissionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemovePermissionResponse::ArenaDtor(void* object) {
  RemovePermissionResponse* _this = reinterpret_cast< RemovePermissionResponse* >(object);
  (void)_this;
}
void RemovePermissionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemovePermissionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemovePermissionResponse& RemovePermissionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemovePermissionResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void RemovePermissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.RemovePermissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemovePermissionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemovePermissionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.RemovePermissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.RemovePermissionResponse)
  return target;
}

size_t RemovePermissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.RemovePermissionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemovePermissionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.RemovePermissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePermissionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemovePermissionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.RemovePermissionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.RemovePermissionResponse)
    MergeFrom(*source);
  }
}

void RemovePermissionResponse::MergeFrom(const RemovePermissionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.RemovePermissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemovePermissionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.RemovePermissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePermissionResponse::CopyFrom(const RemovePermissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.RemovePermissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePermissionResponse::IsInitialized() const {
  return true;
}

void RemovePermissionResponse::InternalSwap(RemovePermissionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemovePermissionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddSubgroupRequest::InitAsDefaultInstance() {
}
class AddSubgroupRequest::_Internal {
 public:
};

AddSubgroupRequest::AddSubgroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.AddSubgroupRequest)
}
AddSubgroupRequest::AddSubgroupRequest(const AddSubgroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&subgroup_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(subgroup_id_));
  // @@protoc_insertion_point(copy_constructor:mruv.groups.AddSubgroupRequest)
}

void AddSubgroupRequest::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&subgroup_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(subgroup_id_));
}

AddSubgroupRequest::~AddSubgroupRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.AddSubgroupRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddSubgroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddSubgroupRequest::ArenaDtor(void* object) {
  AddSubgroupRequest* _this = reinterpret_cast< AddSubgroupRequest* >(object);
  (void)_this;
}
void AddSubgroupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddSubgroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddSubgroupRequest& AddSubgroupRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddSubgroupRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void AddSubgroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.AddSubgroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&subgroup_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(subgroup_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddSubgroupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 subgroup_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          subgroup_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddSubgroupRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.AddSubgroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  // uint32 subgroup_id = 2;
  if (this->subgroup_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_subgroup_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.AddSubgroupRequest)
  return target;
}

size_t AddSubgroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.AddSubgroupRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  // uint32 subgroup_id = 2;
  if (this->subgroup_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subgroup_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSubgroupRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.AddSubgroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSubgroupRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddSubgroupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.AddSubgroupRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.AddSubgroupRequest)
    MergeFrom(*source);
  }
}

void AddSubgroupRequest::MergeFrom(const AddSubgroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.AddSubgroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
  if (from.subgroup_id() != 0) {
    _internal_set_subgroup_id(from._internal_subgroup_id());
  }
}

void AddSubgroupRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.AddSubgroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSubgroupRequest::CopyFrom(const AddSubgroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.AddSubgroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSubgroupRequest::IsInitialized() const {
  return true;
}

void AddSubgroupRequest::InternalSwap(AddSubgroupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddSubgroupRequest, subgroup_id_)
      + sizeof(AddSubgroupRequest::subgroup_id_)
      - PROTOBUF_FIELD_OFFSET(AddSubgroupRequest, group_id_)>(
          reinterpret_cast<char*>(&group_id_),
          reinterpret_cast<char*>(&other->group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddSubgroupRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddSubgroupResponse::InitAsDefaultInstance() {
}
class AddSubgroupResponse::_Internal {
 public:
};

AddSubgroupResponse::AddSubgroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.AddSubgroupResponse)
}
AddSubgroupResponse::AddSubgroupResponse(const AddSubgroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.groups.AddSubgroupResponse)
}

void AddSubgroupResponse::SharedCtor() {
}

AddSubgroupResponse::~AddSubgroupResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.AddSubgroupResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddSubgroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddSubgroupResponse::ArenaDtor(void* object) {
  AddSubgroupResponse* _this = reinterpret_cast< AddSubgroupResponse* >(object);
  (void)_this;
}
void AddSubgroupResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddSubgroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddSubgroupResponse& AddSubgroupResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddSubgroupResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void AddSubgroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.AddSubgroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddSubgroupResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddSubgroupResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.AddSubgroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.AddSubgroupResponse)
  return target;
}

size_t AddSubgroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.AddSubgroupResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSubgroupResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.AddSubgroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSubgroupResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddSubgroupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.AddSubgroupResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.AddSubgroupResponse)
    MergeFrom(*source);
  }
}

void AddSubgroupResponse::MergeFrom(const AddSubgroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.AddSubgroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AddSubgroupResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.AddSubgroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSubgroupResponse::CopyFrom(const AddSubgroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.AddSubgroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSubgroupResponse::IsInitialized() const {
  return true;
}

void AddSubgroupResponse::InternalSwap(AddSubgroupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddSubgroupResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSubgroupsRequest::InitAsDefaultInstance() {
}
class GetSubgroupsRequest::_Internal {
 public:
};

GetSubgroupsRequest::GetSubgroupsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.GetSubgroupsRequest)
}
GetSubgroupsRequest::GetSubgroupsRequest(const GetSubgroupsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:mruv.groups.GetSubgroupsRequest)
}

void GetSubgroupsRequest::SharedCtor() {
  group_id_ = 0u;
}

GetSubgroupsRequest::~GetSubgroupsRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.GetSubgroupsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSubgroupsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetSubgroupsRequest::ArenaDtor(void* object) {
  GetSubgroupsRequest* _this = reinterpret_cast< GetSubgroupsRequest* >(object);
  (void)_this;
}
void GetSubgroupsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSubgroupsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSubgroupsRequest& GetSubgroupsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSubgroupsRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetSubgroupsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.GetSubgroupsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSubgroupsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSubgroupsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.GetSubgroupsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.GetSubgroupsRequest)
  return target;
}

size_t GetSubgroupsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.GetSubgroupsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSubgroupsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.GetSubgroupsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSubgroupsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSubgroupsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.GetSubgroupsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.GetSubgroupsRequest)
    MergeFrom(*source);
  }
}

void GetSubgroupsRequest::MergeFrom(const GetSubgroupsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.GetSubgroupsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
}

void GetSubgroupsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.GetSubgroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSubgroupsRequest::CopyFrom(const GetSubgroupsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.GetSubgroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSubgroupsRequest::IsInitialized() const {
  return true;
}

void GetSubgroupsRequest::InternalSwap(GetSubgroupsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(group_id_, other->group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSubgroupsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSubgroupsResponse::InitAsDefaultInstance() {
}
class GetSubgroupsResponse::_Internal {
 public:
};

GetSubgroupsResponse::GetSubgroupsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  subgroup_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.GetSubgroupsResponse)
}
GetSubgroupsResponse::GetSubgroupsResponse(const GetSubgroupsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      subgroup_ids_(from.subgroup_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.groups.GetSubgroupsResponse)
}

void GetSubgroupsResponse::SharedCtor() {
}

GetSubgroupsResponse::~GetSubgroupsResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.GetSubgroupsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSubgroupsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetSubgroupsResponse::ArenaDtor(void* object) {
  GetSubgroupsResponse* _this = reinterpret_cast< GetSubgroupsResponse* >(object);
  (void)_this;
}
void GetSubgroupsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSubgroupsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSubgroupsResponse& GetSubgroupsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSubgroupsResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetSubgroupsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.GetSubgroupsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subgroup_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSubgroupsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 subgroup_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_subgroup_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_subgroup_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSubgroupsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.GetSubgroupsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 subgroup_ids = 1;
  {
    int byte_size = _subgroup_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_subgroup_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.GetSubgroupsResponse)
  return target;
}

size_t GetSubgroupsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.GetSubgroupsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 subgroup_ids = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->subgroup_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _subgroup_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSubgroupsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.GetSubgroupsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSubgroupsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSubgroupsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.GetSubgroupsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.GetSubgroupsResponse)
    MergeFrom(*source);
  }
}

void GetSubgroupsResponse::MergeFrom(const GetSubgroupsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.GetSubgroupsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subgroup_ids_.MergeFrom(from.subgroup_ids_);
}

void GetSubgroupsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.GetSubgroupsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSubgroupsResponse::CopyFrom(const GetSubgroupsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.GetSubgroupsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSubgroupsResponse::IsInitialized() const {
  return true;
}

void GetSubgroupsResponse::InternalSwap(GetSubgroupsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subgroup_ids_.InternalSwap(&other->subgroup_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSubgroupsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveSubgroupRequest::InitAsDefaultInstance() {
}
class RemoveSubgroupRequest::_Internal {
 public:
};

RemoveSubgroupRequest::RemoveSubgroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.RemoveSubgroupRequest)
}
RemoveSubgroupRequest::RemoveSubgroupRequest(const RemoveSubgroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&subgroup_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(subgroup_id_));
  // @@protoc_insertion_point(copy_constructor:mruv.groups.RemoveSubgroupRequest)
}

void RemoveSubgroupRequest::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&subgroup_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(subgroup_id_));
}

RemoveSubgroupRequest::~RemoveSubgroupRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.RemoveSubgroupRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSubgroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveSubgroupRequest::ArenaDtor(void* object) {
  RemoveSubgroupRequest* _this = reinterpret_cast< RemoveSubgroupRequest* >(object);
  (void)_this;
}
void RemoveSubgroupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSubgroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveSubgroupRequest& RemoveSubgroupRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveSubgroupRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void RemoveSubgroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.RemoveSubgroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&subgroup_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(subgroup_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSubgroupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 subgroup_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          subgroup_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSubgroupRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.RemoveSubgroupRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_group_id(), target);
  }

  // uint32 subgroup_id = 2;
  if (this->subgroup_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_subgroup_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.RemoveSubgroupRequest)
  return target;
}

size_t RemoveSubgroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.RemoveSubgroupRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_group_id());
  }

  // uint32 subgroup_id = 2;
  if (this->subgroup_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subgroup_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSubgroupRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.RemoveSubgroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSubgroupRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSubgroupRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.RemoveSubgroupRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.RemoveSubgroupRequest)
    MergeFrom(*source);
  }
}

void RemoveSubgroupRequest::MergeFrom(const RemoveSubgroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.RemoveSubgroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    _internal_set_group_id(from._internal_group_id());
  }
  if (from.subgroup_id() != 0) {
    _internal_set_subgroup_id(from._internal_subgroup_id());
  }
}

void RemoveSubgroupRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.RemoveSubgroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSubgroupRequest::CopyFrom(const RemoveSubgroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.RemoveSubgroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSubgroupRequest::IsInitialized() const {
  return true;
}

void RemoveSubgroupRequest::InternalSwap(RemoveSubgroupRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RemoveSubgroupRequest, subgroup_id_)
      + sizeof(RemoveSubgroupRequest::subgroup_id_)
      - PROTOBUF_FIELD_OFFSET(RemoveSubgroupRequest, group_id_)>(
          reinterpret_cast<char*>(&group_id_),
          reinterpret_cast<char*>(&other->group_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSubgroupRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveSubgroupResponse::InitAsDefaultInstance() {
}
class RemoveSubgroupResponse::_Internal {
 public:
};

RemoveSubgroupResponse::RemoveSubgroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.RemoveSubgroupResponse)
}
RemoveSubgroupResponse::RemoveSubgroupResponse(const RemoveSubgroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.groups.RemoveSubgroupResponse)
}

void RemoveSubgroupResponse::SharedCtor() {
}

RemoveSubgroupResponse::~RemoveSubgroupResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.RemoveSubgroupResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSubgroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveSubgroupResponse::ArenaDtor(void* object) {
  RemoveSubgroupResponse* _this = reinterpret_cast< RemoveSubgroupResponse* >(object);
  (void)_this;
}
void RemoveSubgroupResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSubgroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveSubgroupResponse& RemoveSubgroupResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveSubgroupResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void RemoveSubgroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.RemoveSubgroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSubgroupResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSubgroupResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.RemoveSubgroupResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.RemoveSubgroupResponse)
  return target;
}

size_t RemoveSubgroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.RemoveSubgroupResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSubgroupResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.RemoveSubgroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSubgroupResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSubgroupResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.RemoveSubgroupResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.RemoveSubgroupResponse)
    MergeFrom(*source);
  }
}

void RemoveSubgroupResponse::MergeFrom(const RemoveSubgroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.RemoveSubgroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemoveSubgroupResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.RemoveSubgroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSubgroupResponse::CopyFrom(const RemoveSubgroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.RemoveSubgroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSubgroupResponse::IsInitialized() const {
  return true;
}

void RemoveSubgroupResponse::InternalSwap(RemoveSubgroupResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSubgroupResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IsPermittedRequest::InitAsDefaultInstance() {
}
class IsPermittedRequest::_Internal {
 public:
};

IsPermittedRequest::IsPermittedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.IsPermittedRequest)
}
IsPermittedRequest::IsPermittedRequest(const IsPermittedRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_action(),
      GetArena());
  }
  ::memcpy(&member_id_, &from.member_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&member_type_) -
    reinterpret_cast<char*>(&member_id_)) + sizeof(member_type_));
  // @@protoc_insertion_point(copy_constructor:mruv.groups.IsPermittedRequest)
}

void IsPermittedRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IsPermittedRequest_groups_2fgroups_2eproto.base);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&member_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_type_) -
      reinterpret_cast<char*>(&member_id_)) + sizeof(member_type_));
}

IsPermittedRequest::~IsPermittedRequest() {
  // @@protoc_insertion_point(destructor:mruv.groups.IsPermittedRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IsPermittedRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IsPermittedRequest::ArenaDtor(void* object) {
  IsPermittedRequest* _this = reinterpret_cast< IsPermittedRequest* >(object);
  (void)_this;
}
void IsPermittedRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IsPermittedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IsPermittedRequest& IsPermittedRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IsPermittedRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void IsPermittedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.IsPermittedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&member_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_type_) -
      reinterpret_cast<char*>(&member_id_)) + sizeof(member_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsPermittedRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 member_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          member_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .mruv.groups.MemberType member_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_member_type(static_cast<::mruv::groups::MemberType>(val));
        } else goto handle_unusual;
        continue;
      // string action = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mruv.groups.IsPermittedRequest.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IsPermittedRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.IsPermittedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 member_id = 1;
  if (this->member_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_member_id(), target);
  }

  // .mruv.groups.MemberType member_type = 2;
  if (this->member_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_member_type(), target);
  }

  // string action = 3;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mruv.groups.IsPermittedRequest.action");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.IsPermittedRequest)
  return target;
}

size_t IsPermittedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.IsPermittedRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string action = 3;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  // uint32 member_id = 1;
  if (this->member_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_member_id());
  }

  // .mruv.groups.MemberType member_type = 2;
  if (this->member_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_member_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IsPermittedRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.IsPermittedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IsPermittedRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IsPermittedRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.IsPermittedRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.IsPermittedRequest)
    MergeFrom(*source);
  }
}

void IsPermittedRequest::MergeFrom(const IsPermittedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.IsPermittedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
  if (from.member_id() != 0) {
    _internal_set_member_id(from._internal_member_id());
  }
  if (from.member_type() != 0) {
    _internal_set_member_type(from._internal_member_type());
  }
}

void IsPermittedRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.IsPermittedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsPermittedRequest::CopyFrom(const IsPermittedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.IsPermittedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsPermittedRequest::IsInitialized() const {
  return true;
}

void IsPermittedRequest::InternalSwap(IsPermittedRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IsPermittedRequest, member_type_)
      + sizeof(IsPermittedRequest::member_type_)
      - PROTOBUF_FIELD_OFFSET(IsPermittedRequest, member_id_)>(
          reinterpret_cast<char*>(&member_id_),
          reinterpret_cast<char*>(&other->member_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IsPermittedRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IsPermittedResponse::InitAsDefaultInstance() {
}
class IsPermittedResponse::_Internal {
 public:
};

IsPermittedResponse::IsPermittedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mruv.groups.IsPermittedResponse)
}
IsPermittedResponse::IsPermittedResponse(const IsPermittedResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  permitted_ = from.permitted_;
  // @@protoc_insertion_point(copy_constructor:mruv.groups.IsPermittedResponse)
}

void IsPermittedResponse::SharedCtor() {
  permitted_ = false;
}

IsPermittedResponse::~IsPermittedResponse() {
  // @@protoc_insertion_point(destructor:mruv.groups.IsPermittedResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IsPermittedResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IsPermittedResponse::ArenaDtor(void* object) {
  IsPermittedResponse* _this = reinterpret_cast< IsPermittedResponse* >(object);
  (void)_this;
}
void IsPermittedResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IsPermittedResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IsPermittedResponse& IsPermittedResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IsPermittedResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void IsPermittedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.groups.IsPermittedResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permitted_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsPermittedResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool permitted = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          permitted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IsPermittedResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.groups.IsPermittedResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool permitted = 1;
  if (this->permitted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_permitted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.groups.IsPermittedResponse)
  return target;
}

size_t IsPermittedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.groups.IsPermittedResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool permitted = 1;
  if (this->permitted() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IsPermittedResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.groups.IsPermittedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IsPermittedResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IsPermittedResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.groups.IsPermittedResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.groups.IsPermittedResponse)
    MergeFrom(*source);
  }
}

void IsPermittedResponse::MergeFrom(const IsPermittedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.groups.IsPermittedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.permitted() != 0) {
    _internal_set_permitted(from._internal_permitted());
  }
}

void IsPermittedResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.groups.IsPermittedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsPermittedResponse::CopyFrom(const IsPermittedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.groups.IsPermittedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsPermittedResponse::IsInitialized() const {
  return true;
}

void IsPermittedResponse::InternalSwap(IsPermittedResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(permitted_, other->permitted_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IsPermittedResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace groups
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mruv::groups::CreateGroupRequest* Arena::CreateMaybeMessage< ::mruv::groups::CreateGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::CreateGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::CreateGroupResponse* Arena::CreateMaybeMessage< ::mruv::groups::CreateGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::CreateGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::GetGroupRequest* Arena::CreateMaybeMessage< ::mruv::groups::GetGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::GetGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::GetGroupResponse* Arena::CreateMaybeMessage< ::mruv::groups::GetGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::GetGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::UpdateGroupRequest* Arena::CreateMaybeMessage< ::mruv::groups::UpdateGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::UpdateGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::UpdateGroupResponse* Arena::CreateMaybeMessage< ::mruv::groups::UpdateGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::UpdateGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::DeleteGroupRequest* Arena::CreateMaybeMessage< ::mruv::groups::DeleteGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::DeleteGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::DeleteGroupResponse* Arena::CreateMaybeMessage< ::mruv::groups::DeleteGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::DeleteGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::GetGroupsRequest* Arena::CreateMaybeMessage< ::mruv::groups::GetGroupsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::GetGroupsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::GetGroupsResponse_Group* Arena::CreateMaybeMessage< ::mruv::groups::GetGroupsResponse_Group >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::GetGroupsResponse_Group >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::GetGroupsResponse* Arena::CreateMaybeMessage< ::mruv::groups::GetGroupsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::GetGroupsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::AssignOwnerRequest* Arena::CreateMaybeMessage< ::mruv::groups::AssignOwnerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::AssignOwnerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::AssignOwnerResponse* Arena::CreateMaybeMessage< ::mruv::groups::AssignOwnerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::AssignOwnerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::GetOwnerRequest* Arena::CreateMaybeMessage< ::mruv::groups::GetOwnerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::GetOwnerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::GetOwnerResponse* Arena::CreateMaybeMessage< ::mruv::groups::GetOwnerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::GetOwnerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::AddMemberRequest* Arena::CreateMaybeMessage< ::mruv::groups::AddMemberRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::AddMemberRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::AddMemberResponse* Arena::CreateMaybeMessage< ::mruv::groups::AddMemberResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::AddMemberResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::GetMembersRequest* Arena::CreateMaybeMessage< ::mruv::groups::GetMembersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::GetMembersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::GetMembersResponse* Arena::CreateMaybeMessage< ::mruv::groups::GetMembersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::GetMembersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::RemoveMemberRequest* Arena::CreateMaybeMessage< ::mruv::groups::RemoveMemberRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::RemoveMemberRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::RemoveMemberResponse* Arena::CreateMaybeMessage< ::mruv::groups::RemoveMemberResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::RemoveMemberResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::AddPermissionRequest* Arena::CreateMaybeMessage< ::mruv::groups::AddPermissionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::AddPermissionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::AddPermissionResponse* Arena::CreateMaybeMessage< ::mruv::groups::AddPermissionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::AddPermissionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::GetPermissionsRequest* Arena::CreateMaybeMessage< ::mruv::groups::GetPermissionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::GetPermissionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::GetPermissionsResponse_Permission* Arena::CreateMaybeMessage< ::mruv::groups::GetPermissionsResponse_Permission >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::GetPermissionsResponse_Permission >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::GetPermissionsResponse* Arena::CreateMaybeMessage< ::mruv::groups::GetPermissionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::GetPermissionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::RemovePermissionRequest* Arena::CreateMaybeMessage< ::mruv::groups::RemovePermissionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::RemovePermissionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::RemovePermissionResponse* Arena::CreateMaybeMessage< ::mruv::groups::RemovePermissionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::RemovePermissionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::AddSubgroupRequest* Arena::CreateMaybeMessage< ::mruv::groups::AddSubgroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::AddSubgroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::AddSubgroupResponse* Arena::CreateMaybeMessage< ::mruv::groups::AddSubgroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::AddSubgroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::GetSubgroupsRequest* Arena::CreateMaybeMessage< ::mruv::groups::GetSubgroupsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::GetSubgroupsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::GetSubgroupsResponse* Arena::CreateMaybeMessage< ::mruv::groups::GetSubgroupsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::GetSubgroupsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::RemoveSubgroupRequest* Arena::CreateMaybeMessage< ::mruv::groups::RemoveSubgroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::RemoveSubgroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::RemoveSubgroupResponse* Arena::CreateMaybeMessage< ::mruv::groups::RemoveSubgroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::RemoveSubgroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::IsPermittedRequest* Arena::CreateMaybeMessage< ::mruv::groups::IsPermittedRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::IsPermittedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::groups::IsPermittedResponse* Arena::CreateMaybeMessage< ::mruv::groups::IsPermittedResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mruv::groups::IsPermittedResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
