// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: groups/groups.proto

#include "groups/groups.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_groups_2fgroups_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Group_groups_2fgroups_5fmodel_2eproto;
namespace mruv {
class GetGroupsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGroupsRequest> _instance;
} _GetGroupsRequest_default_instance_;
class GetGroupsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetGroupsResponse> _instance;
} _GetGroupsResponse_default_instance_;
class AddGroupMemberRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddGroupMemberRequest> _instance;
} _AddGroupMemberRequest_default_instance_;
class AddGroupMemberResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddGroupMemberResponse> _instance;
} _AddGroupMemberResponse_default_instance_;
class RemoveGroupMemberRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveGroupMemberRequest> _instance;
} _RemoveGroupMemberRequest_default_instance_;
class RemoveGroupMemberResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveGroupMemberResponse> _instance;
} _RemoveGroupMemberResponse_default_instance_;
}  // namespace mruv
static void InitDefaultsscc_info_AddGroupMemberRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::_AddGroupMemberRequest_default_instance_;
    new (ptr) ::mruv::AddGroupMemberRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::AddGroupMemberRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddGroupMemberRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_AddGroupMemberRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_AddGroupMemberResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::_AddGroupMemberResponse_default_instance_;
    new (ptr) ::mruv::AddGroupMemberResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::AddGroupMemberResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddGroupMemberResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_AddGroupMemberResponse_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_GetGroupsRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::_GetGroupsRequest_default_instance_;
    new (ptr) ::mruv::GetGroupsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::GetGroupsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetGroupsRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetGroupsRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_GetGroupsResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::_GetGroupsResponse_default_instance_;
    new (ptr) ::mruv::GetGroupsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::GetGroupsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetGroupsResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_GetGroupsResponse_groups_2fgroups_2eproto}, {
      &scc_info_Group_groups_2fgroups_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_RemoveGroupMemberRequest_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::_RemoveGroupMemberRequest_default_instance_;
    new (ptr) ::mruv::RemoveGroupMemberRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::RemoveGroupMemberRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveGroupMemberRequest_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RemoveGroupMemberRequest_groups_2fgroups_2eproto}, {}};

static void InitDefaultsscc_info_RemoveGroupMemberResponse_groups_2fgroups_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::_RemoveGroupMemberResponse_default_instance_;
    new (ptr) ::mruv::RemoveGroupMemberResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::RemoveGroupMemberResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveGroupMemberResponse_groups_2fgroups_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RemoveGroupMemberResponse_groups_2fgroups_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_groups_2fgroups_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_groups_2fgroups_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_groups_2fgroups_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_groups_2fgroups_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::GetGroupsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::GetGroupsRequest, limit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::GetGroupsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::GetGroupsResponse, groups_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::AddGroupMemberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::AddGroupMemberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::RemoveGroupMemberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::RemoveGroupMemberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mruv::GetGroupsRequest)},
  { 6, -1, sizeof(::mruv::GetGroupsResponse)},
  { 12, -1, sizeof(::mruv::AddGroupMemberRequest)},
  { 17, -1, sizeof(::mruv::AddGroupMemberResponse)},
  { 22, -1, sizeof(::mruv::RemoveGroupMemberRequest)},
  { 27, -1, sizeof(::mruv::RemoveGroupMemberResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::_GetGroupsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::_GetGroupsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::_AddGroupMemberRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::_AddGroupMemberResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::_RemoveGroupMemberRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::_RemoveGroupMemberResponse_default_instance_),
};

const char descriptor_table_protodef_groups_2fgroups_2eproto[] =
  "\n\023groups/groups.proto\022\004mruv\032\034google/api/"
  "annotations.proto\032\023common/health.proto\032\031"
  "groups/groups_model.proto\"!\n\020GetGroupsRe"
  "quest\022\r\n\005limit\030\001 \001(\005\"0\n\021GetGroupsRespons"
  "e\022\033\n\006groups\030\001 \003(\0132\013.mruv.Group\"\027\n\025AddGro"
  "upMemberRequest\"\030\n\026AddGroupMemberRespons"
  "e\"\032\n\030RemoveGroupMemberRequest\"\033\n\031RemoveG"
  "roupMemberResponse2\230\005\n\021MruVGroupsService"
  "\022=\n\013CreateGroup\022\013.mruv.Group\032\r.mruv.Grou"
  "pID\"\022\202\323\344\223\002\014\"\n/v1/groups\022\?\n\010GetGroup\022\r.mr"
  "uv.GroupID\032\013.mruv.Group\"\027\202\323\344\223\002\021\022\017/v1/gro"
  "ups/{id}\022D\n\013DeleteGroup\022\r.mruv.GroupID\032\r"
  ".mruv.GroupID\"\027\202\323\344\223\002\021*\017/v1/groups/{id}\022P"
  "\n\tGetGroups\022\026.mruv.GetGroupsRequest\032\027.mr"
  "uv.GetGroupsResponse\"\022\202\323\344\223\002\014\022\n/v1/groups"
  "\022M\n\016AddGroupMember\022\033.mruv.AddGroupMember"
  "Request\032\034.mruv.AddGroupMemberResponse\"\000\022"
  "V\n\021RemoveGroupMember\022\036.mruv.RemoveGroupM"
  "emberRequest\032\037.mruv.RemoveGroupMemberRes"
  "ponse\"\000\022f\n\020GetServiceStatus\022\032.mruv.Servi"
  "ceStatusRequest\032\033.mruv.ServiceStatusResp"
  "onse\"\031\202\323\344\223\002\023\022\021/v1/groups/status\022\\\n\021GetSe"
  "rviceVersion\022\024.mruv.VersionRequest\032\025.mru"
  "v.VersionResponse\"\032\202\323\344\223\002\024\022\022/v1/groups/ve"
  "rsionB&Z$github.com/MruV-RP/mruv-pb-go/g"
  "roupsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_groups_2fgroups_2eproto_deps[3] = {
  &::descriptor_table_common_2fhealth_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_groups_2fgroups_5fmodel_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_groups_2fgroups_2eproto_sccs[6] = {
  &scc_info_AddGroupMemberRequest_groups_2fgroups_2eproto.base,
  &scc_info_AddGroupMemberResponse_groups_2fgroups_2eproto.base,
  &scc_info_GetGroupsRequest_groups_2fgroups_2eproto.base,
  &scc_info_GetGroupsResponse_groups_2fgroups_2eproto.base,
  &scc_info_RemoveGroupMemberRequest_groups_2fgroups_2eproto.base,
  &scc_info_RemoveGroupMemberResponse_groups_2fgroups_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_groups_2fgroups_2eproto_once;
static bool descriptor_table_groups_2fgroups_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_groups_2fgroups_2eproto = {
  &descriptor_table_groups_2fgroups_2eproto_initialized, descriptor_table_protodef_groups_2fgroups_2eproto, "groups/groups.proto", 1013,
  &descriptor_table_groups_2fgroups_2eproto_once, descriptor_table_groups_2fgroups_2eproto_sccs, descriptor_table_groups_2fgroups_2eproto_deps, 6, 3,
  schemas, file_default_instances, TableStruct_groups_2fgroups_2eproto::offsets,
  file_level_metadata_groups_2fgroups_2eproto, 6, file_level_enum_descriptors_groups_2fgroups_2eproto, file_level_service_descriptors_groups_2fgroups_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_groups_2fgroups_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_groups_2fgroups_2eproto), true);
namespace mruv {

// ===================================================================

void GetGroupsRequest::InitAsDefaultInstance() {
}
class GetGroupsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGroupsRequest::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGroupsRequest::GetGroupsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.GetGroupsRequest)
}
GetGroupsRequest::GetGroupsRequest(const GetGroupsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  limit_ = from.limit_;
  // @@protoc_insertion_point(copy_constructor:mruv.GetGroupsRequest)
}

void GetGroupsRequest::SharedCtor() {
  limit_ = 0;
}

GetGroupsRequest::~GetGroupsRequest() {
  // @@protoc_insertion_point(destructor:mruv.GetGroupsRequest)
  SharedDtor();
}

void GetGroupsRequest::SharedDtor() {
}

void GetGroupsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGroupsRequest& GetGroupsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGroupsRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetGroupsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.GetGroupsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  limit_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetGroupsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 limit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetGroupsRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:mruv.GetGroupsRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 limit = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mruv.GetGroupsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mruv.GetGroupsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetGroupsRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mruv.GetGroupsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 limit = 1;
  if (this->limit() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->limit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mruv.GetGroupsRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGroupsRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.GetGroupsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 limit = 1;
  if (this->limit() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->limit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.GetGroupsRequest)
  return target;
}

size_t GetGroupsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.GetGroupsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 limit = 1;
  if (this->limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->limit());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.GetGroupsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGroupsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.GetGroupsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.GetGroupsRequest)
    MergeFrom(*source);
  }
}

void GetGroupsRequest::MergeFrom(const GetGroupsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.GetGroupsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void GetGroupsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.GetGroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupsRequest::CopyFrom(const GetGroupsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.GetGroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupsRequest::IsInitialized() const {
  return true;
}

void GetGroupsRequest::Swap(GetGroupsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGroupsRequest::InternalSwap(GetGroupsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(limit_, other->limit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetGroupsResponse::InitAsDefaultInstance() {
}
class GetGroupsResponse::HasBitSetters {
 public:
};

void GetGroupsResponse::clear_groups() {
  groups_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGroupsResponse::kGroupsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGroupsResponse::GetGroupsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.GetGroupsResponse)
}
GetGroupsResponse::GetGroupsResponse(const GetGroupsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.GetGroupsResponse)
}

void GetGroupsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetGroupsResponse_groups_2fgroups_2eproto.base);
}

GetGroupsResponse::~GetGroupsResponse() {
  // @@protoc_insertion_point(destructor:mruv.GetGroupsResponse)
  SharedDtor();
}

void GetGroupsResponse::SharedDtor() {
}

void GetGroupsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetGroupsResponse& GetGroupsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetGroupsResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void GetGroupsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.GetGroupsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groups_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetGroupsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .mruv.Group groups = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_groups(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetGroupsResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:mruv.GetGroupsResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mruv.Group groups = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_groups()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mruv.GetGroupsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mruv.GetGroupsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetGroupsResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mruv.GetGroupsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mruv.Group groups = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->groups_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->groups(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mruv.GetGroupsResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetGroupsResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.GetGroupsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mruv.Group groups = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->groups_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->groups(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.GetGroupsResponse)
  return target;
}

size_t GetGroupsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.GetGroupsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mruv.Group groups = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->groups_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->groups(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetGroupsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.GetGroupsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetGroupsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.GetGroupsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.GetGroupsResponse)
    MergeFrom(*source);
  }
}

void GetGroupsResponse::MergeFrom(const GetGroupsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.GetGroupsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
}

void GetGroupsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.GetGroupsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupsResponse::CopyFrom(const GetGroupsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.GetGroupsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupsResponse::IsInitialized() const {
  return true;
}

void GetGroupsResponse::Swap(GetGroupsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGroupsResponse::InternalSwap(GetGroupsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&groups_)->InternalSwap(CastToBase(&other->groups_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGroupsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddGroupMemberRequest::InitAsDefaultInstance() {
}
class AddGroupMemberRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddGroupMemberRequest::AddGroupMemberRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.AddGroupMemberRequest)
}
AddGroupMemberRequest::AddGroupMemberRequest(const AddGroupMemberRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.AddGroupMemberRequest)
}

void AddGroupMemberRequest::SharedCtor() {
}

AddGroupMemberRequest::~AddGroupMemberRequest() {
  // @@protoc_insertion_point(destructor:mruv.AddGroupMemberRequest)
  SharedDtor();
}

void AddGroupMemberRequest::SharedDtor() {
}

void AddGroupMemberRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddGroupMemberRequest& AddGroupMemberRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddGroupMemberRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void AddGroupMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.AddGroupMemberRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AddGroupMemberRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AddGroupMemberRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:mruv.AddGroupMemberRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mruv.AddGroupMemberRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mruv.AddGroupMemberRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AddGroupMemberRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mruv.AddGroupMemberRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mruv.AddGroupMemberRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* AddGroupMemberRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.AddGroupMemberRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.AddGroupMemberRequest)
  return target;
}

size_t AddGroupMemberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.AddGroupMemberRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddGroupMemberRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.AddGroupMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGroupMemberRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddGroupMemberRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.AddGroupMemberRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.AddGroupMemberRequest)
    MergeFrom(*source);
  }
}

void AddGroupMemberRequest::MergeFrom(const AddGroupMemberRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.AddGroupMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AddGroupMemberRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.AddGroupMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGroupMemberRequest::CopyFrom(const AddGroupMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.AddGroupMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGroupMemberRequest::IsInitialized() const {
  return true;
}

void AddGroupMemberRequest::Swap(AddGroupMemberRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddGroupMemberRequest::InternalSwap(AddGroupMemberRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddGroupMemberRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddGroupMemberResponse::InitAsDefaultInstance() {
}
class AddGroupMemberResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddGroupMemberResponse::AddGroupMemberResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.AddGroupMemberResponse)
}
AddGroupMemberResponse::AddGroupMemberResponse(const AddGroupMemberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.AddGroupMemberResponse)
}

void AddGroupMemberResponse::SharedCtor() {
}

AddGroupMemberResponse::~AddGroupMemberResponse() {
  // @@protoc_insertion_point(destructor:mruv.AddGroupMemberResponse)
  SharedDtor();
}

void AddGroupMemberResponse::SharedDtor() {
}

void AddGroupMemberResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddGroupMemberResponse& AddGroupMemberResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddGroupMemberResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void AddGroupMemberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.AddGroupMemberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AddGroupMemberResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AddGroupMemberResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:mruv.AddGroupMemberResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mruv.AddGroupMemberResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mruv.AddGroupMemberResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AddGroupMemberResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mruv.AddGroupMemberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mruv.AddGroupMemberResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* AddGroupMemberResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.AddGroupMemberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.AddGroupMemberResponse)
  return target;
}

size_t AddGroupMemberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.AddGroupMemberResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddGroupMemberResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.AddGroupMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGroupMemberResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddGroupMemberResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.AddGroupMemberResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.AddGroupMemberResponse)
    MergeFrom(*source);
  }
}

void AddGroupMemberResponse::MergeFrom(const AddGroupMemberResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.AddGroupMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AddGroupMemberResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.AddGroupMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGroupMemberResponse::CopyFrom(const AddGroupMemberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.AddGroupMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGroupMemberResponse::IsInitialized() const {
  return true;
}

void AddGroupMemberResponse::Swap(AddGroupMemberResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddGroupMemberResponse::InternalSwap(AddGroupMemberResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddGroupMemberResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveGroupMemberRequest::InitAsDefaultInstance() {
}
class RemoveGroupMemberRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveGroupMemberRequest::RemoveGroupMemberRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.RemoveGroupMemberRequest)
}
RemoveGroupMemberRequest::RemoveGroupMemberRequest(const RemoveGroupMemberRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.RemoveGroupMemberRequest)
}

void RemoveGroupMemberRequest::SharedCtor() {
}

RemoveGroupMemberRequest::~RemoveGroupMemberRequest() {
  // @@protoc_insertion_point(destructor:mruv.RemoveGroupMemberRequest)
  SharedDtor();
}

void RemoveGroupMemberRequest::SharedDtor() {
}

void RemoveGroupMemberRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveGroupMemberRequest& RemoveGroupMemberRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveGroupMemberRequest_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void RemoveGroupMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.RemoveGroupMemberRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RemoveGroupMemberRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RemoveGroupMemberRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:mruv.RemoveGroupMemberRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mruv.RemoveGroupMemberRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mruv.RemoveGroupMemberRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RemoveGroupMemberRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mruv.RemoveGroupMemberRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mruv.RemoveGroupMemberRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveGroupMemberRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.RemoveGroupMemberRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.RemoveGroupMemberRequest)
  return target;
}

size_t RemoveGroupMemberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.RemoveGroupMemberRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveGroupMemberRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.RemoveGroupMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveGroupMemberRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveGroupMemberRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.RemoveGroupMemberRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.RemoveGroupMemberRequest)
    MergeFrom(*source);
  }
}

void RemoveGroupMemberRequest::MergeFrom(const RemoveGroupMemberRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.RemoveGroupMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemoveGroupMemberRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.RemoveGroupMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGroupMemberRequest::CopyFrom(const RemoveGroupMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.RemoveGroupMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGroupMemberRequest::IsInitialized() const {
  return true;
}

void RemoveGroupMemberRequest::Swap(RemoveGroupMemberRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveGroupMemberRequest::InternalSwap(RemoveGroupMemberRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveGroupMemberRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveGroupMemberResponse::InitAsDefaultInstance() {
}
class RemoveGroupMemberResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveGroupMemberResponse::RemoveGroupMemberResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.RemoveGroupMemberResponse)
}
RemoveGroupMemberResponse::RemoveGroupMemberResponse(const RemoveGroupMemberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.RemoveGroupMemberResponse)
}

void RemoveGroupMemberResponse::SharedCtor() {
}

RemoveGroupMemberResponse::~RemoveGroupMemberResponse() {
  // @@protoc_insertion_point(destructor:mruv.RemoveGroupMemberResponse)
  SharedDtor();
}

void RemoveGroupMemberResponse::SharedDtor() {
}

void RemoveGroupMemberResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveGroupMemberResponse& RemoveGroupMemberResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveGroupMemberResponse_groups_2fgroups_2eproto.base);
  return *internal_default_instance();
}


void RemoveGroupMemberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.RemoveGroupMemberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RemoveGroupMemberResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RemoveGroupMemberResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:mruv.RemoveGroupMemberResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mruv.RemoveGroupMemberResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mruv.RemoveGroupMemberResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RemoveGroupMemberResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mruv.RemoveGroupMemberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mruv.RemoveGroupMemberResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveGroupMemberResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.RemoveGroupMemberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.RemoveGroupMemberResponse)
  return target;
}

size_t RemoveGroupMemberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.RemoveGroupMemberResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveGroupMemberResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.RemoveGroupMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveGroupMemberResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveGroupMemberResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.RemoveGroupMemberResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.RemoveGroupMemberResponse)
    MergeFrom(*source);
  }
}

void RemoveGroupMemberResponse::MergeFrom(const RemoveGroupMemberResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.RemoveGroupMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemoveGroupMemberResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.RemoveGroupMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveGroupMemberResponse::CopyFrom(const RemoveGroupMemberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.RemoveGroupMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveGroupMemberResponse::IsInitialized() const {
  return true;
}

void RemoveGroupMemberResponse::Swap(RemoveGroupMemberResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveGroupMemberResponse::InternalSwap(RemoveGroupMemberResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveGroupMemberResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mruv::GetGroupsRequest* Arena::CreateMaybeMessage< ::mruv::GetGroupsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::GetGroupsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::GetGroupsResponse* Arena::CreateMaybeMessage< ::mruv::GetGroupsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::GetGroupsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::AddGroupMemberRequest* Arena::CreateMaybeMessage< ::mruv::AddGroupMemberRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::AddGroupMemberRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::AddGroupMemberResponse* Arena::CreateMaybeMessage< ::mruv::AddGroupMemberResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::AddGroupMemberResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::RemoveGroupMemberRequest* Arena::CreateMaybeMessage< ::mruv::RemoveGroupMemberRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::RemoveGroupMemberRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::RemoveGroupMemberResponse* Arena::CreateMaybeMessage< ::mruv::RemoveGroupMemberResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::RemoveGroupMemberResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
