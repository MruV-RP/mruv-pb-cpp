// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: organizations/organizations.proto

#include "organizations/organizations.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace mruv {
namespace organizations {
class CreateOrganizationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateOrganizationRequest> _instance;
} _CreateOrganizationRequest_default_instance_;
class CreateOrganizationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateOrganizationResponse> _instance;
} _CreateOrganizationResponse_default_instance_;
class GetOrganizationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOrganizationRequest> _instance;
} _GetOrganizationRequest_default_instance_;
class GetOrganizationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetOrganizationResponse> _instance;
} _GetOrganizationResponse_default_instance_;
class UpdateOrganizationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateOrganizationRequest> _instance;
} _UpdateOrganizationRequest_default_instance_;
class UpdateOrganizationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateOrganizationResponse> _instance;
} _UpdateOrganizationResponse_default_instance_;
class DeleteOrganizationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteOrganizationRequest> _instance;
} _DeleteOrganizationRequest_default_instance_;
class DeleteOrganizationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteOrganizationResponse> _instance;
} _DeleteOrganizationResponse_default_instance_;
class AssignLeaderRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AssignLeaderRequest> _instance;
} _AssignLeaderRequest_default_instance_;
class AssignLeaderResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AssignLeaderResponse> _instance;
} _AssignLeaderResponse_default_instance_;
class UnassignLeaderRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnassignLeaderRequest> _instance;
} _UnassignLeaderRequest_default_instance_;
class UnassignLeaderResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnassignLeaderResponse> _instance;
} _UnassignLeaderResponse_default_instance_;
}  // namespace organizations
}  // namespace mruv
static void InitDefaultsscc_info_AssignLeaderRequest_organizations_2forganizations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::organizations::_AssignLeaderRequest_default_instance_;
    new (ptr) ::mruv::organizations::AssignLeaderRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::organizations::AssignLeaderRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AssignLeaderRequest_organizations_2forganizations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AssignLeaderRequest_organizations_2forganizations_2eproto}, {}};

static void InitDefaultsscc_info_AssignLeaderResponse_organizations_2forganizations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::organizations::_AssignLeaderResponse_default_instance_;
    new (ptr) ::mruv::organizations::AssignLeaderResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::organizations::AssignLeaderResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AssignLeaderResponse_organizations_2forganizations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AssignLeaderResponse_organizations_2forganizations_2eproto}, {}};

static void InitDefaultsscc_info_CreateOrganizationRequest_organizations_2forganizations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::organizations::_CreateOrganizationRequest_default_instance_;
    new (ptr) ::mruv::organizations::CreateOrganizationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::organizations::CreateOrganizationRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateOrganizationRequest_organizations_2forganizations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateOrganizationRequest_organizations_2forganizations_2eproto}, {}};

static void InitDefaultsscc_info_CreateOrganizationResponse_organizations_2forganizations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::organizations::_CreateOrganizationResponse_default_instance_;
    new (ptr) ::mruv::organizations::CreateOrganizationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::organizations::CreateOrganizationResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateOrganizationResponse_organizations_2forganizations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateOrganizationResponse_organizations_2forganizations_2eproto}, {}};

static void InitDefaultsscc_info_DeleteOrganizationRequest_organizations_2forganizations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::organizations::_DeleteOrganizationRequest_default_instance_;
    new (ptr) ::mruv::organizations::DeleteOrganizationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::organizations::DeleteOrganizationRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteOrganizationRequest_organizations_2forganizations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteOrganizationRequest_organizations_2forganizations_2eproto}, {}};

static void InitDefaultsscc_info_DeleteOrganizationResponse_organizations_2forganizations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::organizations::_DeleteOrganizationResponse_default_instance_;
    new (ptr) ::mruv::organizations::DeleteOrganizationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::organizations::DeleteOrganizationResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteOrganizationResponse_organizations_2forganizations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteOrganizationResponse_organizations_2forganizations_2eproto}, {}};

static void InitDefaultsscc_info_GetOrganizationRequest_organizations_2forganizations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::organizations::_GetOrganizationRequest_default_instance_;
    new (ptr) ::mruv::organizations::GetOrganizationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::organizations::GetOrganizationRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetOrganizationRequest_organizations_2forganizations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetOrganizationRequest_organizations_2forganizations_2eproto}, {}};

static void InitDefaultsscc_info_GetOrganizationResponse_organizations_2forganizations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::organizations::_GetOrganizationResponse_default_instance_;
    new (ptr) ::mruv::organizations::GetOrganizationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::organizations::GetOrganizationResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetOrganizationResponse_organizations_2forganizations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetOrganizationResponse_organizations_2forganizations_2eproto}, {}};

static void InitDefaultsscc_info_UnassignLeaderRequest_organizations_2forganizations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::organizations::_UnassignLeaderRequest_default_instance_;
    new (ptr) ::mruv::organizations::UnassignLeaderRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::organizations::UnassignLeaderRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnassignLeaderRequest_organizations_2forganizations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnassignLeaderRequest_organizations_2forganizations_2eproto}, {}};

static void InitDefaultsscc_info_UnassignLeaderResponse_organizations_2forganizations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::organizations::_UnassignLeaderResponse_default_instance_;
    new (ptr) ::mruv::organizations::UnassignLeaderResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::organizations::UnassignLeaderResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnassignLeaderResponse_organizations_2forganizations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnassignLeaderResponse_organizations_2forganizations_2eproto}, {}};

static void InitDefaultsscc_info_UpdateOrganizationRequest_organizations_2forganizations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::organizations::_UpdateOrganizationRequest_default_instance_;
    new (ptr) ::mruv::organizations::UpdateOrganizationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::organizations::UpdateOrganizationRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateOrganizationRequest_organizations_2forganizations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateOrganizationRequest_organizations_2forganizations_2eproto}, {}};

static void InitDefaultsscc_info_UpdateOrganizationResponse_organizations_2forganizations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mruv::organizations::_UpdateOrganizationResponse_default_instance_;
    new (ptr) ::mruv::organizations::UpdateOrganizationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mruv::organizations::UpdateOrganizationResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateOrganizationResponse_organizations_2forganizations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpdateOrganizationResponse_organizations_2forganizations_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_organizations_2forganizations_2eproto[12];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_organizations_2forganizations_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_organizations_2forganizations_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_organizations_2forganizations_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::CreateOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::CreateOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::GetOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::GetOrganizationRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::GetOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::UpdateOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::UpdateOrganizationRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::UpdateOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::DeleteOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::DeleteOrganizationRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::DeleteOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::AssignLeaderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::AssignLeaderRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::AssignLeaderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::UnassignLeaderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::UnassignLeaderRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mruv::organizations::UnassignLeaderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mruv::organizations::CreateOrganizationRequest)},
  { 5, -1, sizeof(::mruv::organizations::CreateOrganizationResponse)},
  { 10, -1, sizeof(::mruv::organizations::GetOrganizationRequest)},
  { 16, -1, sizeof(::mruv::organizations::GetOrganizationResponse)},
  { 21, -1, sizeof(::mruv::organizations::UpdateOrganizationRequest)},
  { 27, -1, sizeof(::mruv::organizations::UpdateOrganizationResponse)},
  { 32, -1, sizeof(::mruv::organizations::DeleteOrganizationRequest)},
  { 38, -1, sizeof(::mruv::organizations::DeleteOrganizationResponse)},
  { 43, -1, sizeof(::mruv::organizations::AssignLeaderRequest)},
  { 49, -1, sizeof(::mruv::organizations::AssignLeaderResponse)},
  { 54, -1, sizeof(::mruv::organizations::UnassignLeaderRequest)},
  { 60, -1, sizeof(::mruv::organizations::UnassignLeaderResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::organizations::_CreateOrganizationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::organizations::_CreateOrganizationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::organizations::_GetOrganizationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::organizations::_GetOrganizationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::organizations::_UpdateOrganizationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::organizations::_UpdateOrganizationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::organizations::_DeleteOrganizationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::organizations::_DeleteOrganizationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::organizations::_AssignLeaderRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::organizations::_AssignLeaderResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::organizations::_UnassignLeaderRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mruv::organizations::_UnassignLeaderResponse_default_instance_),
};

const char descriptor_table_protodef_organizations_2forganizations_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!organizations/organizations.proto\022\022mru"
  "v.organizations\032\034google/api/annotations."
  "proto\"\033\n\031CreateOrganizationRequest\"\034\n\032Cr"
  "eateOrganizationResponse\"$\n\026GetOrganizat"
  "ionRequest\022\n\n\002id\030\001 \001(\r\"\031\n\027GetOrganizatio"
  "nResponse\"\'\n\031UpdateOrganizationRequest\022\n"
  "\n\002id\030\001 \001(\r\"\034\n\032UpdateOrganizationResponse"
  "\"\'\n\031DeleteOrganizationRequest\022\n\n\002id\030\001 \001("
  "\r\"\034\n\032DeleteOrganizationResponse\"!\n\023Assig"
  "nLeaderRequest\022\n\n\002id\030\001 \001(\r\"\026\n\024AssignLead"
  "erResponse\"#\n\025UnassignLeaderRequest\022\n\n\002i"
  "d\030\001 \001(\r\"\030\n\026UnassignLeaderResponse2\200\007\n\030Mr"
  "uVOrganizationsService\022\216\001\n\022CreateOrganiz"
  "ation\022-.mruv.organizations.CreateOrganiz"
  "ationRequest\032..mruv.organizations.Create"
  "OrganizationResponse\"\031\202\323\344\223\002\023\"\021/v1/organi"
  "zations\022\212\001\n\017GetOrganization\022*.mruv.organ"
  "izations.GetOrganizationRequest\032+.mruv.o"
  "rganizations.GetOrganizationResponse\"\036\202\323"
  "\344\223\002\030\022\026/v1/organizations/{id}\022\223\001\n\022UpdateO"
  "rganization\022-.mruv.organizations.UpdateO"
  "rganizationRequest\032..mruv.organizations."
  "UpdateOrganizationResponse\"\036\202\323\344\223\002\0302\026/v1/"
  "organizations/{id}\022\223\001\n\022DeleteOrganizatio"
  "n\022-.mruv.organizations.DeleteOrganizatio"
  "nRequest\032..mruv.organizations.DeleteOrga"
  "nizationResponse\"\036\202\323\344\223\002\030*\026/v1/organizati"
  "ons/{id}\022\210\001\n\014AssignLeader\022\'.mruv.organiz"
  "ations.AssignLeaderRequest\032(.mruv.organi"
  "zations.AssignLeaderResponse\"%\202\323\344\223\002\037\032\035/v"
  "1/organizations/{id}/leader\022\216\001\n\016Unassign"
  "Leader\022).mruv.organizations.UnassignLead"
  "erRequest\032*.mruv.organizations.UnassignL"
  "eaderResponse\"%\202\323\344\223\002\037*\035/v1/organizations"
  "/{id}/leaderB-Z+github.com/MruV-RP/mruv-"
  "pb-go/organizationsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_organizations_2forganizations_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_organizations_2forganizations_2eproto_sccs[12] = {
  &scc_info_AssignLeaderRequest_organizations_2forganizations_2eproto.base,
  &scc_info_AssignLeaderResponse_organizations_2forganizations_2eproto.base,
  &scc_info_CreateOrganizationRequest_organizations_2forganizations_2eproto.base,
  &scc_info_CreateOrganizationResponse_organizations_2forganizations_2eproto.base,
  &scc_info_DeleteOrganizationRequest_organizations_2forganizations_2eproto.base,
  &scc_info_DeleteOrganizationResponse_organizations_2forganizations_2eproto.base,
  &scc_info_GetOrganizationRequest_organizations_2forganizations_2eproto.base,
  &scc_info_GetOrganizationResponse_organizations_2forganizations_2eproto.base,
  &scc_info_UnassignLeaderRequest_organizations_2forganizations_2eproto.base,
  &scc_info_UnassignLeaderResponse_organizations_2forganizations_2eproto.base,
  &scc_info_UpdateOrganizationRequest_organizations_2forganizations_2eproto.base,
  &scc_info_UpdateOrganizationResponse_organizations_2forganizations_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_organizations_2forganizations_2eproto_once;
static bool descriptor_table_organizations_2forganizations_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_organizations_2forganizations_2eproto = {
  &descriptor_table_organizations_2forganizations_2eproto_initialized, descriptor_table_protodef_organizations_2forganizations_2eproto, "organizations/organizations.proto", 1427,
  &descriptor_table_organizations_2forganizations_2eproto_once, descriptor_table_organizations_2forganizations_2eproto_sccs, descriptor_table_organizations_2forganizations_2eproto_deps, 12, 1,
  schemas, file_default_instances, TableStruct_organizations_2forganizations_2eproto::offsets,
  file_level_metadata_organizations_2forganizations_2eproto, 12, file_level_enum_descriptors_organizations_2forganizations_2eproto, file_level_service_descriptors_organizations_2forganizations_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_organizations_2forganizations_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_organizations_2forganizations_2eproto), true);
namespace mruv {
namespace organizations {

// ===================================================================

void CreateOrganizationRequest::InitAsDefaultInstance() {
}
class CreateOrganizationRequest::_Internal {
 public:
};

CreateOrganizationRequest::CreateOrganizationRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.organizations.CreateOrganizationRequest)
}
CreateOrganizationRequest::CreateOrganizationRequest(const CreateOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.organizations.CreateOrganizationRequest)
}

void CreateOrganizationRequest::SharedCtor() {
}

CreateOrganizationRequest::~CreateOrganizationRequest() {
  // @@protoc_insertion_point(destructor:mruv.organizations.CreateOrganizationRequest)
  SharedDtor();
}

void CreateOrganizationRequest::SharedDtor() {
}

void CreateOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateOrganizationRequest& CreateOrganizationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateOrganizationRequest_organizations_2forganizations_2eproto.base);
  return *internal_default_instance();
}


void CreateOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.organizations.CreateOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* CreateOrganizationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateOrganizationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.organizations.CreateOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.organizations.CreateOrganizationRequest)
  return target;
}

size_t CreateOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.organizations.CreateOrganizationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateOrganizationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.organizations.CreateOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOrganizationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateOrganizationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.organizations.CreateOrganizationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.organizations.CreateOrganizationRequest)
    MergeFrom(*source);
  }
}

void CreateOrganizationRequest::MergeFrom(const CreateOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.organizations.CreateOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateOrganizationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.organizations.CreateOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOrganizationRequest::CopyFrom(const CreateOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.organizations.CreateOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationRequest::IsInitialized() const {
  return true;
}

void CreateOrganizationRequest::InternalSwap(CreateOrganizationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateOrganizationResponse::InitAsDefaultInstance() {
}
class CreateOrganizationResponse::_Internal {
 public:
};

CreateOrganizationResponse::CreateOrganizationResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.organizations.CreateOrganizationResponse)
}
CreateOrganizationResponse::CreateOrganizationResponse(const CreateOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.organizations.CreateOrganizationResponse)
}

void CreateOrganizationResponse::SharedCtor() {
}

CreateOrganizationResponse::~CreateOrganizationResponse() {
  // @@protoc_insertion_point(destructor:mruv.organizations.CreateOrganizationResponse)
  SharedDtor();
}

void CreateOrganizationResponse::SharedDtor() {
}

void CreateOrganizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateOrganizationResponse& CreateOrganizationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateOrganizationResponse_organizations_2forganizations_2eproto.base);
  return *internal_default_instance();
}


void CreateOrganizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.organizations.CreateOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* CreateOrganizationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateOrganizationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.organizations.CreateOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.organizations.CreateOrganizationResponse)
  return target;
}

size_t CreateOrganizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.organizations.CreateOrganizationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateOrganizationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.organizations.CreateOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOrganizationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateOrganizationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.organizations.CreateOrganizationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.organizations.CreateOrganizationResponse)
    MergeFrom(*source);
  }
}

void CreateOrganizationResponse::MergeFrom(const CreateOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.organizations.CreateOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateOrganizationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.organizations.CreateOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOrganizationResponse::CopyFrom(const CreateOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.organizations.CreateOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationResponse::IsInitialized() const {
  return true;
}

void CreateOrganizationResponse::InternalSwap(CreateOrganizationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOrganizationRequest::InitAsDefaultInstance() {
}
class GetOrganizationRequest::_Internal {
 public:
};

GetOrganizationRequest::GetOrganizationRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.organizations.GetOrganizationRequest)
}
GetOrganizationRequest::GetOrganizationRequest(const GetOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.organizations.GetOrganizationRequest)
}

void GetOrganizationRequest::SharedCtor() {
  id_ = 0u;
}

GetOrganizationRequest::~GetOrganizationRequest() {
  // @@protoc_insertion_point(destructor:mruv.organizations.GetOrganizationRequest)
  SharedDtor();
}

void GetOrganizationRequest::SharedDtor() {
}

void GetOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOrganizationRequest& GetOrganizationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOrganizationRequest_organizations_2forganizations_2eproto.base);
  return *internal_default_instance();
}


void GetOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.organizations.GetOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* GetOrganizationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOrganizationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.organizations.GetOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.organizations.GetOrganizationRequest)
  return target;
}

size_t GetOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.organizations.GetOrganizationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOrganizationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.organizations.GetOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrganizationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOrganizationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.organizations.GetOrganizationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.organizations.GetOrganizationRequest)
    MergeFrom(*source);
  }
}

void GetOrganizationRequest::MergeFrom(const GetOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.organizations.GetOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetOrganizationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.organizations.GetOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrganizationRequest::CopyFrom(const GetOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.organizations.GetOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationRequest::IsInitialized() const {
  return true;
}

void GetOrganizationRequest::InternalSwap(GetOrganizationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetOrganizationResponse::InitAsDefaultInstance() {
}
class GetOrganizationResponse::_Internal {
 public:
};

GetOrganizationResponse::GetOrganizationResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.organizations.GetOrganizationResponse)
}
GetOrganizationResponse::GetOrganizationResponse(const GetOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.organizations.GetOrganizationResponse)
}

void GetOrganizationResponse::SharedCtor() {
}

GetOrganizationResponse::~GetOrganizationResponse() {
  // @@protoc_insertion_point(destructor:mruv.organizations.GetOrganizationResponse)
  SharedDtor();
}

void GetOrganizationResponse::SharedDtor() {
}

void GetOrganizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetOrganizationResponse& GetOrganizationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetOrganizationResponse_organizations_2forganizations_2eproto.base);
  return *internal_default_instance();
}


void GetOrganizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.organizations.GetOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* GetOrganizationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetOrganizationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.organizations.GetOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.organizations.GetOrganizationResponse)
  return target;
}

size_t GetOrganizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.organizations.GetOrganizationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetOrganizationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.organizations.GetOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrganizationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetOrganizationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.organizations.GetOrganizationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.organizations.GetOrganizationResponse)
    MergeFrom(*source);
  }
}

void GetOrganizationResponse::MergeFrom(const GetOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.organizations.GetOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetOrganizationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.organizations.GetOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrganizationResponse::CopyFrom(const GetOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.organizations.GetOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationResponse::IsInitialized() const {
  return true;
}

void GetOrganizationResponse::InternalSwap(GetOrganizationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateOrganizationRequest::InitAsDefaultInstance() {
}
class UpdateOrganizationRequest::_Internal {
 public:
};

UpdateOrganizationRequest::UpdateOrganizationRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.organizations.UpdateOrganizationRequest)
}
UpdateOrganizationRequest::UpdateOrganizationRequest(const UpdateOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.organizations.UpdateOrganizationRequest)
}

void UpdateOrganizationRequest::SharedCtor() {
  id_ = 0u;
}

UpdateOrganizationRequest::~UpdateOrganizationRequest() {
  // @@protoc_insertion_point(destructor:mruv.organizations.UpdateOrganizationRequest)
  SharedDtor();
}

void UpdateOrganizationRequest::SharedDtor() {
}

void UpdateOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateOrganizationRequest& UpdateOrganizationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateOrganizationRequest_organizations_2forganizations_2eproto.base);
  return *internal_default_instance();
}


void UpdateOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.organizations.UpdateOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* UpdateOrganizationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateOrganizationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.organizations.UpdateOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.organizations.UpdateOrganizationRequest)
  return target;
}

size_t UpdateOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.organizations.UpdateOrganizationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateOrganizationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.organizations.UpdateOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateOrganizationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateOrganizationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.organizations.UpdateOrganizationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.organizations.UpdateOrganizationRequest)
    MergeFrom(*source);
  }
}

void UpdateOrganizationRequest::MergeFrom(const UpdateOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.organizations.UpdateOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void UpdateOrganizationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.organizations.UpdateOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateOrganizationRequest::CopyFrom(const UpdateOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.organizations.UpdateOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrganizationRequest::IsInitialized() const {
  return true;
}

void UpdateOrganizationRequest::InternalSwap(UpdateOrganizationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrganizationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateOrganizationResponse::InitAsDefaultInstance() {
}
class UpdateOrganizationResponse::_Internal {
 public:
};

UpdateOrganizationResponse::UpdateOrganizationResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.organizations.UpdateOrganizationResponse)
}
UpdateOrganizationResponse::UpdateOrganizationResponse(const UpdateOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.organizations.UpdateOrganizationResponse)
}

void UpdateOrganizationResponse::SharedCtor() {
}

UpdateOrganizationResponse::~UpdateOrganizationResponse() {
  // @@protoc_insertion_point(destructor:mruv.organizations.UpdateOrganizationResponse)
  SharedDtor();
}

void UpdateOrganizationResponse::SharedDtor() {
}

void UpdateOrganizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateOrganizationResponse& UpdateOrganizationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateOrganizationResponse_organizations_2forganizations_2eproto.base);
  return *internal_default_instance();
}


void UpdateOrganizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.organizations.UpdateOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* UpdateOrganizationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateOrganizationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.organizations.UpdateOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.organizations.UpdateOrganizationResponse)
  return target;
}

size_t UpdateOrganizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.organizations.UpdateOrganizationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateOrganizationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.organizations.UpdateOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateOrganizationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateOrganizationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.organizations.UpdateOrganizationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.organizations.UpdateOrganizationResponse)
    MergeFrom(*source);
  }
}

void UpdateOrganizationResponse::MergeFrom(const UpdateOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.organizations.UpdateOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateOrganizationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.organizations.UpdateOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateOrganizationResponse::CopyFrom(const UpdateOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.organizations.UpdateOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrganizationResponse::IsInitialized() const {
  return true;
}

void UpdateOrganizationResponse::InternalSwap(UpdateOrganizationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrganizationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteOrganizationRequest::InitAsDefaultInstance() {
}
class DeleteOrganizationRequest::_Internal {
 public:
};

DeleteOrganizationRequest::DeleteOrganizationRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.organizations.DeleteOrganizationRequest)
}
DeleteOrganizationRequest::DeleteOrganizationRequest(const DeleteOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.organizations.DeleteOrganizationRequest)
}

void DeleteOrganizationRequest::SharedCtor() {
  id_ = 0u;
}

DeleteOrganizationRequest::~DeleteOrganizationRequest() {
  // @@protoc_insertion_point(destructor:mruv.organizations.DeleteOrganizationRequest)
  SharedDtor();
}

void DeleteOrganizationRequest::SharedDtor() {
}

void DeleteOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteOrganizationRequest& DeleteOrganizationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteOrganizationRequest_organizations_2forganizations_2eproto.base);
  return *internal_default_instance();
}


void DeleteOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.organizations.DeleteOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* DeleteOrganizationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteOrganizationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.organizations.DeleteOrganizationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.organizations.DeleteOrganizationRequest)
  return target;
}

size_t DeleteOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.organizations.DeleteOrganizationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteOrganizationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.organizations.DeleteOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteOrganizationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteOrganizationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.organizations.DeleteOrganizationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.organizations.DeleteOrganizationRequest)
    MergeFrom(*source);
  }
}

void DeleteOrganizationRequest::MergeFrom(const DeleteOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.organizations.DeleteOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteOrganizationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.organizations.DeleteOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOrganizationRequest::CopyFrom(const DeleteOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.organizations.DeleteOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrganizationRequest::IsInitialized() const {
  return true;
}

void DeleteOrganizationRequest::InternalSwap(DeleteOrganizationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteOrganizationResponse::InitAsDefaultInstance() {
}
class DeleteOrganizationResponse::_Internal {
 public:
};

DeleteOrganizationResponse::DeleteOrganizationResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.organizations.DeleteOrganizationResponse)
}
DeleteOrganizationResponse::DeleteOrganizationResponse(const DeleteOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.organizations.DeleteOrganizationResponse)
}

void DeleteOrganizationResponse::SharedCtor() {
}

DeleteOrganizationResponse::~DeleteOrganizationResponse() {
  // @@protoc_insertion_point(destructor:mruv.organizations.DeleteOrganizationResponse)
  SharedDtor();
}

void DeleteOrganizationResponse::SharedDtor() {
}

void DeleteOrganizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteOrganizationResponse& DeleteOrganizationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteOrganizationResponse_organizations_2forganizations_2eproto.base);
  return *internal_default_instance();
}


void DeleteOrganizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.organizations.DeleteOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* DeleteOrganizationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteOrganizationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.organizations.DeleteOrganizationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.organizations.DeleteOrganizationResponse)
  return target;
}

size_t DeleteOrganizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.organizations.DeleteOrganizationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteOrganizationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.organizations.DeleteOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteOrganizationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteOrganizationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.organizations.DeleteOrganizationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.organizations.DeleteOrganizationResponse)
    MergeFrom(*source);
  }
}

void DeleteOrganizationResponse::MergeFrom(const DeleteOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.organizations.DeleteOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteOrganizationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.organizations.DeleteOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOrganizationResponse::CopyFrom(const DeleteOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.organizations.DeleteOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrganizationResponse::IsInitialized() const {
  return true;
}

void DeleteOrganizationResponse::InternalSwap(DeleteOrganizationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AssignLeaderRequest::InitAsDefaultInstance() {
}
class AssignLeaderRequest::_Internal {
 public:
};

AssignLeaderRequest::AssignLeaderRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.organizations.AssignLeaderRequest)
}
AssignLeaderRequest::AssignLeaderRequest(const AssignLeaderRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.organizations.AssignLeaderRequest)
}

void AssignLeaderRequest::SharedCtor() {
  id_ = 0u;
}

AssignLeaderRequest::~AssignLeaderRequest() {
  // @@protoc_insertion_point(destructor:mruv.organizations.AssignLeaderRequest)
  SharedDtor();
}

void AssignLeaderRequest::SharedDtor() {
}

void AssignLeaderRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AssignLeaderRequest& AssignLeaderRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AssignLeaderRequest_organizations_2forganizations_2eproto.base);
  return *internal_default_instance();
}


void AssignLeaderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.organizations.AssignLeaderRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* AssignLeaderRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AssignLeaderRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.organizations.AssignLeaderRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.organizations.AssignLeaderRequest)
  return target;
}

size_t AssignLeaderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.organizations.AssignLeaderRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssignLeaderRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.organizations.AssignLeaderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AssignLeaderRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AssignLeaderRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.organizations.AssignLeaderRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.organizations.AssignLeaderRequest)
    MergeFrom(*source);
  }
}

void AssignLeaderRequest::MergeFrom(const AssignLeaderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.organizations.AssignLeaderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void AssignLeaderRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.organizations.AssignLeaderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssignLeaderRequest::CopyFrom(const AssignLeaderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.organizations.AssignLeaderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssignLeaderRequest::IsInitialized() const {
  return true;
}

void AssignLeaderRequest::InternalSwap(AssignLeaderRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AssignLeaderRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AssignLeaderResponse::InitAsDefaultInstance() {
}
class AssignLeaderResponse::_Internal {
 public:
};

AssignLeaderResponse::AssignLeaderResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.organizations.AssignLeaderResponse)
}
AssignLeaderResponse::AssignLeaderResponse(const AssignLeaderResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.organizations.AssignLeaderResponse)
}

void AssignLeaderResponse::SharedCtor() {
}

AssignLeaderResponse::~AssignLeaderResponse() {
  // @@protoc_insertion_point(destructor:mruv.organizations.AssignLeaderResponse)
  SharedDtor();
}

void AssignLeaderResponse::SharedDtor() {
}

void AssignLeaderResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AssignLeaderResponse& AssignLeaderResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AssignLeaderResponse_organizations_2forganizations_2eproto.base);
  return *internal_default_instance();
}


void AssignLeaderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.organizations.AssignLeaderResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* AssignLeaderResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AssignLeaderResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.organizations.AssignLeaderResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.organizations.AssignLeaderResponse)
  return target;
}

size_t AssignLeaderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.organizations.AssignLeaderResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssignLeaderResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.organizations.AssignLeaderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AssignLeaderResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AssignLeaderResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.organizations.AssignLeaderResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.organizations.AssignLeaderResponse)
    MergeFrom(*source);
  }
}

void AssignLeaderResponse::MergeFrom(const AssignLeaderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.organizations.AssignLeaderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AssignLeaderResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.organizations.AssignLeaderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssignLeaderResponse::CopyFrom(const AssignLeaderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.organizations.AssignLeaderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssignLeaderResponse::IsInitialized() const {
  return true;
}

void AssignLeaderResponse::InternalSwap(AssignLeaderResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AssignLeaderResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnassignLeaderRequest::InitAsDefaultInstance() {
}
class UnassignLeaderRequest::_Internal {
 public:
};

UnassignLeaderRequest::UnassignLeaderRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.organizations.UnassignLeaderRequest)
}
UnassignLeaderRequest::UnassignLeaderRequest(const UnassignLeaderRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mruv.organizations.UnassignLeaderRequest)
}

void UnassignLeaderRequest::SharedCtor() {
  id_ = 0u;
}

UnassignLeaderRequest::~UnassignLeaderRequest() {
  // @@protoc_insertion_point(destructor:mruv.organizations.UnassignLeaderRequest)
  SharedDtor();
}

void UnassignLeaderRequest::SharedDtor() {
}

void UnassignLeaderRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnassignLeaderRequest& UnassignLeaderRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnassignLeaderRequest_organizations_2forganizations_2eproto.base);
  return *internal_default_instance();
}


void UnassignLeaderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.organizations.UnassignLeaderRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

const char* UnassignLeaderRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnassignLeaderRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.organizations.UnassignLeaderRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.organizations.UnassignLeaderRequest)
  return target;
}

size_t UnassignLeaderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.organizations.UnassignLeaderRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnassignLeaderRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.organizations.UnassignLeaderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnassignLeaderRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnassignLeaderRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.organizations.UnassignLeaderRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.organizations.UnassignLeaderRequest)
    MergeFrom(*source);
  }
}

void UnassignLeaderRequest::MergeFrom(const UnassignLeaderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.organizations.UnassignLeaderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void UnassignLeaderRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.organizations.UnassignLeaderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnassignLeaderRequest::CopyFrom(const UnassignLeaderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.organizations.UnassignLeaderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnassignLeaderRequest::IsInitialized() const {
  return true;
}

void UnassignLeaderRequest::InternalSwap(UnassignLeaderRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnassignLeaderRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnassignLeaderResponse::InitAsDefaultInstance() {
}
class UnassignLeaderResponse::_Internal {
 public:
};

UnassignLeaderResponse::UnassignLeaderResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mruv.organizations.UnassignLeaderResponse)
}
UnassignLeaderResponse::UnassignLeaderResponse(const UnassignLeaderResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mruv.organizations.UnassignLeaderResponse)
}

void UnassignLeaderResponse::SharedCtor() {
}

UnassignLeaderResponse::~UnassignLeaderResponse() {
  // @@protoc_insertion_point(destructor:mruv.organizations.UnassignLeaderResponse)
  SharedDtor();
}

void UnassignLeaderResponse::SharedDtor() {
}

void UnassignLeaderResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnassignLeaderResponse& UnassignLeaderResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnassignLeaderResponse_organizations_2forganizations_2eproto.base);
  return *internal_default_instance();
}


void UnassignLeaderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mruv.organizations.UnassignLeaderResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* UnassignLeaderResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnassignLeaderResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mruv.organizations.UnassignLeaderResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mruv.organizations.UnassignLeaderResponse)
  return target;
}

size_t UnassignLeaderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mruv.organizations.UnassignLeaderResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnassignLeaderResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mruv.organizations.UnassignLeaderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnassignLeaderResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnassignLeaderResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mruv.organizations.UnassignLeaderResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mruv.organizations.UnassignLeaderResponse)
    MergeFrom(*source);
  }
}

void UnassignLeaderResponse::MergeFrom(const UnassignLeaderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mruv.organizations.UnassignLeaderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UnassignLeaderResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mruv.organizations.UnassignLeaderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnassignLeaderResponse::CopyFrom(const UnassignLeaderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mruv.organizations.UnassignLeaderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnassignLeaderResponse::IsInitialized() const {
  return true;
}

void UnassignLeaderResponse::InternalSwap(UnassignLeaderResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnassignLeaderResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace organizations
}  // namespace mruv
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mruv::organizations::CreateOrganizationRequest* Arena::CreateMaybeMessage< ::mruv::organizations::CreateOrganizationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::organizations::CreateOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::organizations::CreateOrganizationResponse* Arena::CreateMaybeMessage< ::mruv::organizations::CreateOrganizationResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::organizations::CreateOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::organizations::GetOrganizationRequest* Arena::CreateMaybeMessage< ::mruv::organizations::GetOrganizationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::organizations::GetOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::organizations::GetOrganizationResponse* Arena::CreateMaybeMessage< ::mruv::organizations::GetOrganizationResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::organizations::GetOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::organizations::UpdateOrganizationRequest* Arena::CreateMaybeMessage< ::mruv::organizations::UpdateOrganizationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::organizations::UpdateOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::organizations::UpdateOrganizationResponse* Arena::CreateMaybeMessage< ::mruv::organizations::UpdateOrganizationResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::organizations::UpdateOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::organizations::DeleteOrganizationRequest* Arena::CreateMaybeMessage< ::mruv::organizations::DeleteOrganizationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::organizations::DeleteOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::organizations::DeleteOrganizationResponse* Arena::CreateMaybeMessage< ::mruv::organizations::DeleteOrganizationResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::organizations::DeleteOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::organizations::AssignLeaderRequest* Arena::CreateMaybeMessage< ::mruv::organizations::AssignLeaderRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::organizations::AssignLeaderRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::organizations::AssignLeaderResponse* Arena::CreateMaybeMessage< ::mruv::organizations::AssignLeaderResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::organizations::AssignLeaderResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::organizations::UnassignLeaderRequest* Arena::CreateMaybeMessage< ::mruv::organizations::UnassignLeaderRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::organizations::UnassignLeaderRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mruv::organizations::UnassignLeaderResponse* Arena::CreateMaybeMessage< ::mruv::organizations::UnassignLeaderResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mruv::organizations::UnassignLeaderResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
